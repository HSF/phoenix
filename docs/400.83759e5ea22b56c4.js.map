{"version":3,"file":"400.83759e5ea22b56c4.js","mappings":"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","names":["before3DDraw","painter","fp","getFramePainter","mode3d","getObject","toplevel","main","getMainPainter","isFunc","drawExtras","Promise","resolve","drawDummy3DGeom","then","geop","pp","getPadPainter","_disable_dragging","_dummy","get3DBox","extendCustomBoundingBox","obj","this","fP","length","box","min","x","y","z","max","k","Math","drawPolyMarker3D","_drawPolyMarker3D","apply","arguments","_asyncToGenerator","isObject","grx","gry","grz","$fp","drawPolyMarker3Dplain","bind","drawPolyLine3D","_drawPolyLine3D","line","limit","fN","p","pnts","n","push","lines","createLineSegments","create3DLineMaterial","add3DMesh","render3D"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/draw/draw3d.mjs"],"sourcesContent":["import { isObject, isFunc } from '../core.mjs';\nimport { createLineSegments, create3DLineMaterial } from '../base/base3d.mjs';\nimport { drawDummy3DGeom } from '../geom/TGeoPainter.mjs';\nimport { drawPolyMarker3D as drawPolyMarker3Dplain } from './TPolyMarker3D.mjs';\n\n\n/** @summary Prepare frame painter for 3D drawing\n  * @private */\nfunction before3DDraw(painter) {\n   const fp = painter.getFramePainter();\n\n   if (!fp?.mode3d || !painter.getObject())\n      return null;\n\n   if (fp?.toplevel)\n      return fp;\n\n   const main = painter.getMainPainter();\n\n   if (main && !isFunc(main.drawExtras))\n      return null;\n\n   const pr = main ? Promise.resolve(main) : drawDummy3DGeom(painter);\n\n   return pr.then(geop => {\n      const pp = painter.getPadPainter();\n      if (pp) pp._disable_dragging = true;\n\n      if (geop._dummy && isFunc(painter.get3DBox))\n         geop.extendCustomBoundingBox(painter.get3DBox());\n      return geop.drawExtras(painter.getObject(), '', true, true);\n   });\n}\n\n/** @summary Function to extract 3DBox for poly marker and line\n  * @private */\nfunction get3DBox() {\n   const obj = this.getObject();\n   if (!obj?.fP.length)\n      return null;\n   const box = { min: { x: 0, y: 0, z: 0 }, max: { x: 0, y: 0, z: 0 } };\n\n   for (let k = 0; k < obj.fP.length; k += 3) {\n      const x = obj.fP[k],\n            y = obj.fP[k + 1],\n            z = obj.fP[k + 2];\n      if (k === 0) {\n         box.min.x = box.max.x = x;\n         box.min.y = box.max.y = y;\n         box.min.z = box.max.z = z;\n      } else {\n         box.min.x = Math.min(x, box.min.x);\n         box.max.x = Math.max(x, box.max.x);\n         box.min.y = Math.min(y, box.min.y);\n         box.max.y = Math.max(y, box.max.y);\n         box.min.z = Math.min(z, box.min.z);\n         box.max.z = Math.max(z, box.max.z);\n      }\n   }\n\n   return box;\n}\n\n\n/** @summary direct draw function for TPolyMarker3D object (optionally with geo painter)\n  * @private */\nasync function drawPolyMarker3D() {\n   this.get3DBox = get3DBox;\n\n   const fp = before3DDraw(this);\n\n   if (!isObject(fp) || !fp.grx || !fp.gry || !fp.grz)\n      return fp;\n\n   this.$fp = fp;\n\n   return drawPolyMarker3Dplain.bind(this)();\n}\n\n/** @summary Direct draw function for TPolyLine3D object\n  * @desc Takes into account dashed properties\n  * @private */\nasync function drawPolyLine3D() {\n   this.get3DBox = get3DBox;\n\n   const line = this.getObject(),\n         fp = before3DDraw(this);\n\n   if (!isObject(fp) || !fp.grx || !fp.gry || !fp.grz)\n      return fp;\n\n   const limit = 3*line.fN, p = line.fP, pnts = [];\n\n   for (let n = 3; n < limit; n += 3) {\n      pnts.push(fp.grx(p[n-3]), fp.gry(p[n-2]), fp.grz(p[n-1]),\n                fp.grx(p[n]), fp.gry(p[n+1]), fp.grz(p[n+2]));\n   }\n\n   const lines = createLineSegments(pnts, create3DLineMaterial(this, line));\n\n   fp.add3DMesh(lines, this, true);\n\n   fp.render3D(100);\n\n   return true;\n}\n\nexport { drawPolyMarker3D, drawPolyLine3D };\n"],"x_google_ignoreList":[0]}