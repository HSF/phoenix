{"version":3,"file":"919.fd01d519277e3b1a.js","mappings":"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","names":["RObjectPainter","ObjectPainter","constructor","dom","obj","opt","csstype","super","this","v7EvalAttr","name","dflt","getObject","cssprefix","type_check","res","undefined","typ1","typ2","parseFloat","fAttr","m","value","v","rstyle","fBlocks","blks","k","length","block","selector","fId","fCssClass","map","toLowerCase","v7SetAttr","v7EvalLength","sizepx","Math","round","norm","px","val","operand","pos","console","log","slice","Number","isFinite","v7EvalColor","isStr","pp","getPadPainter","_auto_color_cnt","pal","getHistPalette","cnt","num","_num_primitives","getColorOrdinal","_auto_colors","error","ordinal","v7EvalFont","dflts","fontScale","size","rfont","_dfltRFont","fFamily","fStyle","fWeight","text_angle","text_align","align","text_color","color","font_family","font_style","font_weight","text_size","getPadHeight","handler","FontHandler","setNameStyleWeight","setAngle","setAlign","setColor","createv7AttFill","prefix","pattern","createAttFill","color_as_svg","createv7AttLine","width","style","createAttLine","lineatt","setBorder","createv7AttMarker","refsize","createAttMarker","v7AttrChange","req","kind","snapid","_typename","nsREX","ids","names","values","update","push","parseInt","JSON","stringify","v7SendAttrChanges","do_update","canp","getCanvPainter","v7SubmitRequest","method","isFunc","submitDrawableRequest","_pending_request","assignSnapId","id","p","v7CommMode","_websocket","v7NormalMode","v7OfflineMode","RAxisPainter","arg1","axis","Object","assign","AxisPainterMethods","initAxisPainter","embedded","cleanup","axis_g","cleanupAxisPainter","getAxisType","configureZAxis","fp","kAxisNormal","_log","logbase","abs","exp","logz","configureAxis","min","max","smin","smax","vertical","frame_range","axis_range","opts","full_min","full_max","_symlog","reverse","kAxisTime","timeoffset","toffset","fLabelsIndex","kAxisLabels","own_labels","labels","func","d3_scaleTime","domain","convertDate","symlog","d3_scaleSymlog","constant","d3_scaleLog","base","d3_scaleLinear","scale_min","scale_max","gr_range","range","axis_shift","gr","format","ndiv","nticks","nticks2","nticks3","floor","scale_range","tf2","chooseTimeFormat","tf1","tfunc1","tfunc2","d3_timeFormat","formatTime","noexp","moreloglabels","formatLog","formatLabels","order","ndig","formatNormal","getScaleMin","getScaleMax","d","indx","fNBinsNoOver","i","pair","second","first","fLabels","createTicks","only_major_as_array","optionNoexp","optionNoopt","optionInt","noticksopt","ticks","produceTicks","handle","nminor","nmiddle","nmajor","minor","middle","major","delta","unshift","reset","next","doround","tick","grpos","last_major","next_major_grpos","get_modifier","maxorder","minorder","exclorder3","maxtick","mintick","ord1","log10","ord2","bestorder","bestndig","bestlen","lbls","totallen","lbl","indexOf","warn","isCenteredLabels","processLabelsMove","arg","optionUnlab","label_g","select","box","node","getBBox","append","classed","attr","x","y","height","call","addHighlightStyle","drag_pos0","offset","property","remove","side","labelsOffset","changeAxisAttr","scalingSize","addTitleDrag","title_g","settings","MoveResize","isBatchMode","acc_x","acc_y","new_x","new_y","alt_pos","curr_indx","drag_rect","drag_move","d3_drag","subject","on","evnt","sourceEvent","preventDefault","stopPropagation","title_length","titlePos","off","swap","isReverseAxis","title_align","isTitleRotated","dx","dy","set_x","set_y","besti","makeTranslate","basepos","titleOffset","isInsideGrRange","delta1","delta2","getGrRange","drawMainLine","ending","endingSize","endingStyle","sz","sz7","drawTicks","main_draw","ticks_plusminus","ticksSide","h1","ticksSize","h2","startingSize","ticksColor","ticksWidth","gap0","gap","drawLabels","gaps","_this","_asyncToGenerator","center_lbls","rotate_lbls","labelsFont","angle","lbl_pos","textscale","maxtextlen","lbls_tilt","max_lbl_width","max_lbl_height","process_drawtext_ready","painter","result_width","result_height","textwidth","maxwidth","gap_before","gap_after","scale","scaleTextDrawing","fix_offset","fix_coord","lastpos","startTextDrawing","text","latex","draw_g","post_process","drawText","axis_step","has_obstacle","formatExp","finishTextDrawing","then","selectAll","each","txt","d3_select","tr","tilt_height","sin","PI","cos","addZoomingRect","lgaps","Zooming","disable_zooming","titleFont","drawTitle","_this2","fTitle","rotated","title_shift_x","title_shift_y","title_basepos","titleCenter","titleOpposite","extractDrawAttributes","rect","getPadRect","roundAngle","maxTickSize","drawAxis","layer","transform","_this3","standalone","selectChild","empty","tgaps","Promise","resolve","setAfterDrawHandler","_afterDrawAgain","drawAxisAgain","drawAxisOtherPlace","only_ticks","zoomStandalone","redraw","drawable","getCoordinate","fPos","labels_len","len","getPadLength","fVertical","fLength","createG","promise","ContextMenu","createMenu","menu","add","fillAxisContextMenu","show","addDragHandler","only_move","positionChanged","ZoomWheel","d3_pointer","item","analyzeWheelEvent","changed","drag","xn","yn","fHoriz","fArr","fVert","submitCanvExec","toFixed","redraw_mode","changes","arguments","redrawPad","changeAxisLog","getFramePainter","unzoom","addchk","input","addRColorMenu","col","addSizeMenu","addSelectMenu","addRAttrTextItems","noangle","noalign","change","t","flag","RFramePainter","tframe","mode3d","xmin","xmax","ymin","ymax","axes_drawn","keys_handler","projection","v7_frame","is_root6","setFrameActive","enabledKeys","HandleKeys","control","enableKeys","setLastEventPos","pnt","fLastEventPnt","getLastEventPos","updateAttributes","force","fX1NDC","modified_NDC","gStyle","fPadLeftMargin","fY1NDC","fPadBottomMargin","fX2NDC","fPadRightMargin","fY2NDC","fPadTopMargin","fillatt","getProjectionFunc","getEarthProjectionFunc","recalculateRange","Proj","scale_ymin","scale_ymax","pnts","scale_xmin","scale_xmax","original_xmin","original_xmax","original_ymin","original_ymax","n","drawGrids","getFrameSvg","h","getFrameHeight","w","getFrameWidth","gridx","gridy","grid_style","getSvgLineStyle","fGridStyle","grid_color","fGridColor","getColor","x_handle","draw_grid","grid","swap_xy","fGridWidth","y_handle","axisAsText","toUpperCase","toPrecision","_setAxisRange","vmin","vmax","nmin","nmax","nzmin","nzmax","zoomChangedInteractive","setAxesRanges","xaxis","yaxis","zaxis","zmin","zmax","setAxes2Ranges","second_x","second_y","x2axis","y2axis","createXY","self_drawaxes","cleanXY","ndim","v6axes","reverse_x","reverse_y","logx","logy","scales_ndim","extra_y_space","zoom_xmin","zoom_xmax","zoom_ymin","zoom_ymax","clTAxis","create","TAxisPainter","getDom","setPadName","getPadName","symlog_y","symlog_x","logcheckmin","logminfactor","assignFrameMembers","log_min_nz","ymin_nz","hasDrawnAxes","drawAxes","ticksx","ticksy","sidex","sidey","cleanupAxes","draw_swapside","draw_ticks","z_handle","draw_horiz","draw_vertical","pr","_fast_drawing","disable_ticks","pr1","invert_side","disable_x_draw","getFrameY","pr2","disable_y_draw","_frame_x","can_adjust_frame","all","arr","drawAxes2","zoom_x2min","zoom_x2max","scale_x2min","scale_x2max","x2min","x2max","x2_handle","zoom_y2min","zoom_y2max","scale_y2min","scale_y2max","y2min","y2max","y2_handle","getGrFuncs","use_x2","grx2","use_y2","gry2","grx","gry","revertAxis","sizeChanged","clean","grname","cleanFrameDrawings","create3DScene","window","removeEventListener","_click_handler","_dblclick_handler","frame_painter_ref","lm","tm","trans","top_rect","main_svg","rotate","fixpos","options","RotateFrame","FixFrame","_frame_y","_frame_width","_frame_height","_frame_rotate","_frame_fixpos","getLayerSvg","rx","ry","addInteractivity","getFrameX","getFrameRect","hint_delta_x","hint_delta_y","configureUserClickHandler","configureUserDblclickHandler","zoom","zoom_x","zoom_y","zoom_z","unzoom_x","unzoom_y","unzoom_z","r_x","r_y","r_z","is_any_check","flags","checkZooming","canZoomInside","zoom_zmin","zoom_zmax","forEachPainter","ranges","interactiveRedraw","zoomSingle","zoom_v","unzoom_v","isAxisZoomed","dox","doy","doz","_this4","zoom_changed_x","zoom_changed_y","zoom_changed_z","fld","fillObjectOfflineMenu","changeFrameAttr","fillContextMenu","alone","isTooltipAllowed","setTooltipAllowed","addAttributesMenu","forEach","fmt","saveAs","revertPoint","showAxisStatus","axis_name","hint_name","axis_value","showObjectStatus","addKeysHandler","FrameInteractive","addFrameKeysHandler","for_second_axes","addBasicInteractivity","addFrameInteractivity","setRootPadRange","toggleAxisLog","RPadPainter","pad","iscan","this_pad_name","fObjectID","internals","id_counter","painters","has_canvas","forEachPainterInPad","selectDom","batch_mode","isRoot6","isEditable","svg_this_pad","getPadSvg","getMainPainter","main_painter_ref","setMainPainter","_doing_draw","svg_p","pads_cache","_pad_x","_pad_y","_pad_width","_pad_height","draw_object","pad_frame","selectActivePad","active","getPadWidth","getPadLog","szx","szy","getRootPad","cleanPrimitives","splice","removePrimitive","prim","resindx","isSecondary","findInPrimitives","objname","objtype","findPainterFor","selobj","selname","seltype","find","pobj","fName","fDfltPalette","fColors","fOrdinal","fColor","fInterpolate","fNormalized","addMethods","getNumPainters","userfunc","sub","registerForPadEvents","receiver","pad_events_receiver","producePadEvent","what","padpainter","position","place","selectObjectPainter","istoppad","getAbsPosInCanvas","setFastDrawing","was_fast","SmallPad","showPadButtons","isGrayscale","setGrayscale","createCanvasSvg","check_resize","new_size","btns","frect","factor","svg","_fixed_size","getCanvSvg","testMainResize","render_to","setTopPainter","online_canvas","enlargePad","padContextMenu","ToolBarSide","ToolBarVert","fWinSize","getElementRect","lmt","DarkMode","alignButtons","drawItemNameOnCanvas","is_dblclick","is_escape","enlargeMain","svg_can","pad_enlarged","hasObjectsToDraw","checkResize","createPadSvg","only_resize","svg_parent","pad_name","pad_visible","svg_pad","svg_rect","fSize","addPadInteractive","color0","fBorderMode","constants","Embed3D","Overlay","$userInteractive","fPrimitives","syncDraw","entry","findIndex","e","resolveFunc","confirmDraw","shift","drawObject","drawPrimitives","_start_tm","Date","getTime","op","isObject","_primitive","spenttm","processPadTooltipEvent","hints","processTooltipEvent","nproc","hint","user_info","changeDarkMode","mode","addSettingsMenu","hasMenuBar","actiavteMenuBar","hasEventStatus","activateStatusBar","canStatusBar","fname","fillObjectExecMenu","reason","sync_promise","showsubitems","redrawNext","isPromise","getActivePad","needRedrawByResize","elem","checkCanvasResize","_ignore_resize","getPromise","embed_canvas","_resize_tmout","clearTimeout","setTimeout","cw","ch","sendWebsocket","updateObject","addObjectPainter","objpainter","lst","extractTObjectProp","snap","fColIndex","fColValue","colors","root_colors","getRootColors","pattr","fObject","assignObject","fCssType","fOption","extract_color","member_name","attr_name","addColor","fLineColor","fLineWidth","fLineStyle","fFillColor","fFillStyle","fMarkerColor","fMarkerStyle","fMarkerSize","fTextColor","fTextAlign","fTextAngle","fTextSize","drawNextSnap","_snaps_map","next_rstyle","fDummy","redrawPadSnap","ppainter","fDrawable","subpad","decodeOptions","addToPadPrimitives","addPadButtons","prev_name","selectCurrentPad","webSnapIds","kNone","kObject","kColors","kStyle","kPalette","fKind","ListOfColors","fString","palette","custom_palette","ColorPalette","clTFrame","$dummy","findSnap","onlyid","check","checkid","document","title","mainid","use_openui","brlayout","BrowserLayout","setDom","drawing_divid","registerForResize","isanyfound","isanyremove","removePadButtons","createImage","_this5","produceImage","separ","itemContextMenu","rrr","getBoundingClientRect","clientX","left","clientY","top","postponePromise","selkind","selp","isInteger","full_canvas","filename","imgdata","saveFile","encodeURIComponent","findActivePad","file_format","_this6","use_frame","items","defs","prnt","insertBefore","firstChild","btns_node","btns_prnt","parentNode","btns_next","nextSibling","main","render3D","access3dKind","can3d","Embed","sz2","getSizeFor3d","canvas","renderer","domElement","dataUrl","toDataURL","foreign","clname","svg_frame","frame_node","frame_next","img","insert","reset_tranform","compressSVG","innerHTML","svgToImage","clickPadButton","funcname","closeMenu","getDimension","shown","getClassName","getObjectName","done","prs","clickButton","addPadButton","btn","tooltip","keyname","ToolBar","_buttons","cp","is_online","PadButtonsHandler","frame_painter","sign","getV","getRect","user","DrawOptions","GlobalColors","LocalColors","IgnorePalette","fLogx","fLogy","fLogz","fGridx","fGridy","fTickx","fTicky","draw","matchObjectType","clTPad","HEX_CHARS","split","EXTRA","SHIFT","K","Sha256","is224","blocks","h0","h3","h4","h5","h6","h7","start","bytes","hBytes","finalized","hashed","message","notString","code","index","charCodeAt","lastByteIndex","hash","finalize","j","s0","s1","maj","t1","t2","ab","da","cd","bc","a","b","c","f","g","chromeBugWorkAround","digest","hex","toString","sha256_2","as_hex","HMAC","key","o","kbis","sha256","ko","ki","Uint8Array","LongPollSocket","addr","_raw","_handle","_counter","path","connid","raw","counter","nextRequest","data","url","reqmode","post","getConnArgs","browser","qt5","btoa_func","createHttpRequest","processRequest","u8Arr","str","String","fromCharCode","trim","getResponseHeader","extra_hdr","send","_offset","onerror","onclose","dummy_tmout","onopen","onmessage","close","FileDumpSocket","protocol","httpRequest","getProtocol","parse","nextOperation","wait_for_file","chid","provideData","WebWindowHandle","socket_kind","credits","state","cansend","ackn","send_seq","recv_seq","getUserArgs","field","user_args","setUserArgs","args","setReceiver","invokeReceiver","brdcst","arg2","channels","ks","keys","msg","wait_first_recv","channel","force_queue","msgqueue","ready","reserveQueueItem","markQueueItemDone","_msg","_len","processQueue","_loop_msgqueue","front","master","channelid","timerid","canSend","numsend","getRelCanSend","keepAlive","sendLast","tmout","_delayed","inject","immediate","bind","Array","isArray","resizeWindow","cef3","resizeTo","createChannel","freechannelid","isConnected","getChannelId","setHRef","href","decodeUrl","get","token","getHRef","relative_path","ddd","lastIndexOf","ntry","connect","retry_open","first_time","location","showProgress","replace","WebSocket","next_binary","binchid","next_binary_hash","Blob","reader","FileReader","qitem","onload","event","result","target","readAsArrayBuffer","i0","i1","seq_id","i2","credit","i3","i4","newkey","URL","history","replaceState","sessionStorage","setItem","reload","ArrayBuffer","err","askReload","addReloadKeyHandler","addEventListener","ctrlKey","RCanvasPainter","tooltip_allowed","Tooltip","v7canvas","_submreq","_changed_layout","setLayoutKind","getLayoutKind","origin","main_selector","changeLayout","layout_kind","sidebar2","sidebar","removeChild","html","appendChild","GridDisplay","getGridFrame","resize","toggleProjection","proj_painter","X","Y","showUI5ProjectionArea","layout","drawProjection","drawInSidePanel","canv","sel","testUI5","showMessage","saveCanvasAsFile","sendSaveCommand","closeWebsocket","useWebsocket","websocketTimeout","_tmouts","onWebsocketOpened","onWebsocketClosed","closeCurrentWindow","onWebsocketMsg","p1","resizeBrowser","redrawObject","processDrawableReply","cmdid","cmd","reply","showUI5Panel","conn","cpainter","panel_handle","panel_name","onWebsocketError","hist","that","showSection","_requests","prevreq","_tm","_nextreq","_nextreqid","reqid","_kind","_painter","_method","submitMenuRequest","menukind","menureqid","submitExec","exec","subelem","processChanges","activateGed","hasStatus","hp","getHPainter","hasStatusLine","createStatusLine","showCanvasStatus","msgs","showStatus","hasGed","hasContent","removeGed","ged_view","getController","cleanupGed","destroy","deleteContent","getUi5PanelData","jsroot","core","toJSON","loadScript","EAxisBits","rb","getColorExec","createBrowserBtns","ToolbarIcons","createSVG","diamand","toggleKind","circle","cross","setBrowserContent","setBrowserTitle","toggleBrowserKind","loadOpenui5","sap","ui","require","JSONModel","XMLView","oModel","viewName","viewData","oGed","setModel","placeAt","padEventsReceiver","produceJSON","fullW","fullH","can","nocanvas","normal_canvas","drawRPadSnapshot","ensureRCanvas","_x","_x2","_ensureRCanvas","apply","frame_kind","reject","Error","drawRFrameTitle","fx","fy","fw","ph","title_width","textFont","title_margin","title_height","fText","minwidth","minheight","no_change_x","drawRFont","font","fSrc","p2","base64","fDefault","drawRAxis","drawRFrame","registerMethods","extractRColor","rcolor","getContourIndex","zc","cntr","fContour","mid","l","r","fCustomContour","getContourColor","zindx","getContour","deleteContour","calcColor","entry1","entry2","dist","r1","r2","col1","d3_rgb","col2","createPaletteColors","setFullRange","createContour","nlevels","zminpositive","colzmin","colzmax","logmin","dz","level"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/base/RObjectPainter.mjs","../node_modules/jsroot/modules/gpad/RAxisPainter.mjs","../node_modules/jsroot/modules/gpad/RFramePainter.mjs","../node_modules/jsroot/modules/gpad/RPadPainter.mjs","../node_modules/jsroot/modules/base/sha256.mjs","../node_modules/jsroot/modules/webwindow.mjs","../node_modules/jsroot/modules/gpad/RCanvasPainter.mjs"],"sourcesContent":["import { isStr, isFunc, nsREX } from '../core.mjs';\nimport { FontHandler } from './FontHandler.mjs';\nimport { ObjectPainter } from './ObjectPainter.mjs';\n\n\nconst kNormal = 1, /* kLessTraffic = 2, */ kOffline = 3;\n\nclass RObjectPainter extends ObjectPainter {\n\n   constructor(dom, obj, opt, csstype) {\n      super(dom, obj, opt);\n      this.csstype = csstype;\n   }\n\n   /** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */\n   v7EvalAttr(name, dflt) {\n      const obj = this.getObject();\n      if (!obj) return dflt;\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      const type_check = res => {\n         if (dflt === undefined) return res;\n         const typ1 = typeof dflt, typ2 = typeof res;\n         if (typ1 === typ2) return res;\n         if (typ1 === 'boolean') {\n            if (typ2 === 'string') return (res !== '') && (res !== '0') && (res !== 'no') && (res !== 'off');\n            return !!res;\n         }\n         if ((typ1 === 'number') && (typ2 === 'string'))\n            return parseFloat(res);\n         return res;\n      };\n\n      if (obj.fAttr?.m) {\n         const value = obj.fAttr.m[name];\n         if (value) return type_check(value.v); // found value direct in attributes\n      }\n\n      if (this.rstyle?.fBlocks) {\n         const blks = this.rstyle.fBlocks;\n         for (let k = 0; k < blks.length; ++k) {\n            const block = blks[k],\n                  match = (this.csstype && (block.selector === this.csstype)) ||\n                          (obj.fId && (block.selector === ('#' + obj.fId))) ||\n                          (obj.fCssClass && (block.selector === ('.' + obj.fCssClass)));\n\n            if (match && block.map?.m) {\n               const value = block.map.m[name.toLowerCase()];\n               if (value) return type_check(value.v);\n            }\n         }\n      }\n\n      return dflt;\n   }\n\n   /** @summary Set v7 attributes value */\n   v7SetAttr(name, value) {\n      const obj = this.getObject();\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      if (obj?.fAttr?.m)\n         obj.fAttr.m[name] = { v: value };\n   }\n\n   /** @summary Decode pad length from string, return pixel value */\n   v7EvalLength(name, sizepx, dflt) {\n      if (sizepx <= 0) sizepx = 1;\n\n      const value = this.v7EvalAttr(name);\n\n      if (value === undefined)\n         return Math.round(dflt*sizepx);\n\n      if (typeof value === 'number')\n         return Math.round(value*sizepx);\n\n      if (value === null)\n         return 0;\n\n      let norm = 0, px = 0, val = value, operand = 0, pos = 0;\n\n      while (val) {\n         // skip empty spaces\n         while ((pos < val.length) && ((val[pos] === ' ') || (val[pos] === '\\t')))\n            ++pos;\n\n         if (pos >= val.length)\n            break;\n\n         if ((val[pos] === '-') || (val[pos] === '+')) {\n            if (operand) {\n               console.log('Fail to parse RPadLength ' + value);\n               return dflt;\n            }\n            operand = (val[pos] === '-') ? -1 : 1;\n            pos++;\n            continue;\n         }\n\n         if (pos > 0) { val = val.slice(pos); pos = 0; }\n\n         while ((pos < val.length) && (((val[pos] >= '0') && (val[pos] <= '9')) || (val[pos] === '.'))) pos++;\n\n         const v = parseFloat(val.slice(0, pos));\n         if (!Number.isFinite(v)) {\n            console.log(`Fail to parse RPadLength ${value}`);\n            return Math.round(dflt*sizepx);\n         }\n\n         val = val.slice(pos);\n         pos = 0;\n         if (!operand) operand = 1;\n         if (val && (val[0] === '%')) {\n            val = val.slice(1);\n            norm += operand*v*0.01;\n         } else if ((val.length > 1) && (val[0] === 'p') && (val[1] === 'x')) {\n            val = val.slice(2);\n            px += operand*v;\n         } else\n            norm += operand*v;\n\n         operand = 0;\n      }\n\n      return Math.round(norm*sizepx + px);\n   }\n\n   /** @summary Evaluate RColor using attribute storage and configured RStyle */\n   v7EvalColor(name, dflt) {\n      let val = this.v7EvalAttr(name, '');\n      if (!val || !isStr(val)) return dflt;\n\n      if (val === 'auto') {\n         const pp = this.getPadPainter();\n         if (pp?._auto_color_cnt !== undefined) {\n            const pal = pp.getHistPalette(),\n                  cnt = pp._auto_color_cnt++;\n            let num = pp._num_primitives - 1;\n            if (num < 2) num = 2;\n            val = pal ? pal.getColorOrdinal((cnt % num) / num) : 'blue';\n            if (!this._auto_colors) this._auto_colors = {};\n            this._auto_colors[name] = val;\n         } else if (this._auto_colors && this._auto_colors[name])\n            val = this._auto_colors[name];\n         else {\n            console.error(`Autocolor ${name} not defined yet - please check code`);\n            val = '';\n         }\n      } else if (val[0] === '[') {\n         const ordinal = parseFloat(val.slice(1, val.length-1));\n         val = 'black';\n         if (Number.isFinite(ordinal)) {\n             const pal = this.getPadPainter()?.getHistPalette();\n             if (pal) val = pal.getColorOrdinal(ordinal);\n         }\n      }\n      return val;\n   }\n\n   /** @summary Evaluate RAttrText properties\n     * @return {Object} FontHandler, can be used directly for the text drawing */\n   v7EvalFont(name, dflts, fontScale) {\n      if (!dflts)\n         dflts = {};\n      else if (typeof dflts === 'number')\n         dflts = { size: dflts };\n\n      const pp = this.getPadPainter(),\n            rfont = pp?._dfltRFont || { fFamily: 'Arial', fStyle: '', fWeight: '' },\n            text_angle = this.v7EvalAttr(name + '_angle', 0),\n            text_align = this.v7EvalAttr(name + '_align', dflts.align || 'none'),\n            text_color = this.v7EvalColor(name + '_color', dflts.color || 'none'),\n            font_family = this.v7EvalAttr(name + '_font_family', rfont.fFamily || 'Arial'),\n            font_style = this.v7EvalAttr(name + '_font_style', rfont.fStyle || ''),\n            font_weight = this.v7EvalAttr(name + '_font_weight', rfont.fWeight || '');\n       let text_size = this.v7EvalAttr(name + '_size', dflts.size || 12);\n\n       if (isStr(text_size)) text_size = parseFloat(text_size);\n       if (!Number.isFinite(text_size) || (text_size <= 0)) text_size = 12;\n       if (!fontScale) fontScale = pp?.getPadHeight() || 100;\n\n       const handler = new FontHandler(null, text_size, fontScale);\n       handler.setNameStyleWeight(font_family, font_style, font_weight);\n\n       if (text_angle) handler.setAngle(360 - text_angle);\n       if (text_align !== 'none') handler.setAlign(text_align);\n       if (text_color !== 'none') handler.setColor(text_color);\n\n       return handler;\n    }\n\n   /** @summary Create this.fillatt object based on v7 fill attributes */\n   createv7AttFill(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'fill_';\n\n      const color = this.v7EvalColor(prefix + 'color', ''),\n            pattern = this.v7EvalAttr(prefix + 'style', 0);\n\n      this.createAttFill({ pattern, color, color_as_svg: true });\n   }\n\n   /** @summary Create this.lineatt object based on v7 line attributes */\n   createv7AttLine(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'line_';\n\n      const color = this.v7EvalColor(prefix + 'color', 'black'),\n            width = this.v7EvalAttr(prefix + 'width', 1),\n            style = this.v7EvalAttr(prefix + 'style', 1),\n            pattern = this.v7EvalAttr(prefix + 'pattern');\n\n      this.createAttLine({ color, width, style, pattern });\n\n      if (prefix === 'border_')\n         this.lineatt.setBorder(this.v7EvalAttr(prefix + 'rx', 0), this.v7EvalAttr(prefix + 'ry', 0));\n   }\n\n    /** @summary Create this.markeratt object based on v7 attributes */\n   createv7AttMarker(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'marker_';\n\n      const color = this.v7EvalColor(prefix + 'color', 'black'),\n            size = this.v7EvalAttr(prefix + 'size', 0.01),\n            style = this.v7EvalAttr(prefix + 'style', 1),\n            refsize = (size >= 1) ? 1 : (this.getPadPainter()?.getPadHeight() || 100);\n\n      this.createAttMarker({ color, size, style, refsize });\n   }\n\n   /** @summary Create RChangeAttr, which can be applied on the server side\n     * @private */\n   v7AttrChange(req, name, value, kind) {\n      if (!this.snapid)\n         return false;\n\n      if (!req._typename) {\n         req._typename = `${nsREX}RChangeAttrRequest`;\n         req.ids = [];\n         req.names = [];\n         req.values = [];\n         req.update = true;\n      }\n\n      if (this.cssprefix) name = this.cssprefix + name;\n      req.ids.push(this.snapid);\n      req.names.push(name);\n      let obj = null;\n\n      if ((value === null) || (value === undefined)) {\n        if (!kind) kind = 'none';\n        if (kind !== 'none') console.error(`Trying to set ${kind} for none value`);\n      }\n\n      if (!kind) {\n         switch (typeof value) {\n            case 'number': kind = 'double'; break;\n            case 'boolean': kind = 'boolean'; break;\n         }\n      }\n\n      obj = { _typename: `${nsREX}RAttrMap::` };\n      switch (kind) {\n         case 'none': obj._typename += 'NoValue_t'; break;\n         case 'boolean': obj._typename += 'BoolValue_t'; obj.v = !!value; break;\n         case 'int': obj._typename += 'IntValue_t'; obj.v = parseInt(value); break;\n         case 'double': obj._typename += 'DoubleValue_t'; obj.v = parseFloat(value); break;\n         default: obj._typename += 'StringValue_t'; obj.v = isStr(value) ? value : JSON.stringify(value); break;\n      }\n\n      req.values.push(obj);\n      return true;\n   }\n\n   /** @summary Sends accumulated attribute changes to server */\n   v7SendAttrChanges(req, do_update) {\n      const canp = this.getCanvPainter();\n      if (canp && req?._typename) {\n         if (do_update !== undefined)\n            req.update = !!do_update;\n         canp.v7SubmitRequest('', req);\n      }\n   }\n\n   /** @summary Submit request to server-side drawable\n    * @param kind defines request kind, only single request a time can be submitted\n    * @param req is object derived from DrawableRequest, including correct _typename\n    * @param method is method of painter object which will be called when getting reply */\n   v7SubmitRequest(kind, req, method) {\n      const canp = this.getCanvPainter();\n      if (!isFunc(canp?.submitDrawableRequest)) return null;\n\n      // special situation when snapid not yet assigned - just keep ref until snapid is there\n      // maybe keep full list - for now not clear if really needed\n      if (!this.snapid) {\n         this._pending_request = { kind, req, method };\n         return req;\n      }\n\n      return canp.submitDrawableRequest(kind, req, this, method);\n   }\n\n   /** @summary Assign snapid to the painter\n     * @desc Overwrite default method */\n   assignSnapId(id) {\n      this.snapid = id;\n      if (this.snapid && this._pending_request) {\n         const p = this._pending_request;\n         this.v7SubmitRequest(p.kind, p.req, p.method);\n         delete this._pending_request;\n      }\n   }\n\n   /** @summary Return communication mode with the server\n     * @desc\n     * kOffline means no server there,\n     * kLessTraffic advise not to send commands if offline functionality available\n     * kNormal is standard functionality with RCanvas on server side */\n   v7CommMode() {\n      const canp = this.getCanvPainter();\n      if (!canp || !canp.submitDrawableRequest || !canp._websocket)\n         return kOffline;\n\n      return kNormal;\n   }\n\n   v7NormalMode() { return this.v7CommMode() === kNormal; }\n\n   v7OfflineMode() { return this.v7CommMode() === kOffline; }\n\n} // class RObjectPainter\n\nexport { RObjectPainter };\n","import { settings, isFunc } from '../core.mjs';\nimport { select as d3_select, pointer as d3_pointer,\n         drag as d3_drag, timeFormat as d3_timeFormat,\n         scaleTime as d3_scaleTime, scaleSymlog as d3_scaleSymlog,\n         scaleLog as d3_scaleLog, scaleLinear as d3_scaleLinear } from '../d3.mjs';\nimport { makeTranslate, addHighlightStyle } from '../base/BasePainter.mjs';\nimport { AxisPainterMethods, chooseTimeFormat } from './TAxisPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { kAxisLabels, kAxisNormal, kAxisTime } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Axis painter for v7\n *\n * @private\n */\n\nclass RAxisPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, arg1, axis, cssprefix) {\n      const drawable = cssprefix ? arg1.getObject() : arg1;\n      super(dom, drawable, '', cssprefix ? arg1.csstype : 'axis');\n      Object.assign(this, AxisPainterMethods);\n      this.initAxisPainter();\n\n      this.axis = axis;\n      if (cssprefix) { // drawing from the frame\n         this.embedded = true; // indicate that painter embedded into the histo painter\n         // this.csstype = arg1.csstype; // for the moment only via frame one can set axis attributes\n         this.cssprefix = cssprefix;\n         this.rstyle = arg1.rstyle;\n      } else {\n         // this.csstype = 'axis';\n         this.cssprefix = 'axis_';\n      }\n   }\n\n   /** @summary cleanup painter */\n   cleanup() {\n      delete this.axis;\n      delete this.axis_g;\n      this.cleanupAxisPainter();\n      super.cleanup();\n   }\n\n   /** @summary Use in GED to identify kind of axis */\n   getAxisType() { return 'RAttrAxis'; }\n\n   /** @summary Configure only base parameters, later same handle will be used for drawing  */\n   configureZAxis(name, fp) {\n      this.name = name;\n      this.kind = kAxisNormal;\n      this.log = false;\n      const _log = this.v7EvalAttr('log', 0);\n      if (_log) {\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n      }\n      fp.logz = this.log;\n   }\n\n   /** @summary Configure axis painter\n     * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame\n     * Therefore one should distinguish when caclulated coordinates used for axis drawing itself or for calculation of frame coordinates\n     * @private */\n   configureAxis(name, min, max, smin, smax, vertical, frame_range, axis_range, opts) {\n      if (!opts) opts = {};\n      this.name = name;\n      this.full_min = min;\n      this.full_max = max;\n      this.kind = kAxisNormal;\n      this.vertical = vertical;\n      this.log = false;\n      const _log = this.v7EvalAttr('log', 0),\n          _symlog = this.v7EvalAttr('symlog', 0);\n      this.reverse = opts.reverse || false;\n\n      if (this.v7EvalAttr('time')) {\n         this.kind = kAxisTime;\n         this.timeoffset = 0;\n         let toffset = this.v7EvalAttr('timeOffset');\n         if (toffset !== undefined) {\n            toffset = parseFloat(toffset);\n            if (Number.isFinite(toffset)) this.timeoffset = toffset*1000;\n         }\n      } else if (this.axis?.fLabelsIndex) {\n         this.kind = kAxisLabels;\n         delete this.own_labels;\n      } else if (opts.labels)\n         this.kind = kAxisLabels;\n       else\n         this.kind = kAxisNormal;\n\n\n      if (this.kind === kAxisTime)\n         this.func = d3_scaleTime().domain([this.convertDate(smin), this.convertDate(smax)]);\n       else if (_symlog && (_symlog > 0)) {\n         this.symlog = _symlog;\n         this.func = d3_scaleSymlog().constant(_symlog).domain([smin, smax]);\n      } else if (_log) {\n         if (smax <= 0) smax = 1;\n         if ((smin <= 0) || (smin >= smax))\n            smin = smax * 0.0001;\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n         this.func = d3_scaleLog().base(this.logbase).domain([smin, smax]);\n      } else\n         this.func = d3_scaleLinear().domain([smin, smax]);\n\n      this.scale_min = smin;\n      this.scale_max = smax;\n\n      this.gr_range = axis_range || 1000; // when not specified, one can ignore it\n\n      const range = frame_range ?? [0, this.gr_range];\n\n      this.axis_shift = range[1] - this.gr_range;\n\n      if (this.reverse)\n         this.func.range([range[1], range[0]]);\n      else\n         this.func.range(range);\n\n      if (this.kind === kAxisTime)\n         this.gr = val => this.func(this.convertDate(val));\n      else if (this.log)\n         this.gr = val => (val < this.scale_min) ? (this.vertical ? this.func.range()[0]+5 : -5) : this.func(val);\n      else\n         this.gr = this.func;\n\n      delete this.format;// remove formatting func\n\n      const ndiv = this.v7EvalAttr('ndiv', 508);\n\n      this.nticks = ndiv % 100;\n      this.nticks2 = (ndiv % 10000 - this.nticks) / 100;\n      this.nticks3 = Math.floor(ndiv/10000);\n\n      if (this.nticks > 20) this.nticks = 20;\n\n      const gr_range = Math.abs(this.gr_range) || 100;\n\n      if (this.kind === kAxisTime) {\n         if (this.nticks > 8) this.nticks = 8;\n\n         const scale_range = this.scale_max - this.scale_min,\n               tf2 = chooseTimeFormat(scale_range / gr_range, false);\n         let tf1 = this.v7EvalAttr('timeFormat', '');\n\n         if (!tf1 || (scale_range < 0.1 * (this.full_max - this.full_min)))\n            tf1 = chooseTimeFormat(scale_range / this.nticks, true);\n\n         this.tfunc1 = this.tfunc2 = d3_timeFormat(tf1);\n         if (tf2 !== tf1)\n            this.tfunc2 = d3_timeFormat(tf2);\n\n         this.format = this.formatTime;\n      } else if (this.log) {\n         if (this.nticks2 > 1) {\n            this.nticks *= this.nticks2; // all log ticks (major or minor) created centrally\n            this.nticks2 = 1;\n         }\n         this.noexp = this.v7EvalAttr('noexp', false);\n         if ((this.scale_max < 300) && (this.scale_min > 0.3) && (this.logbase === 10)) this.noexp = true;\n         this.moreloglabels = this.v7EvalAttr('moreloglbls', false);\n\n         this.format = this.formatLog;\n      } else if (this.kind === kAxisLabels) {\n         this.nticks = 50; // for text output allow max 50 names\n         const scale_range = this.scale_max - this.scale_min;\n         if (this.nticks > scale_range)\n            this.nticks = Math.round(scale_range);\n         this.nticks2 = 1;\n\n         this.format = this.formatLabels;\n      } else {\n         this.order = 0;\n         this.ndig = 0;\n         this.format = this.formatNormal;\n      }\n   }\n\n   /** @summary Return scale min */\n   getScaleMin() {\n      return this.func ? this.func.domain()[0] : 0;\n   }\n\n   /** @summary Return scale max */\n   getScaleMax() {\n      return this.func ? this.func.domain()[1] : 0;\n   }\n\n   /** @summary Provide label for axis value */\n   formatLabels(d) {\n      const indx = Math.round(d);\n      if (this.axis?.fLabelsIndex) {\n         if ((indx < 0) || (indx >= this.axis.fNBinsNoOver)) return null;\n         for (let i = 0; i < this.axis.fLabelsIndex.length; ++i) {\n            const pair = this.axis.fLabelsIndex[i];\n            if (pair.second === indx) return pair.first;\n         }\n      } else {\n         const labels = this.getObject().fLabels;\n         if (labels && (indx >= 0) && (indx < labels.length))\n            return labels[indx];\n      }\n      return null;\n   }\n\n   /** @summary Creates array with minor/middle/major ticks */\n   createTicks(only_major_as_array, optionNoexp, optionNoopt, optionInt) {\n      if (optionNoopt && this.nticks && (this.kind === kAxisNormal)) this.noticksopt = true;\n\n      const ticks = this.produceTicks(this.nticks),\n            handle = { nminor: 0, nmiddle: 0, nmajor: 0, func: this.func, minor: ticks, middle: ticks, major: ticks };\n\n      if (only_major_as_array) {\n         const res = handle.major, delta = (this.scale_max - this.scale_min)*1e-5;\n         if (res[0] > this.scale_min + delta) res.unshift(this.scale_min);\n         if (res[res.length-1] < this.scale_max - delta) res.push(this.scale_max);\n         return res;\n      }\n\n      if ((this.nticks2 > 1) && (!this.log || (this.logbase === 10))) {\n         handle.minor = handle.middle = this.produceTicks(handle.major.length, this.nticks2);\n\n         const gr_range = Math.abs(this.func.range()[1] - this.func.range()[0]);\n\n         // avoid black filling by middle-size\n         if ((handle.middle.length <= handle.major.length) || (handle.middle.length > gr_range/3.5))\n            handle.minor = handle.middle = handle.major;\n          else if ((this.nticks3 > 1) && !this.log) {\n            handle.minor = this.produceTicks(handle.middle.length, this.nticks3);\n            if ((handle.minor.length <= handle.middle.length) || (handle.minor.length > gr_range/1.7)) handle.minor = handle.middle;\n         }\n      }\n\n      handle.reset = function() {\n         this.nminor = this.nmiddle = this.nmajor = 0;\n      };\n\n      handle.next = function(doround) {\n         if (this.nminor >= this.minor.length) return false;\n\n         this.tick = this.minor[this.nminor++];\n         this.grpos = this.func(this.tick);\n         if (doround) this.grpos = Math.round(this.grpos);\n         this.kind = 3;\n\n         if ((this.nmiddle < this.middle.length) && (Math.abs(this.grpos - this.func(this.middle[this.nmiddle])) < 1)) {\n            this.nmiddle++;\n            this.kind = 2;\n         }\n\n         if ((this.nmajor < this.major.length) && (Math.abs(this.grpos - this.func(this.major[this.nmajor])) < 1)) {\n            this.nmajor++;\n            this.kind = 1;\n         }\n         return true;\n      };\n\n      handle.last_major = function() {\n         return (this.kind !== 1) ? false : this.nmajor === this.major.length;\n      };\n\n      handle.next_major_grpos = function() {\n         if (this.nmajor >= this.major.length) return null;\n         return this.func(this.major[this.nmajor]);\n      };\n\n      handle.get_modifier = function() { return null; };\n\n      this.order = 0;\n      this.ndig = 0;\n\n      // at the moment when drawing labels, we can try to find most optimal text representation for them\n\n      if ((this.kind === kAxisNormal) && !this.log && (handle.major.length > 0)) {\n         let maxorder = 0, minorder = 0, exclorder3 = false;\n\n         if (!optionNoexp) {\n            const maxtick = Math.max(Math.abs(handle.major[0]), Math.abs(handle.major[handle.major.length-1])),\n                mintick = Math.min(Math.abs(handle.major[0]), Math.abs(handle.major[handle.major.length-1])),\n                ord1 = (maxtick > 0) ? Math.round(Math.log10(maxtick)/3)*3 : 0,\n                ord2 = (mintick > 0) ? Math.round(Math.log10(mintick)/3)*3 : 0;\n\n             exclorder3 = (maxtick < 2e4); // do not show 10^3 for values below 20000\n\n             if (maxtick || mintick) {\n                maxorder = Math.max(ord1, ord2) + 3;\n                minorder = Math.min(ord1, ord2) - 3;\n             }\n         }\n\n         // now try to find best combination of order and ndig for labels\n\n         let bestorder = 0, bestndig = this.ndig, bestlen = 1e10;\n\n         for (let order = minorder; order <= maxorder; order+=3) {\n            if (exclorder3 && (order===3)) continue;\n            this.order = order;\n            this.ndig = 0;\n            let lbls = [], indx = 0, totallen = 0;\n            while (indx<handle.major.length) {\n               const lbl = this.format(handle.major[indx], true);\n               if (lbls.indexOf(lbl) < 0) {\n                  lbls.push(lbl);\n                  totallen += lbl.length;\n                  indx++;\n                  continue;\n               }\n               if (++this.ndig > 11) break; // not too many digits, anyway it will be exponential\n               lbls = []; indx = 0; totallen = 0;\n            }\n\n            // for order === 0 we should virually remove '0.' and extra label on top\n            if (!order && (this.ndig < 4))\n               totallen -= (handle.major.length * 2 + 3);\n\n            if (totallen < bestlen) {\n               bestlen = totallen;\n               bestorder = this.order;\n               bestndig = this.ndig;\n            }\n         }\n\n         this.order = bestorder;\n         this.ndig = bestndig;\n\n         if (optionInt) {\n            if (this.order) console.warn(`Axis painter - integer labels are configured, but axis order ${this.order} is preferable`);\n            if (this.ndig) console.warn(`Axis painter - integer labels are configured, but ${this.ndig} decimal digits are required`);\n            this.ndig = 0;\n            this.order = 0;\n         }\n      }\n\n      return handle;\n   }\n\n   /** @summary Is labels should be centered */\n   isCenteredLabels() {\n      if (this.kind === kAxisLabels) return true;\n      if (this.kind === 'log') return false;\n      return this.v7EvalAttr('labels_center', false);\n   }\n\n   /** @summary Used to move axis labels instead of zooming\n     * @private */\n   processLabelsMove(arg, pos) {\n      if (this.optionUnlab || !this.axis_g) return false;\n\n      const label_g = this.axis_g.select('.axis_labels');\n      if (!label_g || (label_g.size() !== 1)) return false;\n\n      if (arg === 'start') {\n         // no moving without labels\n         const box = label_g.node().getBBox();\n\n         label_g.append('rect')\n                 .classed('drag', true)\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move')\n                 .call(addHighlightStyle, true);\n         if (this.vertical)\n            this.drag_pos0 = pos[0];\n          else\n            this.drag_pos0 = pos[1];\n\n\n         return true;\n      }\n\n      let offset = label_g.property('fix_offset');\n\n      if (this.vertical) {\n         offset += Math.round(pos[0] - this.drag_pos0);\n         label_g.attr('transform', `translate(${offset})`);\n      } else {\n         offset += Math.round(pos[1] - this.drag_pos0);\n         label_g.attr('transform', `translate(0,${offset})`);\n      }\n      if (!offset) label_g.attr('transform', null);\n\n      if (arg === 'stop') {\n         label_g.select('rect.drag').remove();\n         delete this.drag_pos0;\n         if (offset !== label_g.property('fix_offset')) {\n            label_g.property('fix_offset', offset);\n            const side = label_g.property('side') || 1;\n            this.labelsOffset = offset / (this.vertical ? -side : side);\n            this.changeAxisAttr(1, 'labels_offset', this.labelsOffset / this.scalingSize);\n         }\n      }\n\n      return true;\n   }\n\n   /** @summary Add interactive elements to draw axes title */\n   addTitleDrag(title_g, side) {\n      if (!settings.MoveResize || this.isBatchMode()) return;\n\n      let drag_rect = null,\n          acc_x, acc_y, new_x, new_y, alt_pos, curr_indx;\n\n      const drag_move = d3_drag().subject(Object);\n\n      drag_move\n         .on('start', evnt => {\n            evnt.sourceEvent.preventDefault();\n            evnt.sourceEvent.stopPropagation();\n\n            const box = title_g.node().getBBox(), // check that elements visible, request precise value\n                title_length = this.vertical ? box.height : box.width;\n\n            new_x = acc_x = title_g.property('shift_x');\n            new_y = acc_y = title_g.property('shift_y');\n\n            if (this.titlePos === 'center')\n               curr_indx = 1;\n            else\n               curr_indx = (this.titlePos === 'left') ? 0 : 2;\n\n            // let d = ((this.gr_range > 0) && this.vertical) ? title_length : 0;\n            alt_pos = [0, this.gr_range/2, this.gr_range]; // possible positions\n            const off = this.vertical ? -title_length : title_length,\n                swap = this.isReverseAxis() ? 2 : 0;\n            if (this.title_align === 'middle') {\n               alt_pos[swap] += off/2;\n               alt_pos[2-swap] -= off/2;\n            } else if ((this.title_align === 'begin') ^ this.isTitleRotated()) {\n               alt_pos[1] -= off/2;\n               alt_pos[2-swap] -= off;\n            } else { // end\n               alt_pos[swap] += off;\n               alt_pos[1] += off/2;\n            }\n\n            alt_pos[curr_indx] = this.vertical ? acc_y : acc_x;\n\n            drag_rect = title_g.append('rect')\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move')\n                 .call(addHighlightStyle, true);\n              // .style('pointer-events','none'); // let forward double click to underlying elements\n          }).on('drag', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               acc_x += evnt.dx;\n               acc_y += evnt.dy;\n\n               const p = this.vertical ? acc_y : acc_x;\n               let set_x, set_y, besti = 0;\n\n               for (let i = 1; i < 3; ++i)\n                  if (Math.abs(p - alt_pos[i]) < Math.abs(p - alt_pos[besti])) besti = i;\n\n               if (this.vertical) {\n                  set_x = acc_x;\n                  set_y = alt_pos[besti];\n               } else {\n                  set_x = alt_pos[besti];\n                  set_y = acc_y;\n               }\n\n               new_x = set_x; new_y = set_y; curr_indx = besti;\n               makeTranslate(title_g, new_x, new_y);\n          }).on('end', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               const basepos = title_g.property('basepos') || 0;\n\n               title_g.property('shift_x', new_x)\n                      .property('shift_y', new_y);\n\n               this.titleOffset = (this.vertical ? basepos - new_x : new_y - basepos) * side;\n\n               if (curr_indx === 1)\n                  this.titlePos = 'center';\n                else if (curr_indx === 0)\n                  this.titlePos = 'left';\n                else\n                  this.titlePos = 'right';\n\n               this.changeAxisAttr(0, 'title_position', this.titlePos, 'title_offset', this.titleOffset / this.scalingSize);\n\n               drag_rect.remove();\n               drag_rect = null;\n            });\n\n      title_g.style('cursor', 'move').call(drag_move);\n   }\n\n   /** @summary checks if value inside graphical range, taking into account delta */\n   isInsideGrRange(pos, delta1, delta2) {\n      if (!delta1) delta1 = 0;\n      if (delta2 === undefined) delta2 = delta1;\n      if (this.gr_range < 0)\n         return (pos >= this.gr_range - delta2) && (pos <= delta1);\n      return (pos >= -delta1) && (pos <= this.gr_range + delta2);\n   }\n\n   /** @summary returns graphical range */\n   getGrRange(delta) {\n      if (!delta) delta = 0;\n      if (this.gr_range < 0)\n         return this.gr_range - delta;\n      return this.gr_range + delta;\n   }\n\n   /** @summary If axis direction is negative coordinates direction */\n   isReverseAxis() {\n      return !this.vertical !== (this.getGrRange() > 0);\n   }\n\n   /** @summary Draw axis ticks\n     * @private */\n   drawMainLine(axis_g) {\n      let ending = '';\n\n      if (this.endingSize && this.endingStyle) {\n         let sz = (this.gr_range > 0) ? -this.endingSize : this.endingSize;\n         const sz7 = Math.round(sz*0.7);\n         sz = Math.round(sz);\n         if (this.vertical)\n            ending = `l${sz7},${sz}M0,${this.gr_range}l${-sz7},${sz}`;\n         else\n            ending = `l${sz},${sz7}M${this.gr_range},0l${sz},${-sz7}`;\n      }\n\n      axis_g.append('svg:path')\n            .attr('d', 'M0,0' + (this.vertical ? 'v' : 'h') + this.gr_range + ending)\n            .call(this.lineatt.func)\n            .style('fill', ending ? 'none' : null);\n   }\n\n   /** @summary Draw axis ticks\n     * @return {Object} with gaps on left and right side\n     * @private */\n   drawTicks(axis_g, side, main_draw) {\n      if (main_draw) this.ticks = [];\n\n      this.handle.reset();\n\n      let res = '', ticks_plusminus = 0;\n      if (this.ticksSide === 'both') {\n         side = 1;\n         ticks_plusminus = 1;\n      }\n\n      while (this.handle.next(true)) {\n         let h1 = Math.round(this.ticksSize/4), h2 = 0;\n\n         if (this.handle.kind < 3)\n            h1 = Math.round(this.ticksSize/2);\n\n         const grpos = this.handle.grpos - this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(grpos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.handle.kind === 1) {\n            // if not showing labels, not show large tick\n            if ((this.kind === kAxisLabels) || (this.format(this.handle.tick, true) !== null)) h1 = this.ticksSize;\n\n            if (main_draw) this.ticks.push(grpos); // keep graphical positions of major ticks\n         }\n\n         if (ticks_plusminus > 0)\n            h2 = -h1;\n         else if (side < 0) {\n            h2 = -h1; h1 = 0;\n         } else\n            h2 = 0;\n\n         res += this.vertical ? `M${h1},${grpos}H${h2}` : `M${grpos},${-h1}V${-h2}`;\n      }\n\n      if (res) {\n         axis_g.append('svg:path')\n               .attr('d', res)\n               .style('stroke', this.ticksColor || this.lineatt.color)\n               .style('stroke-width', !this.ticksWidth || (this.ticksWidth === 1) ? null : this.ticksWidth);\n       }\n\n       const gap0 = Math.round(0.25*this.ticksSize), gap = Math.round(1.25*this.ticksSize);\n       return { '-1': (side > 0) || ticks_plusminus ? gap : gap0,\n                  1: (side < 0) || ticks_plusminus ? gap : gap0 };\n   }\n\n   /** @summary Performs labels drawing\n     * @return {Promise} with gaps in both direction */\n   async drawLabels(axis_g, side, gaps) {\n      const center_lbls = this.isCenteredLabels(),\n            rotate_lbls = this.labelsFont.angle !== 0,\n            label_g = axis_g.append('svg:g').attr('class', 'axis_labels').property('side', side),\n            lbl_pos = this.handle.lbl_pos || this.handle.major;\n      let textscale = 1, maxtextlen = 0, lbls_tilt = false,\n          max_lbl_width = 0, max_lbl_height = 0;\n\n      // function called when text is drawn to analyze width, required to correctly scale all labels\n      function process_drawtext_ready(painter) {\n         max_lbl_width = Math.max(max_lbl_width, this.result_width);\n         max_lbl_height = Math.max(max_lbl_height, this.result_height);\n\n         const textwidth = this.result_width;\n\n         if (textwidth && ((!painter.vertical && !rotate_lbls) || (painter.vertical && rotate_lbls)) && !painter.log) {\n            let maxwidth = this.gap_before*0.45 + this.gap_after*0.45;\n            if (!this.gap_before) maxwidth = 0.9*this.gap_after; else\n            if (!this.gap_after) maxwidth = 0.9*this.gap_before;\n            textscale = Math.min(textscale, maxwidth / textwidth);\n         }\n\n         if ((textscale > 0.0001) && (textscale < 0.8) && !painter.vertical && !rotate_lbls && (maxtextlen > 5) && (side > 0))\n            lbls_tilt = true;\n\n         const scale = textscale * (lbls_tilt ? 3 : 1);\n         if ((scale > 0.0001) && (scale < 1))\n            painter.scaleTextDrawing(1/scale, label_g);\n      }\n\n      const fix_offset = Math.round((this.vertical ? -side : side) * this.labelsOffset),\n            fix_coord = Math.round((this.vertical ? -side : side) * gaps[side]);\n      let lastpos = 0;\n\n      if (fix_offset)\n         label_g.attr('transform', this.vertical ? `translate(${fix_offset})` : `translate(0,${fix_offset})`);\n\n      label_g.property('fix_offset', fix_offset);\n\n      this.startTextDrawing(this.labelsFont, 'font', label_g);\n\n      for (let nmajor = 0; nmajor < lbl_pos.length; ++nmajor) {\n         const lbl = this.format(lbl_pos[nmajor], true);\n         if (lbl === null) continue;\n\n         const arg = { text: lbl, latex: 1, draw_g: label_g };\n         let pos = Math.round(this.func(lbl_pos[nmajor]));\n\n         arg.gap_before = (nmajor > 0) ? Math.abs(Math.round(pos - this.func(lbl_pos[nmajor-1]))) : 0;\n         arg.gap_after = (nmajor < lbl_pos.length-1) ? Math.abs(Math.round(this.func(lbl_pos[nmajor+1])-pos)) : 0;\n\n         if (center_lbls) {\n            const gap = arg.gap_after || arg.gap_before;\n            pos = Math.round(pos - (this.vertical ? 0.5*gap : -0.5*gap));\n            if (!this.isInsideGrRange(pos, 5)) continue;\n         }\n\n         maxtextlen = Math.max(maxtextlen, lbl.length);\n\n         pos -= this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(pos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.vertical) {\n            arg.x = fix_coord;\n            arg.y = pos;\n            arg.align = rotate_lbls ? ((side < 0) ? 23 : 20) : ((side < 0) ? 12 : 32);\n         } else {\n            arg.x = pos;\n            arg.y = fix_coord;\n            arg.align = rotate_lbls ? ((side < 0) ? 12 : 32) : ((side < 0) ? 20 : 23);\n            if (this.log && !this.noexp && !this.vertical && arg.align === 23) {\n               arg.align = 21;\n               arg.y += this.labelsFont.size;\n            }\n         }\n\n         arg.post_process = process_drawtext_ready;\n\n         this.drawText(arg);\n\n         if (lastpos && (pos !== lastpos) && ((this.vertical && !rotate_lbls) || (!this.vertical && rotate_lbls))) {\n            const axis_step = Math.abs(pos-lastpos);\n            textscale = Math.min(textscale, 0.9*axis_step/this.labelsFont.size);\n         }\n\n         lastpos = pos;\n      }\n\n      if (this.order) {\n         this.drawText({ x: this.vertical ? side*5 : this.getGrRange(5),\n                         y: this.has_obstacle ? fix_coord : (this.vertical ? this.getGrRange(3) : -3*side),\n                         align: this.vertical ? ((side < 0) ? 30 : 10) : ((this.has_obstacle ^ (side < 0)) ? 13 : 10),\n                         latex: 1,\n                         text: '#times' + this.formatExp(10, this.order),\n                         draw_g: label_g });\n      }\n\n      return this.finishTextDrawing(label_g).then(() => {\n        if (lbls_tilt) {\n           label_g.selectAll('text').each(function() {\n               const txt = d3_select(this), tr = txt.attr('transform');\n               txt.attr('transform', tr + ' rotate(25)').style('text-anchor', 'start');\n           });\n         }\n\n         if (this.vertical)\n            gaps[side] += Math.round(rotate_lbls ? 1.2*max_lbl_height : max_lbl_width + 0.4*this.labelsFont.size) - side*fix_offset;\n         else {\n            const tilt_height = lbls_tilt ? max_lbl_width * Math.sin(25/180*Math.PI) + max_lbl_height * (Math.cos(25/180*Math.PI) + 0.2) : 0;\n\n            gaps[side] += Math.round(Math.max(rotate_lbls ? max_lbl_width + 0.4*this.labelsFont.size : 1.2*max_lbl_height, 1.2*this.labelsFont.size, tilt_height)) + fix_offset;\n         }\n\n         return gaps;\n      });\n   }\n\n   /** @summary Add zomming rect to axis drawing */\n   addZoomingRect(axis_g, side, lgaps) {\n      if (settings.Zooming && !this.disable_zooming && !this.isBatchMode()) {\n         const sz = Math.max(lgaps[side], 10),\n               d = this.vertical ? `v${this.gr_range}h${-side*sz}v${-this.gr_range}` : `h${this.gr_range}v${side*sz}h${-this.gr_range}`;\n         axis_g.append('svg:path')\n               .attr('d', `M0,0${d}z`)\n               .attr('class', 'axis_zoom')\n               .style('opacity', '0')\n               .style('cursor', 'crosshair');\n      }\n   }\n\n   /** @summary Returns true if axis title is rotated */\n   isTitleRotated() {\n      return this.titleFont && (this.titleFont.angle !== (this.vertical ? 270 : 0));\n   }\n\n   /** @summary Draw axis title */\n   async drawTitle(axis_g, side, lgaps) {\n      if (!this.fTitle)\n         return this;\n\n      const title_g = axis_g.append('svg:g').attr('class', 'axis_title'),\n            rotated = this.isTitleRotated();\n      let title_shift_x = 0, title_shift_y = 0, title_basepos = 0;\n\n      this.startTextDrawing(this.titleFont, 'font', title_g);\n\n      this.title_align = this.titleCenter ? 'middle' : (this.titleOpposite ^ (this.isReverseAxis() || rotated) ? 'begin' : 'end');\n\n      if (this.vertical) {\n         title_basepos = Math.round(-side*(lgaps[side]));\n         title_shift_x = title_basepos + Math.round(-side*this.titleOffset);\n         title_shift_y = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         this.drawText({ align: [this.title_align, ((side < 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      } else {\n         title_shift_x = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         title_basepos = Math.round(side*lgaps[side]);\n         title_shift_y = title_basepos + Math.round(side*this.titleOffset);\n         this.drawText({ align: [this.title_align, ((side > 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      }\n\n      makeTranslate(title_g, title_shift_x, title_shift_y)\n                   .property('basepos', title_basepos)\n                   .property('shift_x', title_shift_x)\n                   .property('shift_y', title_shift_y);\n\n      this.addTitleDrag(title_g, side);\n\n      return this.finishTextDrawing(title_g);\n   }\n\n   /** @summary Extract major draw attributes, which are also used in interactive operations\n     * @private  */\n   extractDrawAttributes(scalingSize) {\n      const pp = this.getPadPainter(),\n          rect = pp?.getPadRect() || { width: 10, height: 10 };\n\n      this.scalingSize = scalingSize || (this.vertical ? rect.width : rect.height);\n\n      this.createv7AttLine('line_');\n\n      this.optionUnlab = this.v7EvalAttr('labels_hide', false);\n\n      this.endingStyle = this.v7EvalAttr('ending_style', '');\n      this.endingSize = Math.round(this.v7EvalLength('ending_size', this.scalingSize, this.endingStyle ? 0.02 : 0));\n      this.startingSize = Math.round(this.v7EvalLength('starting_size', this.scalingSize, 0));\n      this.ticksSize = this.v7EvalLength('ticks_size', this.scalingSize, 0.02);\n      this.ticksSide = this.v7EvalAttr('ticks_side', 'normal');\n      this.ticksColor = this.v7EvalColor('ticks_color', '');\n      this.ticksWidth = this.v7EvalAttr('ticks_width', 1);\n      if (scalingSize && (this.ticksSize < 0))\n         this.ticksSize = -this.ticksSize;\n\n      this.fTitle = this.v7EvalAttr('title_value', '');\n\n      if (this.fTitle) {\n         this.titleFont = this.v7EvalFont('title', { size: 0.03 }, scalingSize || pp?.getPadHeight() || 10);\n         this.titleFont.roundAngle(180, this.vertical ? 270 : 0);\n\n         this.titleOffset = this.v7EvalLength('title_offset', this.scalingSize, 0);\n         this.titlePos = this.v7EvalAttr('title_position', 'right');\n         this.titleCenter = (this.titlePos === 'center');\n         this.titleOpposite = (this.titlePos === 'left');\n      } else {\n         delete this.titleFont;\n         delete this.titleOffset;\n         delete this.titlePos;\n      }\n\n      // TODO: remove old scaling factors for labels and ticks\n      this.labelsFont = this.v7EvalFont('labels', { size: scalingSize ? 0.05 : 0.03 });\n      this.labelsFont.roundAngle(180);\n      if (this.labelsFont.angle) this.labelsFont.angle = 270;\n      this.labelsOffset = this.v7EvalLength('labels_offset', this.scalingSize, 0);\n\n      if (scalingSize) this.ticksSize = this.labelsFont.size*0.5; // old lego scaling factor\n\n      if (this.maxTickSize && (this.ticksSize > this.maxTickSize))\n         this.ticksSize = this.maxTickSize;\n   }\n\n   /** @summary Performs axis drawing\n     * @return {Promise} which resolved when drawing is completed */\n   async drawAxis(layer, transform, side) {\n      let axis_g = layer;\n\n      if (side === undefined) side = 1;\n\n      if (!this.standalone) {\n         axis_g = layer.selectChild(`.${this.name}_container`);\n         if (axis_g.empty())\n            axis_g = layer.append('svg:g').attr('class', `${this.name}_container`);\n         else\n            axis_g.selectAll('*').remove();\n      }\n\n      axis_g.attr('transform', transform);\n\n      this.extractDrawAttributes();\n      this.axis_g = axis_g;\n      this.side = side;\n\n      if (this.ticksSide === 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(axis_g);\n\n      const optionNoopt = false,  // no ticks position optimization\n            optionInt = false,    // integer labels\n            optionNoexp = false;  // do not create exp\n\n      this.handle = this.createTicks(false, optionNoexp, optionNoopt, optionInt);\n\n      // first draw ticks\n      const tgaps = this.drawTicks(axis_g, side, true),\n             // draw labels\n            labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(axis_g, side, lgaps);\n      });\n   }\n\n   /** @summary Assign handler, which is called when axis redraw by interactive changes\n     * @desc Used by palette painter to reassign iteractive handlers\n     * @private */\n   setAfterDrawHandler(handler) {\n      this._afterDrawAgain = handler;\n   }\n\n   /** @summary Draw axis with the same settings, used by interactive changes */\n   drawAxisAgain() {\n      if (!this.axis_g || !this.side) return;\n\n      this.axis_g.selectAll('*').remove();\n\n      this.extractDrawAttributes();\n\n      let side = this.side;\n      if (this.ticksSide === 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(this.axis_g);\n\n      // first draw ticks\n      const tgaps = this.drawTicks(this.axis_g, side, false),\n            labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(this.axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(this.axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(this.axis_g, side, lgaps);\n      }).then(() => {\n         if (isFunc(this._afterDrawAgain))\n            this._afterDrawAgain();\n      });\n   }\n\n   /** @summary Draw axis again on opposite frame size */\n   drawAxisOtherPlace(layer, transform, side, only_ticks) {\n      let axis_g = layer.selectChild(`.${this.name}_container2`);\n      if (axis_g.empty())\n         axis_g = layer.append('svg:g').attr('class', `${this.name}_container2`);\n      else\n         axis_g.selectAll('*').remove();\n\n      axis_g.attr('transform', transform);\n\n      if (this.ticksSide === 'invert') side = -side;\n\n      // draw ticks again\n      const tgaps = this.drawTicks(axis_g, side, false),\n\n           // draw labels again\n           promise = this.optionUnlab || only_ticks ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return promise.then(lgaps => {\n         this.addZoomingRect(axis_g, side, lgaps);\n         return true;\n      });\n   }\n\n   /** @summary Change zooming in standalone mode */\n   zoomStandalone(min, max) {\n      this.changeAxisAttr(1, 'zoomMin', min, 'zoomMax', max);\n   }\n\n   /** @summary Redraw axis, used in standalone mode for RAxisDrawable */\n   redraw() {\n      const drawable = this.getObject(),\n            pp = this.getPadPainter(),\n            pos = pp.getCoordinate(drawable.fPos),\n            reverse = this.v7EvalAttr('reverse', false),\n            labels_len = drawable.fLabels.length,\n            min = (labels_len > 0) ? 0 : this.v7EvalAttr('min', 0),\n            max = (labels_len > 0) ? labels_len : this.v7EvalAttr('max', 100);\n      let len = pp.getPadLength(drawable.fVertical, drawable.fLength);\n\n      // in vertical direction axis drawn in negative direction\n      if (drawable.fVertical) len -= pp.getPadHeight();\n\n      let smin = this.v7EvalAttr('zoomMin'),\n          smax = this.v7EvalAttr('zoomMax');\n      if (smin === smax) {\n         smin = min; smax = max;\n      }\n\n      this.configureAxis('axis', min, max, smin, smax, drawable.fVertical, undefined, len, { reverse, labels: labels_len > 0 });\n\n      this.createG();\n\n      this.standalone = true;  // no need to clean axis container\n\n      const promise = this.drawAxis(this.draw_g, makeTranslate(pos.x, pos.y));\n\n      if (this.isBatchMode()) return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu) {\n            this.draw_g.on('contextmenu', evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                 menu.add('header:RAxisDrawable');\n                 menu.add('Unzoom', () => this.zoomStandalone());\n                 this.fillAxisContextMenu(menu, '');\n                 menu.show();\n               });\n            });\n         }\n\n         addDragHandler(this, { x: pos.x, y: pos.y, width: this.vertical ? 10 : len, height: this.vertical ? len : 10,\n                                only_move: true, redraw: d => this.positionChanged(d) });\n\n         this.draw_g.on('dblclick', () => this.zoomStandalone());\n\n         if (settings.ZoomWheel) {\n            this.draw_g.on('wheel', evnt => {\n               evnt.stopPropagation();\n               evnt.preventDefault();\n\n               const pos = d3_pointer(evnt, this.draw_g.node()),\n                   coord = this.vertical ? (1 - pos[1] / len) : pos[0] / len,\n                   item = this.analyzeWheelEvent(evnt, coord);\n\n               if (item.changed) this.zoomStandalone(item.min, item.max);\n            });\n         }\n      });\n   }\n\n   /** @summary Process interactive moving of the axis drawing */\n   positionChanged(drag) {\n      const drawable = this.getObject(),\n          rect = this.getPadPainter().getPadRect(),\n          xn = drag.x / rect.width,\n          yn = 1 - drag.y / rect.height;\n\n      drawable.fPos.fHoriz.fArr = [xn];\n      drawable.fPos.fVert.fArr = [yn];\n\n      this.submitCanvExec(`SetPos({${xn.toFixed(4)},${yn.toFixed(4)}})`);\n   }\n\n   /** @summary Change axis attribute, submit changes to server and redraw axis when specified\n     * @desc Arguments as redraw_mode, name1, value1, name2, value2, ... */\n   changeAxisAttr(redraw_mode) {\n      const changes = {};\n      let indx = 1;\n      while (indx < arguments.length - 1) {\n         this.v7AttrChange(changes, arguments[indx], arguments[indx+1]);\n         this.v7SetAttr(arguments[indx], arguments[indx+1]);\n         indx += 2;\n      }\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      if (redraw_mode === 1) {\n         if (this.standalone)\n            this.redraw();\n         else\n            this.drawAxisAgain();\n      } else if (redraw_mode)\n         this.redrawPad();\n   }\n\n   /** @summary Change axis log scale kind */\n   changeAxisLog(arg) {\n      if ((this.kind === kAxisLabels) || (this.kind === kAxisTime)) return;\n      if (arg === 'toggle') arg = this.log ? 0 : 10;\n\n      arg = parseFloat(arg);\n      if (Number.isFinite(arg)) this.changeAxisAttr(2, 'log', arg, 'symlog', 0);\n   }\n\n   /** @summary Provide context menu for axis */\n   fillAxisContextMenu(menu, kind) {\n      if (kind) menu.add('Unzoom', () => this.getFramePainter().unzoom(kind));\n\n      menu.add('sub:Log scale', () => this.changeAxisLog('toggle'));\n      menu.addchk(!this.log && !this.symlog, 'linear', 0, arg => this.changeAxisLog(arg));\n      menu.addchk(this.log && !this.symlog && (this.logbase === 10), 'log10', () => this.changeAxisLog(10));\n      menu.addchk(this.log && !this.symlog && (this.logbase === 2), 'log2', () => this.changeAxisLog(2));\n      menu.addchk(this.log && !this.symlog && Math.abs(this.logbase - Math.exp(1)) < 0.1, 'ln', () => this.changeAxisLog(Math.exp(1)));\n      menu.addchk(!this.log && this.symlog, 'symlog', 0, () =>\n         menu.input('set symlog constant', this.symlog || 10, 'float').then(v => this.changeAxisAttr(2, 'symlog', v)));\n      menu.add('endsub:');\n\n      menu.add('Divisions', () => menu.input('Set axis devisions', this.v7EvalAttr('ndiv', 508), 'int').then(val => this.changeAxisAttr(2, 'ndiv', val)));\n\n      menu.add('sub:Ticks');\n      menu.addRColorMenu('color', this.ticksColor, col => this.changeAxisAttr(1, 'ticks_color', col));\n      menu.addSizeMenu('size', 0, 0.05, 0.01, this.ticksSize/this.scalingSize, sz => this.changeAxisAttr(1, 'ticks_size', sz));\n      menu.addSelectMenu('side', ['normal', 'invert', 'both'], this.ticksSide, side => this.changeAxisAttr(1, 'ticks_side', side));\n      menu.add('endsub:');\n\n      if (!this.optionUnlab && this.labelsFont) {\n         menu.add('sub:Labels');\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.labelsOffset/this.scalingSize,\n                         offset => this.changeAxisAttr(1, 'labels_offset', offset));\n         menu.addRAttrTextItems(this.labelsFont, { noangle: 1, noalign: 1 },\n               change => this.changeAxisAttr(1, 'labels_' + change.name, change.value));\n         menu.addchk(this.labelsFont.angle, 'rotate', res => this.changeAxisAttr(1, 'labels_angle', res ? 180 : 0));\n         menu.add('endsub:');\n      }\n\n      menu.add('sub:Title', () => menu.input('Enter axis title', this.fTitle).then(t => this.changeAxisAttr(1, 'title_value', t)));\n\n      if (this.fTitle) {\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.titleOffset/this.scalingSize,\n                           offset => this.changeAxisAttr(1, 'title_offset', offset));\n\n         menu.addSelectMenu('position', ['left', 'center', 'right'], this.titlePos,\n                            pos => this.changeAxisAttr(1, 'title_position', pos));\n\n         menu.addchk(this.isTitleRotated(), 'rotate', flag => this.changeAxisAttr(1, 'title_angle', flag ? 180 : 0));\n\n         menu.addRAttrTextItems(this.titleFont, { noangle: 1, noalign: 1 }, change => this.changeAxisAttr(1, 'title_' + change.name, change.value));\n      }\n\n      menu.add('endsub:');\n      return true;\n   }\n\n} // class RAxisPainter\n\nexport { RAxisPainter };\n","import { gStyle, settings, create, isFunc, isStr, clTAxis, nsREX } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { getSvgLineStyle } from '../base/TAttLineHandler.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { TAxisPainter } from './TAxisPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { FrameInteractive, getEarthProjectionFunc } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Painter class for RFrame, main handler for interactivity\n *\n * @private\n */\n\nclass RFramePainter extends RObjectPainter {\n\n   /** @summary constructor\n     * @param {object|string} dom - DOM element for drawing or element id\n     * @param {object} tframe - RFrame object */\n   constructor(dom, tframe) {\n      super(dom, tframe, '', 'frame');\n      this.mode3d = false;\n      this.xmin = this.xmax = 0; // no scale specified, wait for objects drawing\n      this.ymin = this.ymax = 0; // no scale specified, wait for objects drawing\n      this.axes_drawn = false;\n      this.keys_handler = null;\n      this.projection = 0; // different projections\n      this.v7_frame = true; // indicator of v7, used in interactive part\n   }\n\n   /** @summary Returns frame painter - object itself */\n   getFramePainter() { return this; }\n\n   /** @summary Returns true if it is ROOT6 frame\n    * @private */\n   is_root6() { return false; }\n\n   /** @summary Set active flag for frame - can block some events\n    * @private */\n   setFrameActive(on) {\n      this.enabledKeys = on && settings.HandleKeys;\n      // used only in 3D mode\n      if (this.control)\n         this.control.enableKeys = this.enabledKeys;\n   }\n\n   setLastEventPos(pnt) {\n      // set position of last context menu event, can be\n      this.fLastEventPnt = pnt;\n   }\n\n   getLastEventPos() {\n      // return position of last event\n      return this.fLastEventPnt;\n   }\n\n   /** @summary Update graphical attributes */\n   updateAttributes(force) {\n      if ((this.fX1NDC === undefined) || (force && !this.modified_NDC)) {\n         const rect = this.getPadPainter().getPadRect();\n         this.fX1NDC = this.v7EvalLength('margins_left', rect.width, gStyle.fPadLeftMargin) / rect.width;\n         this.fY1NDC = this.v7EvalLength('margins_bottom', rect.height, gStyle.fPadBottomMargin) / rect.height;\n         this.fX2NDC = 1 - this.v7EvalLength('margins_right', rect.width, gStyle.fPadRightMargin) / rect.width;\n         this.fY2NDC = 1 - this.v7EvalLength('margins_top', rect.height, gStyle.fPadTopMargin) / rect.height;\n      }\n\n      if (!this.fillatt)\n         this.createv7AttFill();\n\n      this.createv7AttLine('border_');\n   }\n\n   /** @summary Returns coordinates transformation func */\n   getProjectionFunc() { return getEarthProjectionFunc(this.projection); }\n\n   /** @summary Rcalculate frame ranges using specified projection functions\n     * @desc Not yet used in v7 */\n   recalculateRange(Proj) {\n      this.projection = Proj || 0;\n\n      if ((this.projection === 2) && ((this.scale_ymin <= -90) || (this.scale_ymax >=90))) {\n         console.warn(`Mercator Projection: latitude out of range ${this.scale_ymin} ${this.scale_ymax}`);\n         this.projection = 0;\n      }\n\n      const func = this.getProjectionFunc();\n      if (!func) return;\n\n      const pnts = [func(this.scale_xmin, this.scale_ymin),\n                   func(this.scale_xmin, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymin)];\n      if (this.scale_xmin < 0 && this.scale_xmax > 0) {\n         pnts.push(func(0, this.scale_ymin));\n         pnts.push(func(0, this.scale_ymax));\n      }\n      if (this.scale_ymin < 0 && this.scale_ymax > 0) {\n         pnts.push(func(this.scale_xmin, 0));\n         pnts.push(func(this.scale_xmax, 0));\n      }\n\n      this.original_xmin = this.scale_xmin;\n      this.original_xmax = this.scale_xmax;\n      this.original_ymin = this.scale_ymin;\n      this.original_ymax = this.scale_ymax;\n\n      this.scale_xmin = this.scale_xmax = pnts[0].x;\n      this.scale_ymin = this.scale_ymax = pnts[0].y;\n\n      for (let n = 1; n < pnts.length; ++n) {\n         this.scale_xmin = Math.min(this.scale_xmin, pnts[n].x);\n         this.scale_xmax = Math.max(this.scale_xmax, pnts[n].x);\n         this.scale_ymin = Math.min(this.scale_ymin, pnts[n].y);\n         this.scale_ymax = Math.max(this.scale_ymax, pnts[n].y);\n      }\n   }\n\n   /** @summary Draw axes grids\n     * @desc Called immediately after axes drawing */\n   drawGrids() {\n      const layer = this.getFrameSvg().selectChild('.axis_layer');\n\n      layer.selectAll('.xgrid').remove();\n      layer.selectAll('.ygrid').remove();\n\n      const h = this.getFrameHeight(),\n            w = this.getFrameWidth(),\n            gridx = this.v7EvalAttr('gridX', false),\n            gridy = this.v7EvalAttr('gridY', false),\n            grid_style = getSvgLineStyle(gStyle.fGridStyle),\n            grid_color = (gStyle.fGridColor > 0) ? this.getColor(gStyle.fGridColor) : 'black';\n\n      if (this.x_handle)\n         this.x_handle.draw_grid = gridx;\n\n      // add a grid on x axis, if the option is set\n      if (this.x_handle?.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.x_handle.ticks.length; ++n) {\n            grid += this.swap_xy\n                  ? `M0,${h+this.x_handle.ticks[n]}h${w}`\n                  : `M${this.x_handle.ticks[n]},0v${h}`;\n         }\n\n         if (grid) {\n            layer.append('svg:path')\n                 .attr('class', 'xgrid')\n                 .attr('d', grid)\n                 .style('stroke', grid_color)\n                 .style('stroke-width', gStyle.fGridWidth)\n                 .style('stroke-dasharray', grid_style);\n         }\n      }\n\n      if (this.y_handle)\n         this.y_handle.draw_grid = gridy;\n\n      // add a grid on y axis, if the option is set\n      if (this.y_handle?.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.y_handle.ticks.length; ++n) {\n            grid += this.swap_xy\n                     ? `M${this.y_handle.ticks[n]},0v${h}`\n                     : `M0,${h+this.y_handle.ticks[n]}h${w}`;\n         }\n\n         if (grid) {\n            layer.append('svg:path')\n               .attr('class', 'ygrid')\n               .attr('d', grid)\n               .style('stroke', grid_color)\n               .style('stroke-width', gStyle.fGridWidth)\n               .style('stroke-dasharray', grid_style);\n         }\n      }\n   }\n\n   /** @summary Converts 'raw' axis value into text */\n   axisAsText(axis, value) {\n      const handle = this[`${axis}_handle`];\n\n      return handle ? handle.axisAsText(value, settings[axis.toUpperCase() + 'ValuesFormat']) : value.toPrecision(4);\n   }\n\n   /** @summary Set axix range */\n   _setAxisRange(prefix, vmin, vmax) {\n      const nmin = `${prefix}min`, nmax = `${prefix}max`;\n      if (this[nmin] !== this[nmax]) return;\n      let min = this.v7EvalAttr(`${prefix}_min`),\n          max = this.v7EvalAttr(`${prefix}_max`);\n\n      if (min !== undefined) vmin = min;\n      if (max !== undefined) vmax = max;\n\n      if (vmin < vmax) {\n         this[nmin] = vmin;\n         this[nmax] = vmax;\n      }\n\n      const nzmin = `zoom_${prefix}min`, nzmax = `zoom_${prefix}max`;\n\n      if ((this[nzmin] === this[nzmax]) && !this.zoomChangedInteractive(prefix)) {\n         min = this.v7EvalAttr(`${prefix}_zoomMin`);\n         max = this.v7EvalAttr(`${prefix}_zoomMax`);\n\n         if ((min !== undefined) || (max !== undefined)) {\n            this[nzmin] = (min === undefined) ? this[nmin] : min;\n            this[nzmax] = (max === undefined) ? this[nmax] : max;\n         }\n      }\n   }\n\n   /** @summary Set axes ranges for drawing, check configured attributes if range already specified */\n   setAxesRanges(xaxis, xmin, xmax, yaxis, ymin, ymax, zaxis, zmin, zmax) {\n      if (this.axes_drawn) return;\n      this.xaxis = xaxis;\n      this._setAxisRange('x', xmin, xmax);\n      this.yaxis = yaxis;\n      this._setAxisRange('y', ymin, ymax);\n      this.zaxis = zaxis;\n      this._setAxisRange('z', zmin, zmax);\n   }\n\n   /** @summary Set secondary axes ranges */\n   setAxes2Ranges(second_x, xaxis, xmin, xmax, second_y, yaxis, ymin, ymax) {\n      if (second_x) {\n         this.x2axis = xaxis;\n         this._setAxisRange('x2', xmin, xmax);\n      }\n      if (second_y) {\n         this.y2axis = yaxis;\n         this._setAxisRange('y2', ymin, ymax);\n      }\n   }\n\n   /** @summary Create x,y objects which maps user coordinates into pixels\n     * @desc Must be used only for v6 objects, see TFramePainter for more details\n     * @private */\n   createXY(opts) {\n      if (this.self_drawaxes) return;\n\n      this.cleanXY(); // remove all previous configurations\n\n      if (!opts) opts = { ndim: 1 };\n\n      this.v6axes = true;\n      this.swap_xy = opts.swap_xy || false;\n      this.reverse_x = opts.reverse_x || false;\n      this.reverse_y = opts.reverse_y || false;\n\n      this.logx = this.v7EvalAttr('x_log', 0);\n      this.logy = this.v7EvalAttr('y_log', 0);\n\n      const w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      this.scales_ndim = opts.ndim;\n\n      this.scale_xmin = this.xmin;\n      this.scale_xmax = this.xmax;\n\n      this.scale_ymin = this.ymin;\n      this.scale_ymax = this.ymax;\n\n      if (opts.extra_y_space) {\n         const log_scale = this.swap_xy ? this.logx : this.logy;\n         if (log_scale && (this.scale_ymax > 0))\n            this.scale_ymax = Math.exp(Math.log(this.scale_ymax)*1.1);\n         else\n            this.scale_ymax += (this.scale_ymax - this.scale_ymin)*0.1;\n      }\n\n      if ((opts.zoom_xmin !== opts.zoom_xmax) && ((this.zoom_xmin === this.zoom_xmax) || !this.zoomChangedInteractive('x'))) {\n         this.zoom_xmin = opts.zoom_xmin;\n         this.zoom_xmax = opts.zoom_xmax;\n      }\n\n      if ((opts.zoom_ymin !== opts.zoom_ymax) && ((this.zoom_ymin === this.zoom_ymax) || !this.zoomChangedInteractive('y'))) {\n         this.zoom_ymin = opts.zoom_ymin;\n         this.zoom_ymax = opts.zoom_ymax;\n      }\n\n      if (this.zoom_xmin !== this.zoom_xmax) {\n         this.scale_xmin = this.zoom_xmin;\n         this.scale_xmax = this.zoom_xmax;\n      }\n\n      if (this.zoom_ymin !== this.zoom_ymax) {\n         this.scale_ymin = this.zoom_ymin;\n         this.scale_ymax = this.zoom_ymax;\n      }\n\n      let xaxis = this.xaxis, yaxis = this.yaxis;\n      if (xaxis?._typename !== clTAxis) xaxis = create(clTAxis);\n      if (yaxis?._typename !== clTAxis) yaxis = create(clTAxis);\n\n      this.x_handle = new TAxisPainter(this.getDom(), xaxis, true);\n      this.x_handle.setPadName(this.getPadName());\n      this.x_handle.optionUnlab = this.v7EvalAttr('x_labels_hide', false);\n\n      this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, this.swap_xy, this.swap_xy ? [0, h] : [0, w],\n                                      { reverse: this.reverse_x,\n                                        log: this.swap_xy ? this.logy : this.logx,\n                                        symlog: this.swap_xy ? opts.symlog_y : opts.symlog_x,\n                                        logcheckmin: this.swap_xy,\n                                        logminfactor: 0.0001 });\n\n      this.x_handle.assignFrameMembers(this, 'x');\n\n      this.y_handle = new TAxisPainter(this.getDom(), yaxis, true);\n      this.y_handle.setPadName(this.getPadName());\n      this.y_handle.optionUnlab = this.v7EvalAttr('y_labels_hide', false);\n\n      this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, !this.swap_xy, this.swap_xy ? [0, w] : [0, h],\n                                      { reverse: this.reverse_y,\n                                        log: this.swap_xy ? this.logx : this.logy,\n                                        symlog: this.swap_xy ? opts.symlog_x : opts.symlog_y,\n                                        logcheckmin: (opts.ndim < 2) || this.swap_xy,\n                                        log_min_nz: opts.ymin_nz && (opts.ymin_nz < this.ymax) ? 0.5 * opts.ymin_nz : 0,\n                                        logminfactor: 3e-4 });\n\n      this.y_handle.assignFrameMembers(this, 'y');\n   }\n\n   /** @summary Identify if requested axes are drawn\n     * @desc Checks if x/y axes are drawn. Also if second side is already there */\n   hasDrawnAxes(second_x, second_y) {\n      return !second_x && !second_y ? this.axes_drawn : false;\n   }\n\n   /** @summary Draw configured axes on the frame\n     * @desc axes can be drawn only for main histogram  */\n   async drawAxes() {\n      if (this.axes_drawn || (this.xmin === this.xmax) || (this.ymin === this.ymax))\n         return this.axes_drawn;\n\n      const ticksx = this.v7EvalAttr('ticksX', 1),\n            ticksy = this.v7EvalAttr('ticksY', 1);\n      let sidex = 1, sidey = 1;\n\n      if (this.v7EvalAttr('swapX', false)) sidex = -1;\n      if (this.v7EvalAttr('swapY', false)) sidey = -1;\n\n      const w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      if (!this.v6axes) {\n         // this is partially same as v6 createXY method\n\n         this.cleanupAxes();\n\n         this.swap_xy = false;\n\n         if (this.zoom_xmin !== this.zoom_xmax) {\n            this.scale_xmin = this.zoom_xmin;\n            this.scale_xmax = this.zoom_xmax;\n         } else {\n            this.scale_xmin = this.xmin;\n            this.scale_xmax = this.xmax;\n         }\n\n         if (this.zoom_ymin !== this.zoom_ymax) {\n            this.scale_ymin = this.zoom_ymin;\n            this.scale_ymax = this.zoom_ymax;\n         } else {\n            this.scale_ymin = this.ymin;\n            this.scale_ymax = this.ymax;\n         }\n\n         this.recalculateRange(0);\n\n         this.x_handle = new RAxisPainter(this.getDom(), this, this.xaxis, 'x_');\n         this.x_handle.setPadName(this.getPadName());\n         this.x_handle.snapid = this.snapid;\n         this.x_handle.draw_swapside = (sidex < 0);\n         this.x_handle.draw_ticks = ticksx;\n\n         this.y_handle = new RAxisPainter(this.getDom(), this, this.yaxis, 'y_');\n         this.y_handle.setPadName(this.getPadName());\n         this.y_handle.snapid = this.snapid;\n         this.y_handle.draw_swapside = (sidey < 0);\n         this.y_handle.draw_ticks = ticksy;\n\n         this.z_handle = new RAxisPainter(this.getDom(), this, this.zaxis, 'z_');\n         this.z_handle.setPadName(this.getPadName());\n         this.z_handle.snapid = this.snapid;\n\n         this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, false, [0, w], w, { reverse: false });\n         this.x_handle.assignFrameMembers(this, 'x');\n\n         this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, true, [h, 0], -h, { reverse: false });\n         this.y_handle.assignFrameMembers(this, 'y');\n\n         // only get basic properties like log scale\n         this.z_handle.configureZAxis('zaxis', this);\n      }\n\n      const layer = this.getFrameSvg().selectChild('.axis_layer');\n\n      this.x_handle.has_obstacle = false;\n\n      const draw_horiz = this.swap_xy ? this.y_handle : this.x_handle,\n            draw_vertical = this.swap_xy ? this.x_handle : this.y_handle;\n      let pr;\n\n      if (this.getPadPainter()?._fast_drawing)\n         pr = Promise.resolve(true); // do nothing\n       else if (this.v6axes) {\n         // in v7 ticksx/y values shifted by 1 relative to v6\n         // In v7 ticksx === 0 means no ticks, ticksx === 1 equivalent to === 0 in v6\n\n         const can_adjust_frame = false, disable_x_draw = false, disable_y_draw = false;\n\n         draw_horiz.disable_ticks = (ticksx <= 0);\n         draw_vertical.disable_ticks = (ticksy <= 0);\n\n         const pr1 = draw_horiz.drawAxis(layer, w, h,\n                                   draw_horiz.invert_side ? null : `translate(0,${h})`,\n                                   (ticksx > 1) ? -h : 0, disable_x_draw,\n                                   undefined, false, this.getPadPainter().getPadHeight() - h - this.getFrameY()),\n\n          pr2 = draw_vertical.drawAxis(layer, w, h,\n                                   draw_vertical.invert_side ? `translate(${w})` : null,\n                                   (ticksy > 1) ? w : 0, disable_y_draw,\n                                   draw_vertical.invert_side ? 0 : this._frame_x, can_adjust_frame);\n\n         pr = Promise.all([pr1, pr2]).then(() => this.drawGrids());\n      } else {\n         let arr = [];\n\n         if (ticksx > 0)\n            arr.push(draw_horiz.drawAxis(layer, makeTranslate(0, sidex > 0 ? h : 0), sidex));\n\n         if (ticksy > 0)\n            arr.push(draw_vertical.drawAxis(layer, makeTranslate(sidey > 0 ? 0 : w, h), sidey));\n\n         pr = Promise.all(arr).then(() => {\n            arr = [];\n            if (ticksx > 1)\n               arr.push(draw_horiz.drawAxisOtherPlace(layer, makeTranslate(0, sidex < 0 ? h : 0), -sidex, ticksx === 2));\n\n            if (ticksy > 1)\n               arr.push(draw_vertical.drawAxisOtherPlace(layer, makeTranslate(sidey < 0 ? 0 : w, h), -sidey, ticksy === 2));\n            return Promise.all(arr);\n         }).then(() => this.drawGrids());\n      }\n\n      return pr.then(() => {\n         this.axes_drawn = true;\n         return true;\n      });\n   }\n\n   /** @summary Draw secondary configuread axes */\n   drawAxes2(second_x, second_y) {\n      const w = this.getFrameWidth(), h = this.getFrameHeight(),\n            layer = this.getFrameSvg().selectChild('.axis_layer');\n      let pr1, pr2;\n\n      if (second_x) {\n         if (this.zoom_x2min !== this.zoom_x2max) {\n            this.scale_x2min = this.zoom_x2min;\n            this.scale_x2max = this.zoom_x2max;\n         } else {\n           this.scale_x2min = this.x2min;\n           this.scale_x2max = this.x2max;\n         }\n         this.x2_handle = new RAxisPainter(this.getDom(), this, this.x2axis, 'x2_');\n         this.x2_handle.setPadName(this.getPadName());\n         this.x2_handle.snapid = this.snapid;\n\n         this.x2_handle.configureAxis('x2axis', this.x2min, this.x2max, this.scale_x2min, this.scale_x2max, false, [0, w], w, { reverse: false });\n         this.x2_handle.assignFrameMembers(this, 'x2');\n\n         pr1 = this.x2_handle.drawAxis(layer, null, -1);\n      }\n\n      if (second_y) {\n         if (this.zoom_y2min !== this.zoom_y2max) {\n            this.scale_y2min = this.zoom_y2min;\n            this.scale_y2max = this.zoom_y2max;\n         } else {\n            this.scale_y2min = this.y2min;\n            this.scale_y2max = this.y2max;\n         }\n\n         this.y2_handle = new RAxisPainter(this.getDom(), this, this.y2axis, 'y2_');\n         this.y2_handle.setPadName(this.getPadName());\n         this.y2_handle.snapid = this.snapid;\n\n         this.y2_handle.configureAxis('y2axis', this.y2min, this.y2max, this.scale_y2min, this.scale_y2max, true, [h, 0], -h, { reverse: false });\n         this.y2_handle.assignFrameMembers(this, 'y2');\n\n         pr2 = this.y2_handle.drawAxis(layer, makeTranslate(w, h), -1);\n      }\n\n      return Promise.all([pr1, pr2]);\n   }\n\n   /** @summary Return functions to create x/y points based on coordinates\n     * @desc In default case returns frame painter itself\n     * @private */\n   getGrFuncs(second_x, second_y) {\n      const use_x2 = second_x && this.grx2,\n          use_y2 = second_y && this.gry2;\n      if (!use_x2 && !use_y2) return this;\n\n      return {\n         use_x2,\n         grx: use_x2 ? this.grx2 : this.grx,\n         x_handle: use_x2 ? this.x2_handle : this.x_handle,\n         logx: use_x2 ? this.x2_handle.log : this.x_handle.log,\n         scale_xmin: use_x2 ? this.scale_x2min : this.scale_xmin,\n         scale_xmax: use_x2 ? this.scale_x2max : this.scale_xmax,\n         use_y2,\n         gry: use_y2 ? this.gry2 : this.gry,\n         y_handle: use_y2 ? this.y2_handle : this.y_handle,\n         logy: use_y2 ? this.y2_handle.log : this.y_handle.log,\n         scale_ymin: use_y2 ? this.scale_y2min : this.scale_ymin,\n         scale_ymax: use_y2 ? this.scale_y2max : this.scale_ymax,\n         swap_xy: this.swap_xy,\n         fp: this,\n         revertAxis(name, v) {\n            if ((name === 'x') && this.use_x2) name = 'x2';\n            if ((name === 'y') && this.use_y2) name = 'y2';\n            return this.fp.revertAxis(name, v);\n         },\n         axisAsText(name, v) {\n            if ((name === 'x') && this.use_x2) name = 'x2';\n            if ((name === 'y') && this.use_y2) name = 'y2';\n            return this.fp.axisAsText(name, v);\n         }\n      };\n   }\n\n   /** @summary function called at the end of resize of frame\n     * @desc Used to update attributes on the server\n     * @private */\n   sizeChanged() {\n      const changes = {};\n      this.v7AttrChange(changes, 'margins_left', this.fX1NDC);\n      this.v7AttrChange(changes, 'margins_bottom', this.fY1NDC);\n      this.v7AttrChange(changes, 'margins_right', 1 - this.fX2NDC);\n      this.v7AttrChange(changes, 'margins_top', 1 - this.fY2NDC);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n\n      this.redrawPad();\n   }\n\n   /** @summary Remove all x/y functions\n     * @private */\n   cleanXY() {\n      // remove all axes drawings\n      const clean = (name, grname) => {\n         this[name]?.cleanup();\n         delete this[name];\n         delete this[grname];\n      };\n\n      clean('x_handle', 'grx');\n      clean('y_handle', 'gry');\n      clean('z_handle', 'grz');\n      clean('x2_handle', 'grx2');\n      clean('y2_handle', 'gry2');\n\n      delete this.v6axes; // marker that v6 axes are used\n   }\n\n   /** @summary Remove all axes drawings\n     * @private */\n   cleanupAxes() {\n      this.cleanXY();\n\n      this.draw_g?.selectChild('.axis_layer').selectAll('*').remove();\n      this.axes_drawn = false;\n   }\n\n   /** @summary Removes all drawn elements of the frame\n     * @private */\n   cleanFrameDrawings() {\n      // cleanup all 3D drawings if any\n      if (isFunc(this.create3DScene))\n         this.create3DScene(-1);\n\n      this.cleanupAxes();\n\n      const clean = (name) => {\n         this[name+'min'] = this[name+'max'] = 0;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         this[`scale_${name}min`] = this[`scale_${name}max`] = 0;\n      };\n\n      clean('x');\n      clean('y');\n      clean('z');\n      clean('x2');\n      clean('y2');\n\n      this.draw_g?.selectChild('.main_layer').selectAll('*').remove();\n      this.draw_g?.selectChild('.upper_layer').selectAll('*').remove();\n   }\n\n   /** @summary Fully cleanup frame\n     * @private */\n   cleanup() {\n      this.cleanFrameDrawings();\n\n      if (this.draw_g) {\n         this.draw_g.selectAll('*').remove();\n         this.draw_g.on('mousedown', null)\n                    .on('dblclick', null)\n                    .on('wheel', null)\n                    .on('contextmenu', null)\n                    .property('interactive_set', null);\n      }\n\n      if (this.keys_handler) {\n         window.removeEventListener('keydown', this.keys_handler, false);\n         this.keys_handler = null;\n      }\n      delete this.enabledKeys;\n      delete this.self_drawaxes;\n\n      delete this.xaxis;\n      delete this.yaxis;\n      delete this.zaxis;\n      delete this.x2axis;\n      delete this.y2axis;\n\n      delete this.draw_g; // frame <g> element managet by the pad\n\n      delete this._click_handler;\n      delete this._dblclick_handler;\n\n      const pp = this.getPadPainter();\n      if (pp?.frame_painter_ref === this)\n         delete pp.frame_painter_ref;\n\n      super.cleanup();\n   }\n\n   /** @summary Redraw frame\n     * @private */\n   redraw() {\n      const pp = this.getPadPainter();\n      if (pp) pp.frame_painter_ref = this;\n\n      // first update all attributes from objects\n      this.updateAttributes();\n\n      const rect = pp?.getPadRect() ?? { width: 10, height: 10 },\n            lm = Math.round(rect.width * this.fX1NDC),\n            tm = Math.round(rect.height * (1 - this.fY2NDC));\n      let w = Math.round(rect.width * (this.fX2NDC - this.fX1NDC)),\n          h = Math.round(rect.height * (this.fY2NDC - this.fY1NDC)),\n          rotate = false, fixpos = false, trans;\n\n      if (pp?.options) {\n         if (pp.options.RotateFrame) rotate = true;\n         if (pp.options.FixFrame) fixpos = true;\n      }\n\n      if (rotate) {\n         trans = `rotate(-90,${lm},${tm}) translate(${lm-h},${tm})`;\n         [w, h] = [h, w];\n      } else\n         trans = makeTranslate(lm, tm);\n\n\n      // update values here to let access even when frame is not really updated\n      this._frame_x = lm;\n      this._frame_y = tm;\n      this._frame_width = w;\n      this._frame_height = h;\n      this._frame_rotate = rotate;\n      this._frame_fixpos = fixpos;\n\n      if (this.mode3d) return this; // no need for real draw in mode3d\n\n      // this is svg:g object - container for every other items belonging to frame\n      this.draw_g = this.getFrameSvg();\n\n      let top_rect, main_svg;\n\n      if (this.draw_g.empty()) {\n         this.draw_g = this.getLayerSvg('primitives_layer').append('svg:g').attr('class', 'root_frame');\n\n         if (!this.isBatchMode())\n            this.draw_g.append('svg:title').text('');\n\n         top_rect = this.draw_g.append('svg:rect');\n\n         main_svg = this.draw_g.append('svg:svg')\n                           .attr('class', 'main_layer')\n                           .attr('x', 0)\n                           .attr('y', 0)\n                           .attr('overflow', 'hidden');\n\n         this.draw_g.append('svg:g').attr('class', 'axis_layer');\n         this.draw_g.append('svg:g').attr('class', 'upper_layer');\n      } else {\n         top_rect = this.draw_g.selectChild('rect');\n         main_svg = this.draw_g.selectChild('.main_layer');\n      }\n\n      this.axes_drawn = false;\n\n      this.draw_g.attr('transform', trans);\n\n      top_rect.attr('x', 0)\n              .attr('y', 0)\n              .attr('width', w)\n              .attr('height', h)\n              .attr('rx', this.lineatt.rx || null)\n              .attr('ry', this.lineatt.ry || null)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      main_svg.attr('width', w)\n              .attr('height', h)\n              .attr('viewBox', `0 0 ${w} ${h}`);\n\n      let pr = Promise.resolve(true);\n\n      if (this.v7EvalAttr('drawAxes')) {\n         this.self_drawaxes = true;\n         this.setAxesRanges();\n         pr = this.drawAxes().then(() => this.addInteractivity());\n      }\n\n      return pr.then(() => { return this; });\n   }\n\n   /** @summary Returns frame X position */\n   getFrameX() { return this._frame_x || 0; }\n\n   /** @summary Returns frame Y position */\n   getFrameY() { return this._frame_y || 0; }\n\n   /** @summary Returns frame width */\n   getFrameWidth() { return this._frame_width || 0; }\n\n   /** @summary Returns frame height */\n   getFrameHeight() { return this._frame_height || 0; }\n\n   /** @summary Returns frame rectangle plus extra info for hint display */\n   getFrameRect() {\n      return {\n         x: this._frame_x || 0,\n         y: this._frame_y || 0,\n         width: this.getFrameWidth(),\n         height: this.getFrameHeight(),\n         transform: this.draw_g?.attr('transform') || '',\n         hint_delta_x: 0,\n         hint_delta_y: 0\n      };\n   }\n\n   /** @summary Returns palette associated with frame */\n   getHistPalette() {\n      return this.getPadPainter().getHistPalette();\n   }\n\n   /** @summary Configure user-defined click handler\n     * @desc Function will be called every time when frame click was perfromed\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of click will be disabled */\n   configureUserClickHandler(handler) {\n      this._click_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary Configure user-defined dblclick handler\n     * @desc Function will be called every time when double click was called\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of dblclick (unzoom) will be disabled */\n   configureUserDblclickHandler(handler) {\n      this._dblclick_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary function can be used for zooming into specified range\n     * @desc if both limits for each axis 0 (like xmin === xmax === 0), axis will be unzoomed\n     * @return {Promise} with boolean flag if zoom operation was performed */\n   async zoom(xmin, xmax, ymin, ymax, zmin, zmax) {\n      // disable zooming when axis conversion is enabled\n      if (this.projection) return false;\n\n      if (xmin === 'x') { xmin = xmax; xmax = ymin; ymin = undefined; } else\n      if (xmin === 'y') { ymax = ymin; ymin = xmax; xmin = xmax = undefined; } else\n      if (xmin === 'z') { zmin = xmax; zmax = ymin; xmin = xmax = ymin = undefined; }\n\n      let zoom_x = (xmin !== xmax), zoom_y = (ymin !== ymax), zoom_z = (zmin !== zmax),\n          unzoom_x = false, unzoom_y = false, unzoom_z = false;\n\n      if (zoom_x) {\n         let cnt = 0;\n         if (xmin <= this.xmin) { xmin = this.xmin; cnt++; }\n         if (xmax >= this.xmax) { xmax = this.xmax; cnt++; }\n         if (cnt === 2) { zoom_x = false; unzoom_x = true; }\n      } else\n         unzoom_x = (xmin === xmax) && (xmin === 0);\n\n\n      if (zoom_y) {\n         let cnt = 0;\n         if (ymin <= this.ymin) { ymin = this.ymin; cnt++; }\n         if (ymax >= this.ymax) { ymax = this.ymax; cnt++; }\n         if (cnt === 2) { zoom_y = false; unzoom_y = true; }\n      } else\n         unzoom_y = (ymin === ymax) && (ymin === 0);\n\n\n      if (zoom_z) {\n         let cnt = 0;\n         // if (this.logz && this.ymin_nz && this.getDimension()===2) main_zmin = 0.3*this.ymin_nz;\n         if (zmin <= this.zmin) { zmin = this.zmin; cnt++; }\n         if (zmax >= this.zmax) { zmax = this.zmax; cnt++; }\n         if (cnt === 2) { zoom_z = false; unzoom_z = true; }\n      } else\n         unzoom_z = (zmin === zmax) && (zmin === 0);\n\n\n      let changed = false, r_x = '', r_y = '', r_z = '', is_any_check = false;\n      const req = {\n            _typename: `${nsREX}RFrame::RUserRanges`,\n            values: [0, 0, 0, 0, 0, 0],\n            flags: [false, false, false, false, false, false]\n      },\n\n      checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_x && (force || painter.canZoomInside('x', xmin, xmax))) {\n            this.zoom_xmin = xmin;\n            this.zoom_xmax = xmax;\n            changed = true; r_x = '0';\n            zoom_x = false;\n            req.values[0] = xmin; req.values[1] = xmax;\n            req.flags[0] = req.flags[1] = true;\n         }\n         if (zoom_y && (force || painter.canZoomInside('y', ymin, ymax))) {\n            this.zoom_ymin = ymin;\n            this.zoom_ymax = ymax;\n            changed = true; r_y = '1';\n            zoom_y = false;\n            req.values[2] = ymin; req.values[3] = ymax;\n            req.flags[2] = req.flags[3] = true;\n         }\n         if (zoom_z && (force || painter.canZoomInside('z', zmin, zmax))) {\n            this.zoom_zmin = zmin;\n            this.zoom_zmax = zmax;\n            changed = true; r_z = '2';\n            zoom_z = false;\n            req.values[4] = zmin; req.values[5] = zmax;\n            req.flags[4] = req.flags[5] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_x || zoom_y || zoom_z)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      // and process unzoom, if any\n      if (unzoom_x || unzoom_y || unzoom_z) {\n         if (unzoom_x) {\n            if (this.zoom_xmin !== this.zoom_xmax) { changed = true; r_x = '0'; }\n            this.zoom_xmin = this.zoom_xmax = 0;\n            req.values[0] = req.values[1] = -1;\n         }\n         if (unzoom_y) {\n            if (this.zoom_ymin !== this.zoom_ymax) { changed = true; r_y = '1'; }\n            this.zoom_ymin = this.zoom_ymax = 0;\n            req.values[2] = req.values[3] = -1;\n         }\n         if (unzoom_z) {\n            if (this.zoom_zmin !== this.zoom_zmax) { changed = true; r_z = '2'; }\n            this.zoom_zmin = this.zoom_zmax = 0;\n            req.values[4] = req.values[5] = -1;\n         }\n      }\n\n      if (!changed) return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: `${nsREX}RFrame::RZoomRequest`, ranges: req });\n\n      return this.interactiveRedraw('pad', 'zoom' + r_x + r_y + r_z).then(() => true);\n   }\n\n   /** @summary Provide zooming of single axis\n     * @desc One can specify names like x/y/z but also second axis x2 or y2 */\n   async zoomSingle(name, vmin, vmax) {\n      const names = ['x', 'y', 'z', 'x2', 'y2'], indx = names.indexOf(name);\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection || !this[name+'_handle'] || (indx < 0))\n         return false;\n\n      let zoom_v = (vmin !== vmax), unzoom_v = false;\n\n      if (zoom_v) {\n         let cnt = 0;\n         if (vmin <= this[name+'min']) { vmin = this[name+'min']; cnt++; }\n         if (vmax >= this[name+'max']) { vmax = this[name+'max']; cnt++; }\n         if (cnt === 2) { zoom_v = false; unzoom_v = true; }\n      } else\n         unzoom_v = (vmin === vmax) && (vmin === 0);\n\n\n      let changed = false, is_any_check = false;\n      const req = {\n             _typename: `${nsREX}RFrame::RUserRanges`,\n             values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n             flags: [false, false, false, false, false, false, false, false, false, false]\n       },\n\n       checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter?.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_v && (force || painter.canZoomInside(name[0], vmin, vmax))) {\n            this['zoom_' + name + 'min'] = vmin;\n            this['zoom_' + name + 'max'] = vmax;\n            changed = true;\n            zoom_v = false;\n            req.values[indx*2] = vmin; req.values[indx*2+1] = vmax;\n            req.flags[indx*2] = req.flags[indx*2+1] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_v)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      if (unzoom_v) {\n         if (this[`zoom_${name}min`] !== this[`zoom_${name}max`]) changed = true;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         req.values[indx*2] = req.values[indx*2+1] = -1;\n      }\n\n      if (!changed) return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: `${nsREX}RFrame::RZoomRequest`, ranges: req });\n\n      return this.interactiveRedraw('pad', `zoom${indx}`).then(() => true);\n   }\n\n   /** @summary Checks if specified axis zoomed */\n   isAxisZoomed(axis) {\n      return this[`zoom_${axis}min`] !== this[`zoom_${axis}max`];\n   }\n\n   /** @summary Unzoom specified axes\n     * @return {Promise} with boolean flag if zoom is changed */\n   async unzoom(dox, doy, doz) {\n      if (dox === 'all')\n         return this.unzoom('x2').then(() => this.unzoom('y2')).then(() => this.unzoom('xyz'));\n\n      if ((dox === 'x2') || (dox === 'y2')) {\n         return this.zoomSingle(dox, 0, 0).then(changed => {\n            if (changed) this.zoomChangedInteractive(dox, 'unzoom');\n            return changed;\n         });\n      }\n\n      if (typeof dox === 'undefined') dox = doy = doz = true; else\n      if (isStr(dox)) { doz = dox.indexOf('z') >= 0; doy = dox.indexOf('y') >= 0; dox = dox.indexOf('x') >= 0; }\n\n      return this.zoom(dox ? 0 : undefined, dox ? 0 : undefined,\n                       doy ? 0 : undefined, doy ? 0 : undefined,\n                       doz ? 0 : undefined, doz ? 0 : undefined).then(changed => {\n         if (changed && dox) this.zoomChangedInteractive('x', 'unzoom');\n         if (changed && doy) this.zoomChangedInteractive('y', 'unzoom');\n         if (changed && doz) this.zoomChangedInteractive('z', 'unzoom');\n\n         return changed;\n      });\n   }\n\n   /** @summary Mark/check if zoom for specific axis was changed interactively\n     * @private */\n   zoomChangedInteractive(axis, value) {\n      if (axis === 'reset') {\n         this.zoom_changed_x = this.zoom_changed_y = this.zoom_changed_z = undefined;\n         return;\n      }\n      if (!axis || axis === 'any')\n         return this.zoom_changed_x || this.zoom_changed_y || this.zoom_changed_z;\n\n      if ((axis !== 'x') && (axis !== 'y') && (axis !== 'z')) return;\n\n      const fld = 'zoom_changed_' + axis;\n      if (value === undefined) return this[fld];\n\n      if (value === 'unzoom') {\n         // special handling of unzoom, only if was never changed before flag set to true\n         this[fld] = (this[fld] === undefined);\n         return;\n      }\n\n      if (value) this[fld] = true;\n   }\n\n   /** @summary Fill menu for frame when server is not there */\n   fillObjectOfflineMenu(menu, kind) {\n      if ((kind !== 'x') && (kind !== 'y')) return;\n\n      menu.add('Unzoom', () => this.unzoom(kind));\n\n      // if (this[kind+'_kind'] === kAxisNormal)\n      //   menu.addchk(this['log'+kind], 'SetLog'+kind, this.toggleAxisLog.bind(this, kind));\n\n      // here should be all axes attributes in offline\n   }\n\n   /** @summary Set grid drawing for specified axis */\n   changeFrameAttr(attr, value) {\n      const changes = {};\n      this.v7AttrChange(changes, attr, value);\n      this.v7SetAttr(attr, value);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      this.redrawPad();\n   }\n\n   /** @summary Fill context menu */\n   fillContextMenu(menu, kind /* , obj */) {\n      // when fill and show context menu, remove all zooming\n\n      if (kind === 'pal') kind = 'z';\n\n      if ((kind === 'x') || (kind === 'y') || (kind === 'x2') || (kind === 'y2')) {\n         const handle = this[kind+'_handle'];\n         if (!handle) return false;\n         menu.add('header: ' + kind.toUpperCase() + ' axis');\n         return handle.fillAxisContextMenu(menu, kind);\n      }\n\n      const alone = menu.size() === 0;\n\n      if (alone)\n         menu.add('header:Frame');\n      else\n         menu.add('separator');\n\n      if (this.zoom_xmin !== this.zoom_xmax)\n         menu.add('Unzoom X', () => this.unzoom('x'));\n      if (this.zoom_ymin !== this.zoom_ymax)\n         menu.add('Unzoom Y', () => this.unzoom('y'));\n      if (this.zoom_zmin !== this.zoom_zmax)\n         menu.add('Unzoom Z', () => this.unzoom('z'));\n      if (this.zoom_x2min !== this.zoom_x2max)\n         menu.add('Unzoom X2', () => this.unzoom('x2'));\n      if (this.zoom_y2min !== this.zoom_y2max)\n         menu.add('Unzoom Y2', () => this.unzoom('y2'));\n      menu.add('Unzoom all', () => this.unzoom('all'));\n\n      menu.add('separator');\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (this.x_handle)\n         menu.addchk(this.x_handle.draw_grid, 'Grid x', flag => this.changeFrameAttr('gridX', flag));\n      if (this.y_handle)\n         menu.addchk(this.y_handle.draw_grid, 'Grid y', flag => this.changeFrameAttr('gridY', flag));\n      if (this.x_handle && !this.x2_handle)\n         menu.addchk(this.x_handle.draw_swapside, 'Swap x', flag => this.changeFrameAttr('swapX', flag));\n      if (this.y_handle && !this.y2_handle)\n         menu.addchk(this.y_handle.draw_swapside, 'Swap y', flag => this.changeFrameAttr('swapY', flag));\n      if (this.x_handle && !this.x2_handle) {\n         menu.add('sub:Ticks x');\n         menu.addchk(this.x_handle.draw_ticks === 0, 'off', () => this.changeFrameAttr('ticksX', 0));\n         menu.addchk(this.x_handle.draw_ticks === 1, 'normal', () => this.changeFrameAttr('ticksX', 1));\n         menu.addchk(this.x_handle.draw_ticks === 2, 'ticks on both sides', () => this.changeFrameAttr('ticksX', 2));\n         menu.addchk(this.x_handle.draw_ticks === 3, 'labels on both sides', () => this.changeFrameAttr('ticksX', 3));\n         menu.add('endsub:');\n       }\n      if (this.y_handle && !this.y2_handle) {\n         menu.add('sub:Ticks y');\n         menu.addchk(this.y_handle.draw_ticks === 0, 'off', () => this.changeFrameAttr('ticksY', 0));\n         menu.addchk(this.y_handle.draw_ticks === 1, 'normal', () => this.changeFrameAttr('ticksY', 1));\n         menu.addchk(this.y_handle.draw_ticks === 2, 'ticks on both sides', () => this.changeFrameAttr('ticksY', 2));\n         menu.addchk(this.y_handle.draw_ticks === 3, 'labels on both sides', () => this.changeFrameAttr('ticksY', 3));\n         menu.add('endsub:');\n       }\n\n      menu.addAttributesMenu(this, alone ? '' : 'Frame ');\n      menu.add('separator');\n\n      menu.add('sub:Save as');\n      ['svg', 'png', 'jpeg', 'pdf', 'webp'].forEach(fmt => menu.add(`frame.${fmt}`, () => this.getPadPainter().saveAs(fmt, 'frame', `frame.${fmt}`)));\n      menu.add('endsub:');\n\n      return true;\n   }\n\n   /** @summary Convert graphical coordinate into axis value */\n   revertAxis(axis, pnt) { return this[`${axis}_handle`]?.revertPoint(pnt) ?? 0; }\n\n   /** @summary Show axis status message\n     * @desc method called normally when mouse enter main object element\n     * @private */\n   showAxisStatus(axis_name, evnt) {\n      const hint_name = axis_name, hint_title = 'axis',\n            m = d3_pointer(evnt, this.getFrameSvg().node());\n      let id = (axis_name === 'x') ? 0 : 1;\n\n      if (this.swap_xy) id = 1 - id;\n\n      const axis_value = this.revertAxis(axis_name, m[id]);\n\n      this.showObjectStatus(hint_name, hint_title, `${axis_name} : ${this.axisAsText(axis_name, axis_value)}`, `${Math.round(m[0])},${Math.round(m[1])}`);\n   }\n\n   /** @summary Add interactive keys handlers\n    * @private */\n   addKeysHandler() {\n      if (this.isBatchMode()) return;\n      FrameInteractive.assign(this);\n      this.addFrameKeysHandler();\n   }\n\n   /** @summary Add interactive functionality to the frame\n    * @private */\n   addInteractivity(for_second_axes) {\n      if (this.isBatchMode() || (!settings.Zooming && !settings.ContextMenu))\n         return true;\n\n      FrameInteractive.assign(this);\n      if (!for_second_axes)\n         this.addBasicInteractivity();\n      return this.addFrameInteractivity(for_second_axes);\n   }\n\n   /** @summary Set selected range back to pad object - to be implemented\n     * @private */\n   setRootPadRange(/* pad, is3d */) {\n      // TODO: change of pad range and send back to root application\n   }\n\n   /** @summary Toggle log scale on the specified axes */\n   toggleAxisLog(axis) {\n      const handle = this[axis+'_handle'];\n      return handle?.changeAxisLog('toggle');\n   }\n\n} // class RFramePainter\n\nexport { RFramePainter };\n","import { gStyle, settings, constants, internals, addMethods,\n         isPromise, getPromise, postponePromise, isBatchMode, isObject, isFunc, isStr, clTPad, clTFrame, nsREX } from '../core.mjs';\nimport { ColorPalette, addColor, getRootColors } from '../base/colors.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { getElementRect, getAbsPosInCanvas, DrawOptions, compressSVG, makeTranslate, svgToImage } from '../base/BasePainter.mjs';\nimport { selectActivePad, getActivePad } from '../base/ObjectPainter.mjs';\nimport { registerForResize, saveFile } from '../gui/utils.mjs';\nimport { BrowserLayout } from '../gui/display.mjs';\nimport { createMenu, closeMenu } from '../gui/menu.mjs';\nimport { PadButtonsHandler } from './TPadPainter.mjs';\n\n\n/**\n * @summary Painter class for RPad\n *\n * @private\n */\n\nclass RPadPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, pad, iscan) {\n      super(dom, pad, '', 'pad');\n      this.pad = pad;\n      this.iscan = iscan; // indicate if working with canvas\n      this.this_pad_name = '';\n      if (!this.iscan && (pad !== null)) {\n         if (pad.fObjectID)\n            this.this_pad_name = 'pad' + pad.fObjectID; // use objectid as padname\n         else\n            this.this_pad_name = 'ppp' + internals.id_counter++; // artificical name\n      }\n      this.painters = []; // complete list of all painters in the pad\n      this.has_canvas = true;\n      this.forEachPainter = this.forEachPainterInPad;\n\n      const d = this.selectDom();\n      if (!d.empty() && d.property('_batch_mode'))\n         this.batch_mode = true;\n   }\n\n   /** @summary Indicates that drawing runs in batch mode\n     * @private */\n   isBatchMode() {\n      if (this.batch_mode !== undefined)\n         return this.batch_mode;\n\n      if (isBatchMode())\n         return true;\n\n      if (!this.iscan && this.has_canvas)\n         return this.getCanvPainter()?.isBatchMode();\n\n      return false;\n   }\n\n   /** @summary Indicates that is not Root6 pad painter\n    * @private */\n   isRoot6() { return false; }\n\n   /** @summary Returns true if pad is editable */\n   isEditable() {\n      return true;\n   }\n\n  /** @summary Returns SVG element for the pad itself\n    * @private */\n   svg_this_pad() {\n      return this.getPadSvg(this.this_pad_name);\n   }\n\n   /** @summary Returns main painter on the pad\n     * @desc Typically main painter is TH1/TH2 object which is drawing axes\n    * @private */\n   getMainPainter() {\n      return this.main_painter_ref || null;\n   }\n\n   /** @summary Assign main painter on the pad\n    * @private */\n   setMainPainter(painter, force) {\n      if (!this.main_painter_ref || force)\n         this.main_painter_ref = painter;\n   }\n\n   /** @summary cleanup pad and all primitives inside */\n   cleanup() {\n      if (this._doing_draw)\n         console.error('pad drawing is not completed when cleanup is called');\n\n      this.painters.forEach(p => p.cleanup());\n\n      const svg_p = this.svg_this_pad();\n      if (!svg_p.empty()) {\n         svg_p.property('pad_painter', null);\n         if (!this.iscan) svg_p.remove();\n      }\n\n      delete this.main_painter_ref;\n      delete this.frame_painter_ref;\n      delete this.pads_cache;\n      delete this._pad_x;\n      delete this._pad_y;\n      delete this._pad_width;\n      delete this._pad_height;\n      delete this._doing_draw;\n      delete this._dfltRFont;\n\n      this.painters = [];\n      this.pad = null;\n      this.draw_object = null;\n      this.pad_frame = null;\n      this.this_pad_name = undefined;\n      this.has_canvas = false;\n\n      selectActivePad({ pp: this, active: false });\n\n      super.cleanup();\n   }\n\n   /** @summary Returns frame painter inside the pad\n    * @private */\n   getFramePainter() { return this.frame_painter_ref; }\n\n   /** @summary get pad width */\n   getPadWidth() { return this._pad_width || 0; }\n\n   /** @summary get pad height */\n   getPadHeight() { return this._pad_height || 0; }\n\n   /** @summary return pad log state x or y are allowed */\n   getPadLog(name) { return false; }\n\n   /** @summary get pad rect */\n   getPadRect() {\n      return {\n         x: this._pad_x || 0,\n         y: this._pad_y || 0,\n         width: this.getPadWidth(),\n         height: this.getPadHeight()\n      };\n   }\n\n   /** @summary Returns frame coordiantes - also when frame is not drawn */\n   getFrameRect() {\n      const fp = this.getFramePainter();\n      if (fp) return fp.getFrameRect();\n\n      const w = this.getPadWidth(),\n            h = this.getPadHeight(),\n            rect = {};\n\n      rect.szx = Math.round(0.5*w);\n      rect.szy = Math.round(0.5*h);\n      rect.width = 2*rect.szx;\n      rect.height = 2*rect.szy;\n      rect.x = Math.round(w/2 - rect.szx);\n      rect.y = Math.round(h/2 - rect.szy);\n      rect.hint_delta_x = rect.szx;\n      rect.hint_delta_y = rect.szy;\n      rect.transform = makeTranslate(rect.x, rect.y) || '';\n      return rect;\n   }\n\n   /** @summary return RPad object */\n   getRootPad(is_root6) {\n      return (is_root6 === undefined) || !is_root6 ? this.pad : null;\n   }\n\n   /** @summary Cleanup primitives from pad - selector lets define which painters to remove\n    * @private */\n   cleanPrimitives(selector) {\n      if (!isFunc(selector)) return;\n\n      for (let k = this.painters.length-1; k >= 0; --k) {\n         if (selector(this.painters[k])) {\n            this.painters[k].cleanup();\n            this.painters.splice(k, 1);\n         }\n      }\n   }\n\n   /** @summary Removes and cleanup specified primitive\n     * @desc also secondary primitives will be removed\n     * @return new index to continue loop or -111 if main painter removed\n     * @private */\n   removePrimitive(indx) {\n      const prim = this.painters[indx], arr = [];\n      let resindx = indx;\n      for (let k = this.painters.length-1; k >= 0; --k) {\n         if ((k === indx) || this.painters[k].isSecondary(prim)) {\n            arr.push(this.painters[k]);\n            this.painters.splice(k, 1);\n            if (k <= indx) resindx--;\n         }\n      }\n\n      arr.forEach(painter => {\n         painter.cleanup();\n         if (this.main_painter_ref === painter) {\n            delete this.main_painter_ref;\n            resindx = -111;\n         }\n      });\n\n      return resindx;\n   }\n\n   /** @summary try to find object by name in list of pad primitives\n     * @desc used to find title drawing\n     * @private */\n   findInPrimitives(objname, objtype) {\n      console.warn('findInPrimitives not implemented for RPad');\n      return null;\n   }\n\n   /** @summary Try to find painter for specified object\n     * @desc can be used to find painter for some special objects, registered as\n     * histogram functions\n     * @private */\n   findPainterFor(selobj, selname, seltype) {\n      return this.painters.find(p => {\n         const pobj = p.getObject();\n         if (!pobj) return false;\n\n         if (selobj && (pobj === selobj)) return true;\n         if (!selname && !seltype) return false;\n         if (selname && (pobj.fName !== selname)) return false;\n         if (seltype && (pobj._typename !== seltype)) return false;\n         return true;\n      });\n   }\n\n   /** @summary Returns palette associated with pad.\n     * @desc Either from existing palette painter or just default palette */\n   getHistPalette() {\n      const pp = this.findPainterFor(undefined, undefined, `${nsREX}RPaletteDrawable`);\n\n      if (pp) return pp.getHistPalette();\n\n      if (!this.fDfltPalette) {\n         this.fDfltPalette = {\n            _typename: `${nsREX}RPalette`,\n            fColors: [{ fOrdinal: 0, fColor: { fColor: 'rgb(53, 42, 135)' } },\n                      { fOrdinal: 0.125, fColor: { fColor: 'rgb(15, 92, 221)' } },\n                      { fOrdinal: 0.25, fColor: { fColor: 'rgb(20, 129, 214)' } },\n                      { fOrdinal: 0.375, fColor: { fColor: 'rgb(6, 164, 202)' } },\n                      { fOrdinal: 0.5, fColor: { fColor: 'rgb(46, 183, 164)' } },\n                      { fOrdinal: 0.625, fColor: { fColor: 'rgb(135, 191, 119)' } },\n                      { fOrdinal: 0.75, fColor: { fColor: 'rgb(209, 187, 89)' } },\n                      { fOrdinal: 0.875, fColor: { fColor: 'rgb(254, 200, 50)' } },\n                      { fOrdinal: 1, fColor: { fColor: 'rgb(249, 251, 14)' } }],\n             fInterpolate: true,\n             fNormalized: true\n         };\n         addMethods(this.fDfltPalette, `${nsREX}RPalette`);\n      }\n\n      return this.fDfltPalette;\n   }\n\n   /** @summary Returns number of painters\n     * @private */\n   getNumPainters() { return this.painters.length; }\n\n   /** @summary Call function for each painter in pad\n     * @param {function} userfunc - function to call\n     * @param {string} kind - 'all' for all objects (default), 'pads' only pads and subpads, 'objects' only for object in current pad\n     * @private */\n   forEachPainterInPad(userfunc, kind) {\n      if (!kind) kind = 'all';\n      if (kind !== 'objects') userfunc(this);\n      for (let k = 0; k < this.painters.length; ++k) {\n         const sub = this.painters[k];\n         if (isFunc(sub.forEachPainterInPad)) {\n            if (kind !== 'objects') sub.forEachPainterInPad(userfunc, kind);\n         } else if (kind !== 'pads') userfunc(sub);\n      }\n   }\n\n   /** @summary register for pad events receiver\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   registerForPadEvents(receiver) {\n      this.pad_events_receiver = receiver;\n   }\n\n   /** @summary Generate pad events, normally handled by GED\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   producePadEvent(what, padpainter, painter, position, place) {\n      if ((what === 'select') && isFunc(this.selectActivePad))\n         this.selectActivePad(padpainter, painter, position);\n\n      if (this.pad_events_receiver)\n         this.pad_events_receiver({ what, padpainter, painter, position, place });\n   }\n\n   /** @summary method redirect call to pad events receiver */\n   selectObjectPainter(painter, pos, place) {\n      const istoppad = (this.iscan || !this.has_canvas),\n          canp = istoppad ? this : this.getCanvPainter();\n\n      if (painter === undefined) painter = this;\n\n      if (pos && !istoppad)\n         pos = getAbsPosInCanvas(this.svg_this_pad(), pos);\n\n      selectActivePad({ pp: this, active: true });\n\n      canp.producePadEvent('select', this, painter, pos, place);\n   }\n\n   /** @summary Set fast drawing property depending on the size\n     * @private */\n   setFastDrawing(w, h) {\n      const was_fast = this._fast_drawing;\n      this._fast_drawing = settings.SmallPad && ((w < settings.SmallPad.width) || (h < settings.SmallPad.height));\n      if (was_fast !== this._fast_drawing)\n         this.showPadButtons();\n   }\n\n   /** @summary Returns true if canvas configured with grayscale\n     * @private */\n   isGrayscale() {\n      return false;\n   }\n\n   /** @summary Set grayscale mode for the canvas\n     * @private */\n   setGrayscale(/* flag */) {\n      console.error('grayscale mode not implemented for RCanvas');\n   }\n\n   /** @summary Create SVG element for the canvas */\n   createCanvasSvg(check_resize, new_size) {\n      const lmt = 5;\n      let factor = null, svg = null, rect = null, btns, frect;\n\n      if (check_resize > 0) {\n         if (this._fixed_size)\n            return check_resize > 1; // flag used to force re-drawing of all subpads\n\n         svg = this.getCanvSvg();\n         if (svg.empty())\n            return false;\n\n         factor = svg.property('height_factor');\n\n         rect = this.testMainResize(check_resize, null, factor);\n\n         if (!rect.changed && (check_resize === 1))\n            return false;\n\n         if (!this.isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n\n         frect = svg.selectChild('.canvas_fillrect');\n      } else {\n         const render_to = this.selectDom();\n\n         if (render_to.style('position') === 'static')\n            render_to.style('position', 'relative');\n\n         svg = render_to.append('svg')\n             .attr('class', 'jsroot root_canvas')\n             .property('pad_painter', this) // this is custom property\n             .property('current_pad', '') // this is custom property\n             .property('redraw_by_resize', false); // could be enabled to force redraw by each resize\n\n         this.setTopPainter(); // assign canvas as top painter of that element\n\n         if (!this.isBatchMode() && !this.online_canvas)\n            svg.append('svg:title').text('ROOT canvas');\n\n         frect = svg.append('svg:path').attr('class', 'canvas_fillrect');\n         if (!this.isBatchMode()) {\n            frect.style('pointer-events', 'visibleFill')\n                 .on('dblclick', evnt => this.enlargePad(evnt, true))\n                 .on('click', () => this.selectObjectPainter(this, null))\n                 .on('mouseenter', () => this.showObjectStatus())\n                 .on('contextmenu', settings.ContextMenu ? evnt => this.padContextMenu(evnt) : null);\n         }\n\n         svg.append('svg:g').attr('class', 'primitives_layer');\n         svg.append('svg:g').attr('class', 'info_layer');\n         if (!this.isBatchMode()) {\n            btns = svg.append('svg:g')\n                      .attr('class', 'btns_layer')\n                      .property('leftside', settings.ToolBarSide === 'left')\n                      .property('vertical', settings.ToolBarVert);\n         }\n\n         factor = 0.66;\n         if (this.pad && this.pad.fWinSize[0] && this.pad.fWinSize[1]) {\n            factor = this.pad.fWinSize[1] / this.pad.fWinSize[0];\n            if ((factor < 0.1) || (factor > 10)) factor = 0.66;\n         }\n\n         if (this._fixed_size) {\n            render_to.style('overflow', 'auto');\n            rect = { width: this.pad.fWinSize[0], height: this.pad.fWinSize[1] };\n            if (!rect.width || !rect.height)\n               rect = getElementRect(render_to);\n         } else\n            rect = this.testMainResize(2, new_size, factor);\n      }\n\n      this.createAttFill({ pattern: 1001, color: 0 });\n\n      if ((rect.width <= lmt) || (rect.height <= lmt)) {\n         svg.style('display', 'none');\n         console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);\n         rect.width = 200; rect.height = 100; // just to complete drawing\n      } else\n         svg.style('display', null);\n\n      if (this._fixed_size) {\n         svg.attr('x', 0)\n            .attr('y', 0)\n            .attr('width', rect.width)\n            .attr('height', rect.height)\n            .style('position', 'absolute');\n      } else {\n        svg.attr('x', 0)\n           .attr('y', 0)\n           .style('width', '100%')\n           .style('height', '100%')\n           .style('position', 'absolute')\n           .style('left', 0).style('top', 0).style('bottom', 0).style('right', 0);\n      }\n\n      svg.style('filter', settings.DarkMode ? 'invert(100%)' : null);\n\n      svg.attr('viewBox', `0 0 ${rect.width} ${rect.height}`)\n         .attr('preserveAspectRatio', 'none')  // we do not preserve relative ratio\n         .property('height_factor', factor)\n         .property('draw_x', 0)\n         .property('draw_y', 0)\n         .property('draw_width', rect.width)\n         .property('draw_height', rect.height);\n\n      this._pad_x = 0;\n      this._pad_y = 0;\n      this._pad_width = rect.width;\n      this._pad_height = rect.height;\n\n      frect.attr('d', `M0,0H${rect.width}V${rect.height}H0Z`)\n           .call(this.fillatt.func);\n\n      this.setFastDrawing(rect.width, rect.height);\n\n      if (this.alignButtons && btns)\n         this.alignButtons(btns, rect.width, rect.height);\n\n      return true;\n   }\n\n   /** @summary Draw item name on canvas, dummy for RPad\n     * @private */\n   drawItemNameOnCanvas() {\n   }\n\n   /** @summary Enlarge pad draw element when possible */\n   enlargePad(evnt, is_dblclick, is_escape) {\n      evnt?.preventDefault();\n      evnt?.stopPropagation();\n\n      // ignore double click on canvas itself for enlarge\n      if (is_dblclick && this._websocket && (this.enlargeMain('state') === 'off'))\n         return;\n\n      const svg_can = this.getCanvSvg(),\n            pad_enlarged = svg_can.property('pad_enlarged');\n\n      if (this.iscan || !this.has_canvas || (!pad_enlarged && !this.hasObjectsToDraw() && !this.painters)) {\n         if (this._fixed_size) return; // canvas cannot be enlarged in such mode\n         if (!this.enlargeMain(is_escape ? false : 'toggle')) return;\n         if (this.enlargeMain('state') === 'off')\n            svg_can.property('pad_enlarged', null);\n         else\n            selectActivePad({ pp: this, active: true });\n      } else if (!pad_enlarged && !is_escape) {\n         this.enlargeMain(true, true);\n         svg_can.property('pad_enlarged', this.pad);\n         selectActivePad({ pp: this, active: true });\n      } else if (pad_enlarged === this.pad) {\n         this.enlargeMain(false);\n         svg_can.property('pad_enlarged', null);\n      } else if (!is_escape && is_dblclick)\n         console.error('missmatch with pad double click events');\n\n      return this.checkResize(true);\n   }\n\n   /** @summary Create SVG element for the pad\n     * @return true when pad is displayed and all its items should be redrawn */\n   createPadSvg(only_resize) {\n      if (!this.has_canvas) {\n         this.createCanvasSvg(only_resize ? 2 : 0);\n         return true;\n      }\n\n      const svg_parent = this.getPadSvg(this.pad_name), // this.pad_name MUST be here to select parent pad\n            svg_can = this.getCanvSvg(),\n            width = svg_parent.property('draw_width'),\n            height = svg_parent.property('draw_height'),\n            pad_enlarged = svg_can.property('pad_enlarged');\n      let pad_visible = true,\n          w = width, h = height, x = 0, y = 0,\n          svg_pad = null, svg_rect = null, btns = null;\n\n      if (this.pad?.fPos && this.pad?.fSize) {\n         x = Math.round(width * this.pad.fPos.fHoriz.fArr[0]);\n         y = Math.round(height * this.pad.fPos.fVert.fArr[0]);\n         w = Math.round(width * this.pad.fSize.fHoriz.fArr[0]);\n         h = Math.round(height * this.pad.fSize.fVert.fArr[0]);\n      }\n\n      if (pad_enlarged) {\n         pad_visible = false;\n         if (pad_enlarged === this.pad)\n            pad_visible = true;\n         else\n            this.forEachPainterInPad(pp => { if (pp.getObject() === pad_enlarged) pad_visible = true; }, 'pads');\n\n         if (pad_visible) { w = width; h = height; x = y = 0; }\n      }\n\n      if (only_resize) {\n         svg_pad = this.svg_this_pad();\n         svg_rect = svg_pad.selectChild('.root_pad_border');\n         if (!this.isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n         this.addPadInteractive(true);\n      } else {\n         svg_pad = svg_parent.selectChild('.primitives_layer')\n             .append('svg:svg') // here was g before, svg used to blend all drawin outside\n             .classed('__root_pad_' + this.this_pad_name, true)\n             .attr('pad', this.this_pad_name) // set extra attribute  to mark pad name\n             .property('pad_painter', this); // this is custom property\n\n         if (!this.isBatchMode())\n            svg_pad.append('svg:title').text('ROOT subpad');\n\n         svg_rect = svg_pad.append('svg:path').attr('class', 'root_pad_border');\n\n         svg_pad.append('svg:g').attr('class', 'primitives_layer');\n         if (!this.isBatchMode()) {\n            btns = svg_pad.append('svg:g')\n                          .attr('class', 'btns_layer')\n                          .property('leftside', settings.ToolBarSide !== 'left')\n                          .property('vertical', settings.ToolBarVert);\n         }\n\n         if (settings.ContextMenu)\n            svg_rect.on('contextmenu', evnt => this.padContextMenu(evnt));\n\n         if (!this.isBatchMode()) {\n            svg_rect.style('pointer-events', 'visibleFill') // get events also for not visible rect\n                    .on('dblclick', evnt => this.enlargePad(evnt, true))\n                    .on('click', () => this.selectObjectPainter(this, null))\n                    .on('mouseenter', () => this.showObjectStatus());\n         }\n      }\n\n      this.createAttFill({ attr: this.pad });\n\n      this.createAttLine({ attr: this.pad, color0: this.pad.fBorderMode === 0 ? 'none' : '' });\n\n      svg_pad.style('display', pad_visible ? null : 'none')\n             .attr('viewBox', `0 0 ${w} ${h}`) // due to svg\n             .attr('preserveAspectRatio', 'none')   // due to svg, we do not preserve relative ratio\n             .attr('x', x)    // due to svg\n             .attr('y', y)   // due to svg\n             .attr('width', w)    // due to svg\n             .attr('height', h)   // due to svg\n             .property('draw_x', x) // this is to make similar with canvas\n             .property('draw_y', y)\n             .property('draw_width', w)\n             .property('draw_height', h);\n\n      this._pad_x = x;\n      this._pad_y = y;\n      this._pad_width = w;\n      this._pad_height = h;\n\n      svg_rect.attr('d', `M0,0H${w}V${h}H0Z`)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      this.setFastDrawing(w, h);\n\n      // special case of 3D canvas overlay\n      if (svg_pad.property('can3d') === constants.Embed3D.Overlay) {\n         this.selectDom().select('.draw3d_' + this.this_pad_name)\n             .style('display', pad_visible ? '' : 'none');\n      }\n\n      if (this.alignButtons && btns) this.alignButtons(btns, w, h);\n\n      return pad_visible;\n   }\n\n   /** @summary Add pad interactive features like dragging and resize\n    * @private */\n   addPadInteractive(cleanup = false) {\n      if (isFunc(this.$userInteractive)) {\n         this.$userInteractive();\n         delete this.$userInteractive;\n      }\n      // if (this.isBatchMode())\n      //   return;\n   }\n\n   /** @summary returns true if any objects beside sub-pads exists in the pad */\n   hasObjectsToDraw() {\n      return this.pad?.fPrimitives?.find(obj => obj._typename !== `${nsREX}RPadDisplayItem`);\n   }\n\n   /** @summary sync drawing/redrawing/resize of the pad\n     * @param {string} kind - kind of draw operation, if true - always queued\n     * @return {Promise} when pad is ready for draw operation or false if operation already queued\n     * @private */\n   syncDraw(kind) {\n      const entry = { kind: kind || 'redraw' };\n      if (this._doing_draw === undefined) {\n         this._doing_draw = [entry];\n         return Promise.resolve(true);\n      }\n      // if queued operation registered, ignore next calls, indx === 0 is running operation\n      if ((entry.kind !== true) && (this._doing_draw.findIndex((e, i) => (i > 0) && (e.kind === entry.kind)) > 0))\n         return false;\n      this._doing_draw.push(entry);\n      return new Promise(resolveFunc => {\n         entry.func = resolveFunc;\n      });\n   }\n\n   /** @summary confirms that drawing is completed, may trigger next drawing immediately\n     * @private */\n   confirmDraw() {\n      if (this._doing_draw === undefined)\n         return console.warn('failure, should not happen');\n      this._doing_draw.shift();\n      if (this._doing_draw.length === 0)\n         delete this._doing_draw;\n      else {\n         const entry = this._doing_draw[0];\n         if (entry.func) { entry.func(); delete entry.func; }\n      }\n   }\n\n   /** @summary Draw single primitive */\n   async drawObject(/* dom, obj, opt */) {\n      console.log('Not possible to draw object without loading of draw.mjs');\n      return null;\n   }\n\n   /** @summary Draw pad primitives\n     * @private */\n   async drawPrimitives(indx) {\n      if (indx === undefined) {\n         if (this.iscan)\n            this._start_tm = new Date().getTime();\n\n         // set number of primitves\n         this._num_primitives = this.pad?.fPrimitives?.length ?? 0;\n\n         return this.syncDraw(true).then(() => this.drawPrimitives(0));\n      }\n\n      if (!this.pad || (indx >= this._num_primitives)) {\n         this.confirmDraw();\n\n         if (this._start_tm) {\n            const spenttm = new Date().getTime() - this._start_tm;\n            if (spenttm > 3000) console.log(`Canvas drawing took ${(spenttm*1e-3).toFixed(2)}s`);\n            delete this._start_tm;\n         }\n\n         return;\n      }\n\n      // handle used to invoke callback only when necessary\n      return this.drawObject(this.getDom(), this.pad.fPrimitives[indx], '').then(op => {\n         // mark painter as belonging to primitives\n         if (isObject(op))\n            op._primitive = true;\n\n         return this.drawPrimitives(indx+1);\n      });\n   }\n\n   /** @summary Process tooltip event in the pad\n     * @private */\n   processPadTooltipEvent(pnt) {\n      const painters = [], hints = [];\n\n      // first count - how many processors are there\n      this.painters?.forEach(obj => {\n         if (isFunc(obj.processTooltipEvent)) painters.push(obj);\n      });\n\n      if (pnt) pnt.nproc = painters.length;\n\n      painters.forEach(obj => {\n         const hint = obj.processTooltipEvent(pnt) || { user_info: null };\n         hints.push(hint);\n         if (pnt?.painters) hint.painter = obj;\n      });\n\n      return hints;\n   }\n\n   /** @summary Changes canvas dark mode\n     * @private */\n   changeDarkMode(mode) {\n      this.getCanvSvg().style('filter', (mode ?? settings.DarkMode) ? 'invert(100%)' : null);\n   }\n\n   /** @summary Fill pad context menu\n     * @private */\n   fillContextMenu(menu) {\n      if (this.iscan)\n         menu.add('header: RCanvas');\n      else\n         menu.add('header: RPad');\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (!this._websocket) {\n         menu.addAttributesMenu(this);\n         if (this.iscan) {\n            menu.addSettingsMenu(false, false, arg => {\n               if (arg === 'dark') this.changeDarkMode();\n            });\n         }\n      }\n\n      menu.add('separator');\n\n      if (isFunc(this.hasMenuBar) && isFunc(this.actiavteMenuBar))\n         menu.addchk(this.hasMenuBar(), 'Menu bar', flag => this.actiavteMenuBar(flag));\n\n      if (isFunc(this.hasEventStatus) && isFunc(this.activateStatusBar) && isFunc(this.canStatusBar)) {\n         if (this.canStatusBar())\n            menu.addchk(this.hasEventStatus(), 'Event status', () => this.activateStatusBar('toggle'));\n      }\n\n      if (this.enlargeMain() || (this.has_canvas && this.hasObjectsToDraw()))\n         menu.addchk((this.enlargeMain('state') === 'on'), 'Enlarge ' + (this.iscan ? 'canvas' : 'pad'), () => this.enlargePad());\n\n      const fname = this.this_pad_name || (this.iscan ? 'canvas' : 'pad');\n      menu.add('sub:Save as');\n      ['svg', 'png', 'jpeg', 'pdf', 'webp'].forEach(fmt => menu.add(`${fname}.${fmt}`, () => this.saveAs(fmt, this.iscan, `${fname}.${fmt}`)));\n      menu.add('endsub:');\n\n      return true;\n   }\n\n   /** @summary Show pad context menu\n     * @private */\n   padContextMenu(evnt) {\n      if (evnt.stopPropagation) {\n         // this is normal event processing and not emulated jsroot event\n\n         evnt.stopPropagation(); // disable main context menu\n         evnt.preventDefault();  // disable browser context menu\n\n         this.getFramePainter()?.setLastEventPos();\n      }\n\n      createMenu(evnt, this).then(menu => {\n         this.fillContextMenu(menu);\n         return this.fillObjectExecMenu(menu);\n      }).then(menu => menu.show());\n   }\n\n   /** @summary Redraw pad means redraw ourself\n     * @return {Promise} when redrawing ready */\n   async redrawPad(reason) {\n      const sync_promise = this.syncDraw(reason);\n      if (sync_promise === false) {\n         console.log('Prevent RPad redrawing');\n         return false;\n      }\n\n      let showsubitems = true;\n      const redrawNext = indx => {\n         while (indx < this.painters.length) {\n            const sub = this.painters[indx++];\n            let res = 0;\n            if (showsubitems || sub.this_pad_name)\n               res = sub.redraw(reason);\n\n            if (isPromise(res))\n               return res.then(() => redrawNext(indx));\n         }\n         return true;\n      };\n\n      return sync_promise.then(() => {\n         if (this.iscan)\n            this.createCanvasSvg(2);\n          else\n            showsubitems = this.createPadSvg(true);\n\n         return redrawNext(0);\n      }).then(() => {\n         this.addPadInteractive();\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         this.confirmDraw();\n         return true;\n      });\n   }\n\n   /** @summary redraw pad */\n   redraw(reason) {\n      return this.redrawPad(reason);\n   }\n\n\n   /** @summary Checks if pad should be redrawn by resize\n     * @private */\n   needRedrawByResize() {\n      const elem = this.svg_this_pad();\n      if (!elem.empty() && elem.property('can3d') === constants.Embed3D.Overlay) return true;\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         if (isFunc(this.painters[i].needRedrawByResize))\n            if (this.painters[i].needRedrawByResize()) return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Check resize of canvas */\n   checkCanvasResize(size, force) {\n      if (this._ignore_resize)\n         return false;\n\n      if (!this.iscan && this.has_canvas) return false;\n\n      const sync_promise = this.syncDraw('canvas_resize');\n      if (sync_promise === false) return false;\n\n      if ((size === true) || (size === false)) { force = size; size = null; }\n\n      if (isObject(size) && size.force) force = true;\n\n      if (!force) force = this.needRedrawByResize();\n\n      let changed = false;\n      const redrawNext = indx => {\n         if (!changed || (indx >= this.painters.length)) {\n            this.confirmDraw();\n            return changed;\n         }\n\n         return getPromise(this.painters[indx].redraw(force ? 'redraw' : 'resize')).then(() => redrawNext(indx+1));\n      };\n\n\n      return sync_promise.then(() => {\n         changed = this.createCanvasSvg(force ? 2 : 1, size);\n\n         if (changed && this.iscan && this.pad && this.online_canvas && !this.embed_canvas && !this.isBatchMode()) {\n            if (this._resize_tmout)\n               clearTimeout(this._resize_tmout);\n            this._resize_tmout = setTimeout(() => {\n               delete this._resize_tmout;\n               if (!this.pad?.fWinSize) return;\n               const cw = this.getPadWidth(), ch = this.getPadHeight();\n               if ((cw > 0) && (ch > 0) && ((this.pad.fWinSize[0] !== cw) || (this.pad.fWinSize[1] !== ch))) {\n                  this.pad.fWinSize[0] = cw;\n                  this.pad.fWinSize[1] = ch;\n                  this.sendWebsocket(`RESIZED:[${cw},${ch}]`);\n               }\n            }, 1000); // long enough delay to prevent multiple occurence\n         }\n\n         // if canvas changed, redraw all its subitems.\n         // If redrawing was forced for canvas, same applied for sub-elements\n         return redrawNext(0);\n      });\n   }\n\n   /** @summary update RPad object\n     * @private */\n   updateObject(obj) {\n      if (!obj) return false;\n\n      this.pad.fStyle = obj.fStyle;\n      this.pad.fAttr = obj.fAttr;\n\n      if (this.iscan) {\n         this.pad.fTitle = obj.fTitle;\n         this.pad.fWinSize = obj.fWinSize;\n      } else {\n         this.pad.fPos = obj.fPos;\n         this.pad.fSize = obj.fSize;\n      }\n\n      return true;\n   }\n\n\n   /** @summary Add object painter to list of primitives\n     * @private */\n   addObjectPainter(objpainter, lst, indx) {\n      if (objpainter && lst && lst[indx] && (objpainter.snapid === undefined)) {\n         // keep snap id in painter, will be used for the\n         if (this.painters.indexOf(objpainter) < 0)\n            this.painters.push(objpainter);\n         objpainter.assignSnapId(lst[indx].fObjectID);\n         if (!objpainter.rstyle) objpainter.rstyle = lst[indx].fStyle || this.rstyle;\n      }\n   }\n\n   /** @summary Extract properties from TObjectDisplayItem */\n   extractTObjectProp(snap) {\n      if (snap.fColIndex && snap.fColValue) {\n         const colors = this.root_colors || getRootColors();\n         for (let k = 0; k < snap.fColIndex.length; ++k)\n            colors[snap.fColIndex[k]] = snap.fColValue[k];\n       }\n\n      // painter used only for evaluation of attributes\n      const pattr = new RObjectPainter(), obj = snap.fObject;\n      pattr.assignObject(snap);\n      pattr.csstype = snap.fCssType;\n      pattr.rstyle = snap.fStyle;\n\n      snap.fOption = pattr.v7EvalAttr('options', '');\n\n      const extract_color = (member_name, attr_name) => {\n         const col = pattr.v7EvalColor(attr_name, '');\n         if (col) obj[member_name] = addColor(col, this.root_colors);\n      };\n\n      // handle TAttLine\n      if ((obj.fLineColor !== undefined) && (obj.fLineWidth !== undefined) && (obj.fLineStyle !== undefined)) {\n         extract_color('fLineColor', 'line_color');\n         obj.fLineWidth = pattr.v7EvalAttr('line_width', obj.fLineWidth);\n         obj.fLineStyle = pattr.v7EvalAttr('line_style', obj.fLineStyle);\n      }\n\n      // handle TAttFill\n      if ((obj.fFillColor !== undefined) && (obj.fFillStyle !== undefined)) {\n         extract_color('fFillColor', 'fill_color');\n         obj.fFillStyle = pattr.v7EvalAttr('fill_style', obj.fFillStyle);\n      }\n\n      // handle TAttMarker\n      if ((obj.fMarkerColor !== undefined) && (obj.fMarkerStyle !== undefined) && (obj.fMarkerSize !== undefined)) {\n         extract_color('fMarkerColor', 'marker_color');\n         obj.fMarkerStyle = pattr.v7EvalAttr('marker_style', obj.fMarkerStyle);\n         obj.fMarkerSize = pattr.v7EvalAttr('marker_size', obj.fMarkerSize);\n      }\n\n      // handle TAttText\n      if ((obj.fTextColor !== undefined) && (obj.fTextAlign !== undefined) && (obj.fTextAngle !== undefined) && (obj.fTextSize !== undefined)) {\n         extract_color('fTextColor', 'text_color');\n         obj.fTextAlign = pattr.v7EvalAttr('text_align', obj.fTextAlign);\n         obj.fTextAngle = pattr.v7EvalAttr('text_angle', obj.fTextAngle);\n         obj.fTextSize = pattr.v7EvalAttr('text_size', obj.fTextSize);\n         // TODO: v7 font handling differs much from v6, ignore for the moment\n      }\n   }\n\n   /** @summary Function called when drawing next snapshot from the list\n     * @return {Promise} with pad painter when ready\n     * @private */\n   async drawNextSnap(lst, indx) {\n      if (indx === undefined) {\n         indx = -1;\n         // flag used to prevent immediate pad redraw during first draw\n         this._snaps_map = {}; // to control how much snaps are drawn\n         this._num_primitives = lst ? lst.length : 0;\n         this._auto_color_cnt = 0;\n      }\n\n      delete this.next_rstyle;\n\n      ++indx; // change to the next snap\n\n      if (!lst || indx >= lst.length) {\n         delete this._snaps_map;\n         delete this._auto_color_cnt;\n         return this;\n      }\n\n      const snap = lst[indx],\n            snapid = snap.fObjectID;\n      let cnt = this._snaps_map[snapid],\n          objpainter = null;\n\n      if (cnt) cnt++; else cnt=1;\n      this._snaps_map[snapid] = cnt; // check how many objects with same snapid drawn, use them again\n\n      // empty object, no need to do something, take next\n      if (snap.fDummy) return this.drawNextSnap(lst, indx);\n\n      // first appropriate painter for the object\n      // if same object drawn twice, two painters will exists\n      for (let k = 0; k < this.painters.length; ++k) {\n         if (this.painters[k].snapid === snapid)\n            if (--cnt === 0) { objpainter = this.painters[k]; break; }\n      }\n\n      if (objpainter) {\n         if (snap._typename === `${nsREX}RPadDisplayItem`) {\n            // subpad\n            return objpainter.redrawPadSnap(snap).then(ppainter => {\n               this.addObjectPainter(ppainter, lst, indx);\n               return this.drawNextSnap(lst, indx);\n            });\n         }\n\n         if (snap._typename === `${nsREX}TObjectDisplayItem`)\n            this.extractTObjectProp(snap);\n\n         let promise;\n\n         if (objpainter.updateObject(snap.fDrawable || snap.fObject || snap, snap.fOption || '', true))\n            promise = objpainter.redraw();\n\n         return getPromise(promise).then(() => this.drawNextSnap(lst, indx)); // call next\n      }\n\n      if (snap._typename === `${nsREX}RPadDisplayItem`) { // subpad\n         const subpad = snap, // not subpad, but just attributes\n\n          padpainter = new RPadPainter(this.getDom(), subpad, false);\n         padpainter.decodeOptions('');\n         padpainter.addToPadPrimitives(this.this_pad_name); // only set parent pad name\n         padpainter.assignSnapId(snap.fObjectID);\n         padpainter.rstyle = snap.fStyle;\n\n         padpainter.createPadSvg();\n\n         if (snap.fPrimitives && snap.fPrimitives.length > 0)\n            padpainter.addPadButtons();\n\n         // we select current pad, where all drawing is performed\n         const prev_name = padpainter.selectCurrentPad(padpainter.this_pad_name);\n\n         return padpainter.drawNextSnap(snap.fPrimitives).then(() => {\n            padpainter.addPadInteractive();\n            padpainter.selectCurrentPad(prev_name);\n            return this.drawNextSnap(lst, indx);\n         });\n      }\n\n      // will be used in addToPadPrimitives to assign style to sub-painters\n      this.next_rstyle = lst[indx].fStyle || this.rstyle;\n\n      if (snap._typename === `${nsREX}TObjectDisplayItem`) {\n         // identifier used in RObjectDrawable\n         const webSnapIds = { kNone: 0, kObject: 1, kColors: 4, kStyle: 5, kPalette: 6 };\n\n         if (snap.fKind === webSnapIds.kStyle) {\n            Object.assign(gStyle, snap.fObject);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind === webSnapIds.kColors) {\n            const ListOfColors = [], arr = snap.fObject.arr;\n            for (let n = 0; n < arr.length; ++n) {\n               const name = arr[n].fString, p = name.indexOf('=');\n               if (p > 0)\n                  ListOfColors[parseInt(name.slice(0, p))] = name.slice(p+1);\n            }\n\n            this.root_colors = ListOfColors;\n            // set global list of colors\n            // adoptRootColors(ListOfColors);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind === webSnapIds.kPalette) {\n            const arr = snap.fObject.arr, palette = [];\n            for (let n = 0; n < arr.length; ++n)\n               palette[n] = arr[n].fString;\n            this.custom_palette = new ColorPalette(palette);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (!this.getFramePainter()) {\n            return this.drawObject(this.getDom(), { _typename: clTFrame, $dummy: true }, '')\n                       .then(() => this.drawNextSnap(lst, indx-1));\n         } // call same object again\n\n         this.extractTObjectProp(snap);\n      }\n\n      // TODO - fDrawable is v7, fObject from v6, maybe use same data member?\n      return this.drawObject(this.getDom(), snap.fDrawable || snap.fObject || snap, snap.fOption || '').then(objpainter => {\n         this.addObjectPainter(objpainter, lst, indx);\n         return this.drawNextSnap(lst, indx);\n      });\n   }\n\n   /** @summary Search painter with specified snapid, also sub-pads are checked\n     * @private */\n   findSnap(snapid, onlyid) {\n      function check(checkid) {\n         if (!checkid || !isStr(checkid)) return false;\n         if (checkid === snapid) return true;\n         return onlyid && (checkid.length > snapid.length) &&\n                (checkid.indexOf(snapid) === (checkid.length - snapid.length));\n      }\n\n      if (check(this.snapid)) return this;\n\n      if (!this.painters) return null;\n\n      for (let k=0; k<this.painters.length; ++k) {\n         let sub = this.painters[k];\n\n         if (!onlyid && isFunc(sub.findSnap))\n            sub = sub.findSnap(snapid);\n         else if (!check(sub.snapid))\n            sub = null;\n\n         if (sub) return sub;\n      }\n\n      return null;\n   }\n\n   /** @summary Redraw pad snap\n     * @desc Online version of drawing pad primitives\n     * @return {Promise} with pad painter */\n   async redrawPadSnap(snap) {\n      // for the pad/canvas display item contains list of primitives plus pad attributes\n\n      if (!snap || !snap.fPrimitives)\n         return this;\n\n      // for the moment only window size attributes are provided\n      // let padattr = { fCw: snap.fWinSize[0], fCh: snap.fWinSize[1], fTitle: snap.fTitle };\n\n      // if canvas size not specified in batch mode, temporary use 900x700 size\n      // if (this.isBatchMode() && this.iscan && (!padattr.fCw || !padattr.fCh)) { padattr.fCw = 900; padattr.fCh = 700; }\n\n      if (this.iscan && this._websocket && snap.fTitle && !this.embed_canvas && (typeof document !== 'undefined'))\n         document.title = snap.fTitle;\n\n      if (this.snapid === undefined) {\n         // first time getting snap, create all gui elements first\n\n         this.assignSnapId(snap.fObjectID);\n\n         this.draw_object = snap;\n         this.pad = snap;\n\n         if (this.isBatchMode() && this.iscan)\n             this._fixed_size = true;\n\n         const mainid = this.selectDom().attr('id');\n\n         if (!this.isBatchMode() && !this.use_openui && !this.brlayout && mainid && isStr(mainid)) {\n            this.brlayout = new BrowserLayout(mainid, null, this);\n            this.brlayout.create(mainid, true);\n            this.setDom(this.brlayout.drawing_divid()); // need to create canvas\n            registerForResize(this.brlayout);\n         }\n\n         this.createCanvasSvg(0);\n         this.addPadButtons(true);\n\n         return this.drawNextSnap(snap.fPrimitives);\n      }\n\n      // update only pad/canvas attributes\n      this.updateObject(snap);\n\n      // apply all changes in the object (pad or canvas)\n      if (this.iscan)\n         this.createCanvasSvg(2);\n       else\n         this.createPadSvg(true);\n\n\n      let isanyfound = false, isanyremove = false;\n\n      // find and remove painters which no longer exists in the list\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (sub.snapid === undefined) continue; // look only for painters with snapid\n\n         snap.fPrimitives.forEach(prim => {\n            if (sub && (prim.fObjectID === sub.snapid)) {\n               sub = null; isanyfound = true;\n            }\n         });\n\n         if (sub) {\n            // remove painter which does not found in the list of snaps\n            this.painters.splice(k--, 1);\n            sub.cleanup(); // cleanup such painter\n            isanyremove = true;\n            if (this.main_painter_ref === sub)\n               delete this.main_painter_ref;\n         }\n      }\n\n      if (isanyremove)\n         delete this.pads_cache;\n\n      if (!isanyfound) {\n         let fp = this.getFramePainter();\n         // cannot preserve ROOT6 frame - it must be recreated\n         if (fp?.is_root6()) fp = null;\n         for (let k = 0; k < this.painters.length; ++k) {\n            if (fp !== this.painters[k])\n               this.painters[k].cleanup();\n         }\n         this.painters = [];\n         delete this.main_painter_ref;\n         if (fp) {\n            this.painters.push(fp);\n            fp.cleanFrameDrawings();\n            fp.redraw(); // need to create all layers again\n         }\n         if (isFunc(this.removePadButtons))\n            this.removePadButtons();\n         this.addPadButtons(true);\n      }\n\n      const prev_name = this.selectCurrentPad(this.this_pad_name);\n\n      return this.drawNextSnap(snap.fPrimitives).then(() => {\n         this.addPadInteractive();\n         this.selectCurrentPad(prev_name);\n\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         return this;\n      });\n   }\n\n   /** @summary Create image for the pad\n     * @desc Used with web-based canvas to create images for server side\n     * @return {Promise} with image data, coded with btoa() function\n     * @private */\n   async createImage(format) {\n      if ((format === 'png') || (format === 'jpeg') || (format === 'svg') || (format === 'pdf')) {\n         return this.produceImage(true, format).then(res => {\n            if (!res || (format === 'svg')) return res;\n            const separ = res.indexOf('base64,');\n            return (separ > 0) ? res.slice(separ+7) : '';\n         });\n      }\n\n      return '';\n   }\n\n   /** @summary Show context menu for specified item\n     * @private */\n   itemContextMenu(name) {\n       const rrr = this.svg_this_pad().node().getBoundingClientRect(),\n           evnt = { clientX: rrr.left+10, clientY: rrr.top + 10 };\n\n       // use timeout to avoid conflict with mouse click and automatic menu close\n       if (name === 'pad')\n          return postponePromise(() => this.padContextMenu(evnt), 50);\n\n       let selp = null, selkind;\n\n       switch (name) {\n          case 'xaxis':\n          case 'yaxis':\n          case 'zaxis':\n             selp = this.getMainPainter();\n             selkind = name[0];\n             break;\n          case 'frame':\n             selp = this.getFramePainter();\n             break;\n          default: {\n             const indx = parseInt(name);\n             if (Number.isInteger(indx)) selp = this.painters[indx];\n          }\n       }\n\n       if (!isFunc(selp?.fillContextMenu)) return;\n\n       return createMenu(evnt, selp).then(menu => {\n          const offline_menu = selp.fillContextMenu(menu, selkind);\n          if (offline_menu || selp.snapid)\n             selp.fillObjectExecMenu(menu, selkind).then(() => postponePromise(() => menu.show(), 50));\n       });\n   }\n\n   /** @summary Save pad in specified format\n     * @desc Used from context menu */\n   saveAs(kind, full_canvas, filename) {\n      if (!filename)\n         filename = (this.this_pad_name || (this.iscan ? 'canvas' : 'pad')) + '.' + kind;\n\n      this.produceImage(full_canvas, kind).then(imgdata => {\n         if (!imgdata)\n            return console.error(`Fail to produce image ${filename}`);\n\n         saveFile(filename, (kind !== 'svg') ? imgdata : 'data:image/svg+xml;charset=utf-8,'+encodeURIComponent(imgdata));\n      });\n   }\n\n   /** @summary Search active pad\n     * @return {Object} pad painter for active pad */\n   findActivePad() {\n      return null;\n   }\n\n   /** @summary Prodce image for the pad\n     * @return {Promise} with created image */\n   async produceImage(full_canvas, file_format) {\n      const use_frame = (full_canvas === 'frame'),\n            elem = use_frame ? this.getFrameSvg(this.this_pad_name) : (full_canvas ? this.getCanvSvg() : this.svg_this_pad()),\n            painter = (full_canvas && !use_frame) ? this.getCanvPainter() : this,\n            items = []; // keep list of replaced elements, which should be moved back at the end\n\n      if (elem.empty())\n         return '';\n\n      if (use_frame || !full_canvas) {\n         const defs = this.getCanvSvg().selectChild('.canvas_defs');\n         if (!defs.empty()) {\n            items.push({ prnt: this.getCanvSvg(), defs });\n            elem.node().insertBefore(defs.node(), elem.node().firstChild);\n         }\n      }\n\n      if (!use_frame) {\n         // do not make transformations for the frame\n         painter.forEachPainterInPad(pp => {\n            const item = { prnt: pp.svg_this_pad() };\n            items.push(item);\n\n            // remove buttons from each subpad\n            const btns = pp.getLayerSvg('btns_layer', this.this_pad_name);\n            item.btns_node = btns.node();\n            if (item.btns_node) {\n               item.btns_prnt = item.btns_node.parentNode;\n               item.btns_next = item.btns_node.nextSibling;\n               btns.remove();\n            }\n\n            const main = pp.getFramePainter();\n            if (!isFunc(main?.render3D) || !isFunc(main?.access3dKind)) return;\n\n            const can3d = main.access3dKind();\n\n            if ((can3d !== constants.Embed3D.Overlay) && (can3d !== constants.Embed3D.Embed)) return;\n\n            const sz2 = main.getSizeFor3d(constants.Embed3D.Embed), // get size and position of DOM element as it will be embed\n                  canvas = main.renderer.domElement;\n\n            main.render3D(0); // WebGL clears buffers, therefore we should render scene and convert immediately\n\n            const dataUrl = canvas.toDataURL('image/png');\n\n            // remove 3D drawings\n            if (can3d === constants.Embed3D.Embed) {\n               item.foreign = item.prnt.select('.' + sz2.clname);\n               item.foreign.remove();\n            }\n\n            const svg_frame = main.getFrameSvg();\n            item.frame_node = svg_frame.node();\n            if (item.frame_node) {\n               item.frame_next = item.frame_node.nextSibling;\n               svg_frame.remove();\n            }\n\n            // add svg image\n            item.img = item.prnt.insert('image', '.primitives_layer')     // create image object\n                           .attr('x', sz2.x)\n                           .attr('y', sz2.y)\n                           .attr('width', canvas.width)\n                           .attr('height', canvas.height)\n                           .attr('href', dataUrl);\n         }, 'pads');\n      }\n\n      let width = elem.property('draw_width'), height = elem.property('draw_height');\n      if (use_frame) {\n         const fp = this.getFramePainter();\n         width = fp.getFrameWidth();\n         height = fp.getFrameHeight();\n      }\n\n      const arg = (file_format === 'pdf')\n         ? { node: elem.node(), width, height, reset_tranform: use_frame }\n         : compressSVG(`<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">${elem.node().innerHTML}</svg>`);\n\n      return svgToImage(arg, file_format).then(res => {\n         for (let k = 0; k < items.length; ++k) {\n            const item = items[k];\n\n            item.img?.remove(); // delete embed image\n\n            const prim = item.prnt.selectChild('.primitives_layer');\n\n            if (item.foreign) // reinsert foreign object\n               item.prnt.node().insertBefore(item.foreign.node(), prim.node());\n\n            if (item.frame_node) // reinsert frame as first in list of primitives\n               prim.node().insertBefore(item.frame_node, item.frame_next);\n\n            if (item.btns_node) // reinsert buttons\n               item.btns_prnt.insertBefore(item.btns_node, item.btns_next);\n\n            if (item.defs) // reinsert defs\n               item.prnt.node().insertBefore(item.defs.node(), item.prnt.node().firstChild);\n         }\n         return res;\n      });\n   }\n\n   /** @summary Process pad button click */\n   clickPadButton(funcname, evnt) {\n      if (funcname === 'CanvasSnapShot')\n         return this.saveAs('png', true);\n\n      if (funcname === 'enlargePad')\n         return this.enlargePad();\n\n      if (funcname === 'PadSnapShot')\n         return this.saveAs('png', false);\n\n      if (funcname === 'PadContextMenus') {\n         evnt?.preventDefault();\n         evnt?.stopPropagation();\n         if (closeMenu()) return;\n\n         return createMenu(evnt, this).then(menu => {\n            menu.add('header:Menus');\n\n            if (this.iscan)\n               menu.add('Canvas', 'pad', this.itemContextMenu);\n            else\n               menu.add('Pad', 'pad', this.itemContextMenu);\n\n            if (this.getFramePainter())\n               menu.add('Frame', 'frame', this.itemContextMenu);\n\n            const main = this.getMainPainter(); // here hist painter methods\n\n            if (main) {\n               menu.add('X axis', 'xaxis', this.itemContextMenu);\n               menu.add('Y axis', 'yaxis', this.itemContextMenu);\n               if (isFunc(main.getDimension) && (main.getDimension() > 1))\n                  menu.add('Z axis', 'zaxis', this.itemContextMenu);\n            }\n\n            if (this.painters?.length) {\n               menu.add('separator');\n               const shown = [];\n               this.painters.forEach((pp, indx) => {\n                  const obj = pp?.getObject();\n                  if (!obj || (shown.indexOf(obj) >= 0) || pp.isSecondary()) return;\n                  let name = isFunc(pp.getClassName) ? pp.getClassName() : (obj._typename || '');\n                  if (name) name += '::';\n                  name += isFunc(pp.getObjectName) ? pp.getObjectName() : (obj.fName || `item${indx}`);\n                  menu.add(name, indx, this.itemContextMenu);\n                  shown.push(obj);\n               });\n            }\n\n            menu.show();\n         });\n      }\n\n      // click automatically goes to all sub-pads\n      // if any painter indicates that processing completed, it returns true\n      let done = false;\n      const prs = [];\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         const pp = this.painters[i];\n\n         if (isFunc(pp.clickPadButton))\n            prs.push(pp.clickPadButton(funcname, evnt));\n\n         if (!done && isFunc(pp.clickButton)) {\n            done = pp.clickButton(funcname);\n            if (isPromise(done)) prs.push(done);\n         }\n      }\n\n      return Promise.all(prs);\n   }\n\n   /** @summary Add button to the pad\n     * @private */\n   addPadButton(btn, tooltip, funcname, keyname) {\n      if (!settings.ToolBar || this.isBatchMode()) return;\n\n      if (!this._buttons) this._buttons = [];\n      // check if there are duplications\n\n      for (let k = 0; k < this._buttons.length; ++k)\n         if (this._buttons[k].funcname === funcname) return;\n\n      this._buttons.push({ btn, tooltip, funcname, keyname });\n\n      const iscan = this.iscan || !this.has_canvas;\n      if (!iscan && (funcname.indexOf('Pad') !== 0) && (funcname !== 'enlargePad')) {\n         const cp = this.getCanvPainter();\n         if (cp && (cp !== this)) cp.addPadButton(btn, tooltip, funcname);\n      }\n   }\n\n   /** @summary Add buttons for pad or canvas\n     * @private */\n   addPadButtons(is_online) {\n      this.addPadButton('camera', 'Create PNG', this.iscan ? 'CanvasSnapShot' : 'PadSnapShot', 'Ctrl PrintScreen');\n\n      if (settings.ContextMenu)\n         this.addPadButton('question', 'Access context menus', 'PadContextMenus');\n\n      const add_enlarge = !this.iscan && this.has_canvas && this.hasObjectsToDraw();\n\n      if (add_enlarge || this.enlargeMain('verify'))\n         this.addPadButton('circle', 'Enlarge canvas', 'enlargePad');\n\n      if (is_online && this.brlayout) {\n         this.addPadButton('diamand', 'Toggle Ged', 'ToggleGed');\n         this.addPadButton('three_circles', 'Toggle Status', 'ToggleStatus');\n      }\n   }\n\n   /** @summary Show pad buttons\n     * @private */\n   showPadButtons() {\n      if (!this._buttons) return;\n\n      PadButtonsHandler.assign(this);\n      this.showPadButtons();\n   }\n\n   /** @summary Calculates RPadLength value */\n   getPadLength(vertical, len, frame_painter) {\n      let rect, res;\n      const sign = vertical ? -1 : 1,\n            getV = (indx, dflt) => (indx < len.fArr.length) ? len.fArr[indx] : dflt,\n            getRect = () => {\n               if (!rect)\n                  rect = frame_painter ? frame_painter.getFrameRect() : this.getPadRect();\n               return rect;\n            };\n\n      if (frame_painter) {\n         const user = getV(2), func = vertical ? 'gry' : 'grx';\n         if ((user !== undefined) && frame_painter[func])\n            res = frame_painter[func](user);\n      }\n\n      if (res === undefined)\n         res = vertical ? getRect().height : 0;\n\n      const norm = getV(0, 0), pixel = getV(1, 0);\n\n      res += sign*pixel;\n\n      if (norm)\n         res += sign * (vertical ? getRect().height : getRect().width) * norm;\n\n      return Math.round(res);\n   }\n\n\n   /** @summary Calculates pad position for RPadPos values\n     * @param {object} pos - instance of RPadPos\n     * @param {object} frame_painter - if drawing will be performed inside frame, frame painter */\n   getCoordinate(pos, frame_painter) {\n      return {\n         x: this.getPadLength(false, pos.fHoriz, frame_painter),\n         y: this.getPadLength(true, pos.fVert, frame_painter)\n      };\n   }\n\n   /** @summary Decode pad draw options */\n   decodeOptions(opt) {\n      const pad = this.getObject();\n      if (!pad) return;\n\n      const d = new DrawOptions(opt);\n\n      if (!this.options) this.options = {};\n\n      Object.assign(this.options, { GlobalColors: true, LocalColors: false, IgnorePalette: false, RotateFrame: false, FixFrame: false });\n\n      if (d.check('NOCOLORS') || d.check('NOCOL')) this.options.GlobalColors = this.options.LocalColors = false;\n      if (d.check('LCOLORS') || d.check('LCOL')) { this.options.GlobalColors = false; this.options.LocalColors = true; }\n      if (d.check('NOPALETTE') || d.check('NOPAL')) this.options.IgnorePalette = true;\n      if (d.check('ROTATE')) this.options.RotateFrame = true;\n      if (d.check('FIXFRAME')) this.options.FixFrame = true;\n\n      if (d.check('WHITE')) pad.fFillColor = 0;\n      if (d.check('LOGX')) pad.fLogx = 1;\n      if (d.check('LOGY')) pad.fLogy = 1;\n      if (d.check('LOGZ')) pad.fLogz = 1;\n      if (d.check('LOG')) pad.fLogx = pad.fLogy = pad.fLogz = 1;\n      if (d.check('GRIDX')) pad.fGridx = 1;\n      if (d.check('GRIDY')) pad.fGridy = 1;\n      if (d.check('GRID')) pad.fGridx = pad.fGridy = 1;\n      if (d.check('TICKX')) pad.fTickx = 1;\n      if (d.check('TICKY')) pad.fTicky = 1;\n      if (d.check('TICK')) pad.fTickx = pad.fTicky = 1;\n   }\n\n   /** @summary draw RPad object */\n   static async draw(dom, pad, opt) {\n      const painter = new RPadPainter(dom, pad, false);\n      painter.decodeOptions(opt);\n\n      if (painter.getCanvSvg().empty()) {\n         painter.has_canvas = false;\n         painter.this_pad_name = '';\n         painter.setTopPainter();\n      } else\n         painter.addToPadPrimitives(painter.pad_name); // must be here due to pad painter\n\n\n      painter.createPadSvg();\n\n      if (painter.matchObjectType(clTPad) && (!painter.has_canvas || painter.hasObjectsToDraw()))\n         painter.addPadButtons();\n\n      // we select current pad, where all drawing is performed\n      const prev_name = painter.has_canvas ? painter.selectCurrentPad(painter.this_pad_name) : undefined;\n\n      selectActivePad({ pp: painter, active: false });\n\n      // flag used to prevent immediate pad redraw during first draw\n      return painter.drawPrimitives().then(() => {\n         painter.addPadInteractive();\n         painter.showPadButtons();\n         // we restore previous pad name\n         painter.selectCurrentPad(prev_name);\n         return painter;\n      });\n   }\n\n} // class RPadPainter\n\nexport { RPadPainter };\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.10.1\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2023\n * @license MIT\n */\n\nconst HEX_CHARS = '0123456789abcdef'.split(''),\n      EXTRA = [-2147483648, 8388608, 32768, 128],\n      SHIFT = [24, 16, 8, 0],\n      K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n           0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n           0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n           0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n           0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n           0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n           0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n\nclass Sha256 {\n\n  constructor(is224) {\n    this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  /** One can use only string or Uint8Array */\n  update(message) {\n    if (this.finalized)\n      return;\n\n    const notString = (typeof message !== 'string'),\n          length = message.length, blocks = this.blocks;\n\n    let code, index = 0, i;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index)\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80)\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else\n        this.start = i;\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  }\n\n  finalize() {\n    if (this.finalized)\n      return;\n    this.finalized = true;\n    const blocks = this.blocks,\n          i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed)\n        this.hash();\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  }\n\n  hash() {\n    const blocks = this.blocks;\n    let a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n        h = this.h7, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n      this.chromeBugWorkAround = true;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  }\n\n  digest() {\n    this.finalize();\n\n    const h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n          h6 = this.h6, h7 = this.h7,\n    arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224)\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    return arr;\n  }\n\n  hex() {\n    const d = this.digest();\n    let res = '';\n    for (let i = 0; i < d.length; ++i)\n       res += HEX_CHARS[(d[i] >> 4) & 0xF] + HEX_CHARS[d[i] & 0xF];\n    return res;\n  }\n\n  toString() {\n    return this.hex();\n  }\n\n} // class Sha256\n\nfunction sha256(message, as_hex) {\n  const m = new Sha256(false);\n  m.update(message);\n  return as_hex ? m.hex() : m.digest();\n}\n\nfunction sha256_2(message, arr, as_hex) {\n  const m = new Sha256(false);\n  m.update(message);\n  m.update(arr);\n  return as_hex ? m.hex() : m.digest();\n}\n\nexport { sha256, sha256_2 };\n","import { httpRequest, createHttpRequest, loadScript, decodeUrl,\n         browser, setBatchMode, isBatchMode, isObject, isFunc, isStr, btoa_func } from './core.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5 } from './gui/utils.mjs';\nimport { sha256, sha256_2 } from './base/sha256.mjs';\n\n\n// secret session key used for hashing connections keys\n// only if set, all messages from and to server signed with HMAC hash\nlet sessionKey = '';\n\n/** @summary HMAC implementation\n * @desc see https://en.wikipedia.org/wiki/HMAC for more details\n * @private */\nfunction HMAC(key, m, o) {\n   const kbis = sha256(sessionKey + key),\n         block_size = 64,\n         opad = 0x5c, ipad = 0x36,\n         ko = [], ki = [];\n   while (kbis.length < block_size)\n      kbis.push(0);\n   for (let i = 0; i < kbis.length; ++i) {\n      const code = kbis[i];\n      ko.push(code ^ opad);\n      ki.push(code ^ ipad);\n   }\n\n   const hash = sha256_2(ki, (o === undefined) ? m : new Uint8Array(m, o));\n\n   return sha256_2(ko, hash, true);\n}\n\n/**\n * @summary Class emulating web socket with long-poll http requests\n *\n * @private\n */\n\nclass LongPollSocket {\n\n   constructor(addr, _raw, _handle, _counter) {\n      this.path = addr;\n      this.connid = null;\n      this.req = null;\n      this.raw = _raw;\n      this.handle = _handle;\n      this.counter = _counter;\n\n      this.nextRequest('', 'connect');\n   }\n\n   /** @summary Submit next request */\n   nextRequest(data, kind) {\n      let url = this.path, reqmode = 'buf', post = null;\n      if (kind === 'connect') {\n         url += this.raw ? '?raw_connect' : '?txt_connect';\n         if (this.handle) url += '&' + this.handle.getConnArgs(this.counter++);\n         console.log(`longpoll connect ${url} raw = ${this.raw}`);\n         this.connid = 'connect';\n      } else if (kind === 'close') {\n         if ((this.connid === null) || (this.connid === 'close')) return;\n         url += `?connection=${this.connid}&close`;\n         if (this.handle) url += '&' + this.handle.getConnArgs(this.counter++);\n         this.connid = 'close';\n         reqmode = 'text;sync'; // use sync mode to close connection before browser window closed\n      } else if ((this.connid === null) || (typeof this.connid !== 'number')) {\n         if (!browser.qt5) console.error('No connection');\n      } else {\n         url += '?connection=' + this.connid;\n         if (this.handle) url += '&' + this.handle.getConnArgs(this.counter++);\n         if (kind === 'dummy') url += '&dummy';\n      }\n\n      if (data) {\n         if (this.raw) {\n            // special workaround to avoid POST request, use base64 coding\n            url += '&post=' + btoa_func(data);\n         } else {\n            // send data with post request - most efficient way\n            reqmode = 'postbuf';\n            post = data;\n         }\n      }\n\n      createHttpRequest(url, reqmode, function(res) {\n         // this set to the request itself, res is response\n\n         if (this.handle.req === this)\n            this.handle.req = null; // get response for existing dummy request\n\n         if (res === null)\n            return this.handle.processRequest(null);\n\n         if (this.handle.raw) {\n            // raw mode - all kind of reply data packed into binary buffer\n            // first 4 bytes header 'txt:' or 'bin:'\n            // after the 'bin:' there is length of optional text argument like 'bin:14  :optional_text'\n            // and immedaitely after text binary data. Server sends binary data so, that offset should be multiple of 8\n\n            const u8Arr = new Uint8Array(res);\n            let str = '', i = 0, offset = u8Arr.length;\n            if (offset < 4) {\n               if (!browser.qt5) console.error(`longpoll got short message in raw mode ${offset}`);\n               return this.handle.processRequest(null);\n            }\n\n            while (i < 4) str += String.fromCharCode(u8Arr[i++]);\n            if (str !== 'txt:') {\n               str = '';\n               while ((i < offset) && (String.fromCharCode(u8Arr[i]) !== ':'))\n                  str += String.fromCharCode(u8Arr[i++]);\n               ++i;\n               offset = i + parseInt(str.trim());\n            }\n\n            str = '';\n            while (i < offset) str += String.fromCharCode(u8Arr[i++]);\n\n            if (str) {\n               if (str === '<<nope>>')\n                  this.handle.processRequest(-1111);\n               else\n                   this.handle.processRequest(str);\n            }\n            if (offset < u8Arr.length)\n               this.handle.processRequest(res, offset);\n         } else if (this.getResponseHeader('Content-Type') === 'application/x-binary') {\n            // binary reply with optional header\n            const extra_hdr = this.getResponseHeader('LongpollHeader');\n            if (extra_hdr) this.handle.processRequest(extra_hdr);\n            this.handle.processRequest(res, 0);\n         } else {\n            // text reply\n            if (res && !isStr(res)) {\n               let str = '';\n               const u8Arr = new Uint8Array(res);\n               for (let i = 0; i < u8Arr.length; ++i)\n                  str += String.fromCharCode(u8Arr[i]);\n               res = str;\n            }\n            if (res === '<<nope>>')\n               this.handle.processRequest(-1111);\n            else\n               this.handle.processRequest(res);\n         }\n      }, function(/* err, status */) {\n         this.handle.processRequest(null, 'error');\n      }, true).then(req => {\n         req.handle = this;\n         if (!this.req)\n            this.req = req; // any request can be used for response, do not submit dummy until req is there\n         req.send(post);\n      });\n   }\n\n   /** @summary Process request */\n   processRequest(res, _offset) {\n      if (res === null) {\n         if (isFunc(this.onerror))\n            this.onerror('receive data with connid ' + (this.connid || '---'));\n         if ((_offset === 'error') && isFunc(this.onclose))\n            this.onclose('force_close');\n         this.connid = null;\n         return;\n      } else if (res === -1111)\n         res = '';\n\n      let dummy_tmout = 5;\n\n      if (this.connid === 'connect') {\n         if (!res) {\n            this.connid = null;\n            if (isFunc(this.onerror))\n               this.onerror('connection rejected');\n            return;\n         }\n\n         this.connid = parseInt(res);\n         dummy_tmout = 100; // when establishing connection, wait a bit longer to submit dummy package\n         console.log(`Get new longpoll connection with id ${this.connid}`);\n         if (isFunc(this.onopen))\n            this.onopen();\n      } else if (this.connid === 'close') {\n         if (isFunc(this.onclose))\n            this.onclose();\n         return;\n      } else {\n         if (isFunc(this.onmessage) && res)\n            this.onmessage({ data: res, offset: _offset });\n      }\n\n      // minimal timeout to reduce load, generate dummy only if client not submit new request immediately\n      if (!this.req)\n         setTimeout(() => { if (!this.req) this.nextRequest('', 'dummy'); }, dummy_tmout);\n   }\n\n   /** @summary Send data */\n   send(str) { this.nextRequest(str); }\n\n   /** @summary Close connection */\n   close() { this.nextRequest('', 'close'); }\n\n} // class LongPollSocket\n\n// ========================================================================================\n\n/**\n * @summary Class re-playing socket data from stored protocol\n *\n * @private\n */\n\nclass FileDumpSocket {\n\n   constructor(receiver) {\n      this.receiver = receiver;\n      this.protocol = [];\n      this.cnt = 0;\n      httpRequest('protocol.json', 'text').then(res => this.getProtocol(res));\n   }\n\n   /** @summary Get stored protocol */\n   getProtocol(res) {\n      if (!res) return;\n      this.protocol = JSON.parse(res);\n      if (isFunc(this.onopen)) this.onopen();\n      this.nextOperation();\n   }\n\n   /** @summary Emulate send - just cound operation */\n   send(/* str */) {\n      if (this.protocol[this.cnt] === 'send') {\n         this.cnt++;\n         setTimeout(() => this.nextOperation(), 10);\n      }\n   }\n\n   /** @summary Emulate close */\n   close() {}\n\n   /** @summary Read data for next operation */\n   nextOperation() {\n      // when file request running - just ignore\n      if (this.wait_for_file) return;\n      const fname = this.protocol[this.cnt];\n\n      if (!fname) return;\n      if (fname === 'send') return; // waiting for send\n      this.wait_for_file = true;\n      this.cnt++;\n      httpRequest(fname, (fname.indexOf('.bin') > 0 ? 'buf' : 'text')).then(res => {\n         this.wait_for_file = false;\n         if (!res) return;\n         const p = fname.indexOf('_ch'),\n               chid = (p > 0) ? Number.parseInt(fname.slice(p+3, fname.indexOf('.', p))) : 1;\n         if (isFunc(this.receiver.provideData))\n            this.receiver.provideData(chid, res, 0);\n         setTimeout(() => this.nextOperation(), 10);\n      });\n   }\n\n} // class FileDumpSocket\n\n\n/**\n * @summary Client communication handle for RWebWindow.\n *\n * @desc Should be created with {@link connectWebWindow} function\n */\n\nclass WebWindowHandle {\n\n   constructor(socket_kind, credits) {\n      this.kind = socket_kind;\n      this.state = 0;\n      this.credits = credits || 10;\n      this.cansend = this.credits;\n      this.ackn = this.credits;\n      this.send_seq = 1; // sequence counter of send messages\n      this.recv_seq = 0; // sequence counter of received messages\n   }\n\n   /** @summary Returns arguments specified in the RWebWindow::SetUserArgs() method\n     * @desc Can be any valid JSON expression. Undefined by default.\n     * @param {string} [field] - if specified and user args is object, returns correspondent object member\n     * @return user arguments object */\n   getUserArgs(field) {\n      if (field && isStr(field))\n         return isObject(this.user_args) ? this.user_args[field] : undefined;\n\n      return this.user_args;\n   }\n\n   /** @summary Set user args\n     * @desc Normally set via RWebWindow::SetUserArgs() method */\n   setUserArgs(args) { this.user_args = args; }\n\n   /** @summary Set callbacks receiver.\n     * @param {object} obj - object with receiver functions\n     * @param {function} obj.onWebsocketMsg - called when new data receieved from RWebWindow\n     * @param {function} obj.onWebsocketOpened - called when connection established\n     * @param {function} obj.onWebsocketClosed - called when connection closed\n     * @param {function} obj.onWebsocketError - called when get error via the connection */\n   setReceiver(obj) { this.receiver = obj; }\n\n   /** @summary Cleanup and close connection. */\n   cleanup() {\n      delete this.receiver;\n      this.close(true);\n   }\n\n   /** @summary Invoke method in the receiver.\n    * @private */\n   invokeReceiver(brdcst, method, arg, arg2) {\n      if (this.receiver && isFunc(this.receiver[method]))\n         this.receiver[method](this, arg, arg2);\n\n      if (brdcst && this.channels) {\n         const ks = Object.keys(this.channels);\n         for (let n = 0; n < ks.length; ++n)\n            this.channels[ks[n]].invokeReceiver(false, method, arg, arg2);\n      }\n   }\n\n   /** @summary Provide data for receiver. When no queue - do it directly.\n    * @private */\n   provideData(chid, msg, len) {\n      if (this.wait_first_recv) {\n         // here dummy first recv like EMBED_DONE is handled\n         delete this.wait_first_recv;\n         this.state = 1;\n         return this.invokeReceiver(false, 'onWebsocketOpened');\n      }\n\n      if ((chid > 1) && this.channels) {\n         const channel = this.channels[chid];\n         if (channel)\n            return channel.provideData(1, msg, len);\n      }\n\n      const force_queue = len && (len < 0);\n      if (!force_queue && (!this.msgqueue || !this.msgqueue.length))\n         return this.invokeReceiver(false, 'onWebsocketMsg', msg, len);\n\n      if (!this.msgqueue) this.msgqueue = [];\n      if (force_queue) len = undefined;\n\n      this.msgqueue.push({ ready: true, msg, len });\n   }\n\n   /** @summary Reserve entry in queue for data, which is not yet decoded.\n    * @private */\n   reserveQueueItem() {\n      if (!this.msgqueue) this.msgqueue = [];\n      const item = { ready: false, msg: null, len: 0 };\n      this.msgqueue.push(item);\n      return item;\n   }\n\n   /** @summary Provide data for item which was reserved before.\n    * @private */\n   markQueueItemDone(item, _msg, _len) {\n      item.ready = true;\n      item.msg = _msg;\n      item.len = _len;\n      this.processQueue();\n   }\n\n   /** @summary Process completed messages in the queue\n     * @private */\n   processQueue() {\n      if (this._loop_msgqueue || !this.msgqueue) return;\n      this._loop_msgqueue = true;\n      while ((this.msgqueue.length > 0) && this.msgqueue[0].ready) {\n         const front = this.msgqueue.shift();\n         this.invokeReceiver(false, 'onWebsocketMsg', front.msg, front.len);\n      }\n      if (this.msgqueue.length === 0)\n         delete this.msgqueue;\n      delete this._loop_msgqueue;\n   }\n\n   /** @summary Close connection */\n   close(force) {\n      if (this.master) {\n         this.master.send(`CLOSECH=${this.channelid}`, 0);\n         delete this.master.channels[this.channelid];\n         delete this.master;\n         return;\n      }\n\n      if (this.timerid) {\n         clearTimeout(this.timerid);\n         delete this.timerid;\n      }\n\n      if (this._websocket && (this.state > 0)) {\n         this.state = force ? -1 : 0; // -1 prevent socket from reopening\n         this._websocket.onclose = null; // hide normal handler\n         this._websocket.close();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Checks number of credits for send operation\n     * @param {number} [numsend = 1] - number of required send operations\n     * @return true if one allow to send specified number of text message to server */\n   canSend(numsend) { return this.cansend >= (numsend || 1); }\n\n   /** @summary Returns number of possible send operations relative to number of credits */\n   getRelCanSend() { return !this.credits ? 1 : this.cansend / this.credits; }\n\n   /** @summary Send text message via the connection.\n     * @param {string} msg - text message to send\n     * @param {number} [chid] - channel id, 1 by default, 0 used only for internal communication */\n   send(msg, chid) {\n      if (this.master)\n         return this.master.send(msg, this.channelid);\n\n      if (!this._websocket || (this.state <= 0)) return false;\n\n      if (!Number.isInteger(chid)) chid = 1; // when not configured, channel 1 is used - main widget\n\n      if (this.cansend <= 0) console.error(`should be queued before sending cansend: ${this.cansend}`);\n\n      const prefix = `${this.send_seq++}:${this.ackn}:${this.cansend}:${chid}:`;\n      this.ackn = 0;\n      this.cansend--; // decrease number of allowed send packets\n\n      let hash = 'none';\n      if (this.key && sessionKey)\n         hash = HMAC(this.key, `${prefix}${msg}`);\n\n      this._websocket.send(`${hash}:${prefix}${msg}`);\n\n      if ((this.kind === 'websocket') || (this.kind === 'longpoll')) {\n         if (this.timerid) clearTimeout(this.timerid);\n         this.timerid = setTimeout(() => this.keepAlive(), 10000);\n      }\n\n      return true;\n   }\n\n   /** @summary Send only last message of specified kind during defined time interval.\n     * @desc Idea is to prvent sending multiple messages of similar kind and overload connection\n     * Instead timeout is started after which only last specified message will be send\n     * @private */\n   sendLast(kind, tmout, msg) {\n      let d = this._delayed;\n      if (!d) d = this._delayed = {};\n      d[kind] = msg;\n      if (!d[`${kind}_handler`])\n         d[`${kind}_handler`] = setTimeout(() => { delete d[`${kind}_handler`]; this.send(d[kind]); }, tmout);\n   }\n\n   /** @summary Inject message(s) into input queue, for debug purposes only\n     * @private */\n   inject(msg, chid, immediate) {\n      // use timeout to avoid too deep call stack\n      if (!immediate)\n         return setTimeout(this.inject.bind(this, msg, chid, true), 0);\n\n      if (chid === undefined) chid = 1;\n\n      if (Array.isArray(msg)) {\n         for (let k = 0; k < msg.length; ++k)\n            this.provideData(chid, isStr(msg[k]) ? msg[k] : JSON.stringify(msg[k]), -1);\n         this.processQueue();\n      } else if (msg)\n         this.provideData(chid, isStr(msg) ? msg : JSON.stringify(msg));\n   }\n\n   /** @summary Send keep-alive message.\n     * @desc Only for internal use, only when used with websockets\n     * @private */\n   keepAlive() {\n      delete this.timerid;\n      this.send('KEEPALIVE', 0);\n   }\n\n   /** @summary Request server to resize window\n     * @desc For local displays like CEF or qt5 only server can do this */\n   resizeWindow(w, h) {\n      if (browser.qt5 || browser.cef3)\n         this.send(`RESIZE=${w},${h}`, 0);\n      else if ((typeof window !== 'undefined') && isFunc(window?.resizeTo))\n         window.resizeTo(w, h);\n   }\n\n   /** @summary Method open channel, which will share same connection, but can be used independently from main\n     * @private */\n   createChannel() {\n      if (this.master)\n         return this.master.createChannel();\n\n      const channel = new WebWindowHandle('channel', this.credits);\n      channel.wait_first_recv = true; // first received message via the channel is confirmation of established connection\n\n      if (!this.channels) {\n         this.channels = {};\n         this.freechannelid = 2;\n      }\n\n      channel.master = this;\n      channel.channelid = this.freechannelid++;\n\n      // register\n      this.channels[channel.channelid] = channel;\n\n      // now server-side entity should be initialized and init message send from server side!\n      return channel;\n   }\n\n   /** @summary Returns true if socket connected */\n   isConnected() { return this.state > 0; }\n\n   /** @summary Returns used channel ID, 1 by default */\n   getChannelId() { return this.channelid && this.master ? this.channelid : 1; }\n\n   /** @summary Assign href parameter\n     * @param {string} [path] - absolute path, when not specified window.location.url will be used\n     * @private */\n   setHRef(path) {\n      if (isStr(path) && (path.indexOf('?') > 0)) {\n         this.href = path.slice(0, path.indexOf('?'));\n         const d = decodeUrl(path);\n         this.key = d.get('key');\n         this.token = d.get('token');\n      } else {\n         this.href = path;\n         delete this.key;\n         delete this.token;\n      }\n   }\n\n   /** @summary Return href part\n     * @param {string} [relative_path] - relative path to the handle\n     * @private */\n   getHRef(relative_path) {\n      if (!relative_path || !this.kind || !this.href)\n         return this.href;\n      let addr = this.href;\n      if (relative_path.indexOf('../') === 0) {\n         const ddd = addr.lastIndexOf('/', addr.length-2);\n         addr = addr.slice(0, ddd) + relative_path.slice(2);\n      } else\n         addr += relative_path;\n\n      return addr;\n   }\n\n   /** @summary provide connection args for the web socket\n    * @private */\n   getConnArgs(ntry) {\n      let args = '';\n      if (this.key) {\n         const k = HMAC(this.key, `attempt_${ntry}`);\n         args += `key=${k}&ntry=${ntry}`;\n      }\n      if (this.token) {\n         if (args) args += '&';\n         args += `token=${this.token}`;\n      }\n      return args;\n   }\n\n   /** @summary Create configured socket for current object.\n     * @private */\n   connect(href) {\n      this.close();\n      if (!href && this.href) href = this.href;\n\n      let ntry = 0;\n\n      const retry_open = first_time => {\n         if (this.state !== 0) return;\n\n         if (!first_time) console.log(`try connect window again ${new Date().toString()}`);\n\n         if (this._websocket) {\n            this._websocket.close();\n            delete this._websocket;\n         }\n\n         if (!href) {\n            href = window.location.href;\n            if (href && href.indexOf('#') > 0) href = href.slice(0, href.indexOf('#'));\n            if (href && href.lastIndexOf('/') > 0) href = href.slice(0, href.lastIndexOf('/') + 1);\n         }\n         this.href = href;\n         ntry++;\n\n         if (first_time) console.log(`Opening web socket at ${href}`);\n\n         if (ntry > 2) showProgress(`Trying to connect ${href}`);\n\n         let path = href;\n\n         if (this.kind === 'file') {\n            path += 'root.filedump';\n            this._websocket = new FileDumpSocket(this);\n            console.log(`configure protocol log ${path}`);\n         } else if ((this.kind === 'websocket') && first_time) {\n            path = path.replace('http://', 'ws://').replace('https://', 'wss://') + 'root.websocket';\n            path += '?' + this.getConnArgs(ntry);\n            console.log(`configure websocket ${path}`);\n            this._websocket = new WebSocket(path);\n         } else {\n            path += 'root.longpoll';\n            console.log(`configure longpoll ${path}`);\n            this._websocket = new LongPollSocket(path, (this.kind === 'rawlongpoll'), this, ntry);\n         }\n\n         if (!this._websocket) return;\n\n         this._websocket.onopen = () => {\n            if (ntry > 2) showProgress();\n            this.state = 1;\n\n            const key = this.key || '';\n            this.send(`READY=${key}`, 0); // need to confirm connection\n            this.invokeReceiver(false, 'onWebsocketOpened');\n         };\n\n         this._websocket.onmessage = e => {\n            let msg = e.data;\n\n            if (this.next_binary) {\n               const binchid = this.next_binary,\n                     server_hash = this.next_binary_hash;\n               delete this.next_binary;\n               delete this.next_binary_hash;\n\n               if (msg instanceof Blob) {\n                  // convert Blob object to BufferArray\n                  const reader = new FileReader(), qitem = this.reserveQueueItem();\n                  // The file's text will be printed here\n                  reader.onload = event => {\n                     let result = event.target.result;\n                     if (this.key && sessionKey) {\n                        const hash = HMAC(this.key, result, 0);\n                        if (hash !== server_hash) {\n                           console.log('Discard binary buffer because of HMAC mismatch');\n                           result = new ArrayBuffer(0);\n                        }\n                     }\n\n                     this.markQueueItemDone(qitem, result, 0);\n                  };\n                  reader.readAsArrayBuffer(msg, e.offset || 0);\n               } else {\n                  // this is from CEF or LongPoll handler\n                  let result = msg;\n                  if (this.key && sessionKey) {\n                     const hash = HMAC(this.key, result, e.offset || 0);\n                     if (hash !== server_hash) {\n                        console.log('Discard binary buffer because of HMAC mismatch');\n                        result = new ArrayBuffer(0);\n                     }\n                  }\n                  this.provideData(binchid, result, e.offset || 0);\n               }\n\n               return;\n            }\n\n            if (!isStr(msg))\n               return console.log(`unsupported message kind: ${typeof msg}`);\n\n            const i0 = msg.indexOf(':'),\n                  server_hash = msg.slice(0, i0),\n                  i1 = msg.indexOf(':', i0 + 1),\n                  seq_id = Number.parseInt(msg.slice(i0 + 1, i1)),\n                  i2 = msg.indexOf(':', i1 + 1),\n                  credit = Number.parseInt(msg.slice(i1 + 1, i2)),\n                  i3 = msg.indexOf(':', i2 + 1),\n                  // cansend = parseInt(msg.slice(i2 + 1, i3)),  // TODO: take into account when sending messages\n                  i4 = msg.indexOf(':', i3 + 1),\n                  chid = Number.parseInt(msg.slice(i3 + 1, i4));\n\n            // for authentication HMAC checksum and sequence id is important\n            // HMAC used to authenticate server\n            // sequence id is necessary to exclude submission of same packet again\n            if (this.key && sessionKey) {\n               const client_hash = HMAC(this.key, msg.slice(i0+1));\n               if (server_hash !== client_hash)\n                  return console.log(`Failure checking server md5 sum ${server_hash}`);\n            }\n\n            if (seq_id <= this.recv_seq)\n               return console.log(`Failure with packet sequence ${seq_id} <= ${this.recv_seq}`);\n\n            this.recv_seq = seq_id; // sequence id of received packet\n            this.ackn++;            // count number of received packets,\n            this.cansend += credit; // how many packets client can send\n\n            msg = msg.slice(i4 + 1);\n\n            if (chid === 0) {\n               console.log(`GET chid=0 message ${msg}`);\n               if (msg === 'CLOSE') {\n                  this.close(true); // force closing of socket\n                  this.invokeReceiver(true, 'onWebsocketClosed');\n               } else if (msg.indexOf('NEW_KEY=') === 0) {\n                  const newkey = msg.slice(8);\n                  this.close(true);\n                  let href = (typeof document !== 'undefined') ? document.URL : null;\n                  if (isStr(href) && (typeof window !== 'undefined') && window?.history) {\n                     const p = href.indexOf('?key=');\n                     if (p > 0) href = href.slice(0, p);\n                     window.history.replaceState(window.history.state, undefined, `${href}?key=${newkey}`);\n                  } else if (typeof sessionStorage !== 'undefined')\n                     sessionStorage.setItem('RWebWindow_Key', newkey);\n                  location.reload(true);\n               }\n            } else if (msg.slice(0, 10) === '$$binary$$') {\n               this.next_binary = chid;\n               this.next_binary_hash = msg.slice(10);\n            } else if (msg === '$$nullbinary$$')\n               this.provideData(chid, new ArrayBuffer(0), 0);\n            else\n               this.provideData(chid, msg);\n\n            if (this.ackn > 7)\n               this.send('READY', 0); // send dummy message to server\n         };\n\n         this._websocket.onclose = arg => {\n            delete this._websocket;\n            if ((this.state > 0) || (arg === 'force_close')) {\n               console.log('websocket closed');\n               this.state = 0;\n               this.invokeReceiver(true, 'onWebsocketClosed');\n            }\n         };\n\n         this._websocket.onerror = err => {\n            console.log(`websocket error ${err} state ${this.state}`);\n            if (this.state > 0) {\n               this.invokeReceiver(true, 'onWebsocketError', err);\n               this.state = 0;\n            }\n         };\n\n         // only in interactive mode try to reconnect\n         if (!isBatchMode())\n            setTimeout(retry_open, 3000); // after 3 seconds try again\n      }; // retry_open\n\n      retry_open(true); // call for the first time\n   }\n\n   /** @summary Send newkey request to application\n     * @desc If server creates newkey and response - webpage will be reaload\n     * After key generation done, connection will not be working any longer\n     * WARNING - only call when you know that you are doing\n     * @private */\n   askReload() {\n      this.send('GENERATE_KEY', 0);\n   }\n\n   /** @summary Instal Ctrl-R handler to realod web window\n     * @desc Instead of default window reload invokes {@link askReload} method\n     * WARNING - only call when you know that you are doing\n     * @private */\n   addReloadKeyHandler() {\n      if (this.kind === 'file') return;\n\n      window.addEventListener('keydown', evnt => {\n         if (((evnt.key === 'R') || (evnt.key === 'r')) && evnt.ctrlKey) {\n            evnt.stopPropagation();\n            evnt.preventDefault();\n            console.log('Prevent Ctrl-R propogation - ask reload RWebWindow!');\n            this.askReload();\n          }\n      });\n   }\n\n} // class WebWindowHandle\n\n\n/** @summary Method used to initialize connection to web window.\n  * @param {object} arg - arguments\n  * @param {string} [arg.socket_kind] - kind of connection longpoll|websocket, detected automatically from URL\n  * @param {number} [arg.credits = 10] - number of packets which can be send to server without acknowledge\n  * @param {object} arg.receiver - instance of receiver for websocket events, allows to initiate connection immediately\n  * @param {string} [arg.first_recv] - required prefix in the first message from RWebWindow, remain part of message will be returned in handle.first_msg\n  * @param {string} [arg.href] - URL to RWebWindow, using window.location.href by default\n  * @return {Promise} for ready-to-use {@link WebWindowHandle} instance  */\nasync function connectWebWindow(arg) {\n   // mark that jsroot used with RWebWindow\n   browser.webwindow = true;\n\n   if (isFunc(arg))\n      arg = { callback: arg };\n   else if (!isObject(arg))\n      arg = {};\n\n   let d_key, d_token, new_key;\n\n   if (!arg.href) {\n      let href = (typeof document !== 'undefined') ? document.URL : '';\n      const p = href.indexOf('#');\n      if (p > 0) {\n         sessionKey = href.slice(p+1);\n         href = href.slice(0, p);\n      }\n\n      const d = decodeUrl(href);\n      d_key = d.get('key');\n      d_token = d.get('token');\n\n      if (typeof sessionStorage !== 'undefined') {\n         new_key = sessionStorage.getItem('RWebWindow_Key');\n         sessionStorage.removeItem('RWebWindow_Key');\n         if (new_key) console.log(`Use key ${new_key} from session storage`);\n\n         if (sessionKey)\n            sessionStorage.setItem('RWebWindow_SessionKey', sessionKey);\n         else\n            sessionKey = sessionStorage.getItem('RWebWindow_SessionKey') || '';\n      }\n\n      // hide key and any following parameters from URL, chrome do not allows to close browser with changed URL\n      if (d_key && !d.has('headless') && isStr(href) && (typeof window !== 'undefined') && window?.history) {\n         const p = href.indexOf('?key=');\n         if (p > 0) window.history.replaceState(window.history.state, undefined, href.slice(0, p));\n      }\n\n      // special holder script, prevents headless chrome browser from too early exit\n      if (d.has('headless') && d_key && (browser.isChromeHeadless || browser.isChrome) && !arg.ignore_chrome_batch_holder)\n         loadScript('root_batch_holder.js?key=' + (new_key || d_key));\n\n      if (!arg.platform)\n         arg.platform = d.get('platform');\n\n      if (arg.platform === 'qt5')\n         browser.qt5 = true;\n      else if (arg.platform === 'cef3')\n         browser.cef3 = true;\n\n      if (arg.batch === undefined)\n         arg.batch = d.has('headless');\n\n      if (arg.batch) setBatchMode(true);\n\n      if (!arg.socket_kind)\n         arg.socket_kind = d.get('ws');\n\n      if (!new_key && arg.winW && arg.winH && !isBatchMode() && isFunc(window?.resizeTo))\n         window.resizeTo(arg.winW, arg.winH);\n\n      if (!new_key && arg.winX && arg.winY && !isBatchMode() && isFunc(window?.moveTo))\n         window.moveTo(arg.winX, arg.winY);\n   }\n\n   if (!arg.socket_kind) {\n      if (browser.qt5)\n         arg.socket_kind = 'rawlongpoll';\n      else if (browser.cef3)\n         arg.socket_kind = 'longpoll';\n      else\n         arg.socket_kind = 'websocket';\n   }\n\n   // only for debug purposes\n   // arg.socket_kind = 'longpoll';\n\n   const main = new Promise(resolveFunc => {\n      const handle = new WebWindowHandle(arg.socket_kind, arg.credits);\n      handle.setUserArgs(arg.user_args);\n      if (arg.href)\n         handle.setHRef(arg.href); // apply href now  while connect can be called from other place\n      else {\n         handle.key = new_key || d_key;\n         handle.token = d_token;\n      }\n\n      if (window) {\n         window.onbeforeunload = () => handle.close(true);\n         if (browser.qt5) window.onqt5unload = window.onbeforeunload;\n      }\n\n\n      if (arg.receiver) {\n         // when receiver exists, it handles itself callbacks\n         handle.setReceiver(arg.receiver);\n         handle.connect();\n         return resolveFunc(handle);\n      }\n\n      if (!arg.first_recv)\n         return resolveFunc(handle);\n\n      handle.setReceiver({\n         onWebsocketOpened() {}, // dummy function when websocket connected\n\n         onWebsocketMsg(handle, msg) {\n            if (msg.indexOf(arg.first_recv) !== 0)\n               return handle.close();\n            handle.first_msg = msg.slice(arg.first_recv.length);\n            resolveFunc(handle);\n         },\n\n         onWebsocketClosed() { closeCurrentWindow(); } // when connection closed, close panel as well\n      });\n\n      handle.connect();\n   });\n\n   if (!arg.ui5) return main;\n\n   return Promise.all([main, loadOpenui5(arg)]).then(arr => arr[0]);\n}\n\nexport { WebWindowHandle, connectWebWindow };\n","import { settings, create, parse, toJSON, loadScript, registerMethods, isBatchMode, isFunc, isStr, nsREX } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb } from '../d3.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5, ToolbarIcons, getColorExec } from '../gui/utils.mjs';\nimport { GridDisplay, getHPainter } from '../gui/display.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { selectActivePad, cleanup, resize, EAxisBits } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { RFramePainter } from './RFramePainter.mjs';\nimport { RPadPainter } from './RPadPainter.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { WebWindowHandle } from '../webwindow.mjs';\n\n\n/**\n * @summary Painter class for RCanvas\n *\n * @private\n */\n\nclass RCanvasPainter extends RPadPainter {\n\n   /** @summary constructor */\n   constructor(dom, canvas) {\n      super(dom, canvas, true);\n      this._websocket = null;\n      this.tooltip_allowed = settings.Tooltip;\n      this.v7canvas = true;\n      if ((dom === null) && (canvas === null)) {\n         // for web canvas details are important\n         settings.SmallPad.width = 20;\n         settings.SmallPad.height = 10;\n      }\n   }\n\n   /** @summary Cleanup canvas painter */\n   cleanup() {\n      delete this._websocket;\n      delete this._submreq;\n\n     if (this._changed_layout)\n         this.setLayoutKind('simple');\n      delete this._changed_layout;\n\n      super.cleanup();\n   }\n\n   /** @summary Returns layout kind */\n   getLayoutKind() {\n      const origin = this.selectDom('origin'),\n         layout = origin.empty() ? '' : origin.property('layout');\n      return layout || 'simple';\n   }\n\n   /** @summary Set canvas layout kind */\n   setLayoutKind(kind, main_selector) {\n      const origin = this.selectDom('origin');\n      if (!origin.empty()) {\n         if (!kind) kind = 'simple';\n         origin.property('layout', kind);\n         origin.property('layout_selector', (kind !== 'simple') && main_selector ? main_selector : null);\n         this._changed_layout = (kind !== 'simple'); // use in cleanup\n      }\n   }\n\n   /** @summary Changes layout\n     * @return {Promise} indicating when finished */\n   async changeLayout(layout_kind, mainid) {\n      const current = this.getLayoutKind();\n      if (current === layout_kind)\n         return true;\n\n      const origin = this.selectDom('origin'),\n            sidebar2 = origin.select('.side_panel2'),\n            lst = [];\n      let sidebar = origin.select('.side_panel'),\n          main = this.selectDom(), force;\n\n      while (main.node().firstChild)\n         lst.push(main.node().removeChild(main.node().firstChild));\n\n      if (!sidebar.empty())\n         cleanup(sidebar.node());\n      if (!sidebar2.empty())\n         cleanup(sidebar2.node());\n\n      this.setLayoutKind('simple'); // restore defaults\n      origin.html(''); // cleanup origin\n\n      if (layout_kind === 'simple') {\n         main = origin;\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n         this.setLayoutKind(layout_kind);\n         force = true;\n      } else {\n         const grid = new GridDisplay(origin.node(), layout_kind);\n\n         if (mainid === undefined)\n            mainid = (layout_kind.indexOf('vert') === 0) ? 0 : 1;\n\n         main = d3_select(grid.getGridFrame(mainid));\n         main.classed('central_panel', true).style('position', 'relative');\n\n         if (mainid === 2) {\n            // left panel for Y\n            sidebar = d3_select(grid.getGridFrame(0));\n            sidebar.classed('side_panel2', true).style('position', 'relative');\n            // bottom panel for X\n            sidebar = d3_select(grid.getGridFrame(3));\n            sidebar.classed('side_panel', true).style('position', 'relative');\n         } else {\n            sidebar = d3_select(grid.getGridFrame(1 - mainid));\n            sidebar.classed('side_panel', true).style('position', 'relative');\n         }\n\n         // now append all childs to the new main\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n\n         this.setLayoutKind(layout_kind, '.central_panel');\n\n         // remove reference to MDIDisplay, solves resize problem\n         origin.property('mdi', null);\n      }\n\n      // resize main drawing and let draw extras\n      resize(main.node(), force);\n      return true;\n   }\n\n   /** @summary Toggle projection\n     * @return {Promise} indicating when ready\n     * @private */\n   async toggleProjection(kind) {\n      delete this.proj_painter;\n\n      if (kind) this.proj_painter = { X: false, Y: false }; // just indicator that drawing can be preformed\n\n      if (isFunc(this.showUI5ProjectionArea))\n         return this.showUI5ProjectionArea(kind);\n\n      let layout = 'simple', mainid;\n\n      switch (kind) {\n         case 'XY': layout = 'projxy'; mainid = 2; break;\n         case 'X':\n         case 'bottom': layout = 'vert2_31'; mainid = 0; break;\n         case 'Y':\n         case 'left': layout = 'horiz2_13'; mainid = 1; break;\n         case 'top': layout = 'vert2_13'; mainid = 1; break;\n         case 'right': layout = 'horiz2_31'; mainid = 0; break;\n      }\n\n      return this.changeLayout(layout, mainid);\n   }\n\n   /** @summary Draw projection for specified histogram\n     * @private */\n   async drawProjection(/* kind,hist,hopt */) {\n      // dummy for the moment\n      return false;\n   }\n\n   /** @summary Draw in side panel\n     * @private */\n   async drawInSidePanel(canv, opt, kind) {\n      const sel = ((this.getLayoutKind() === 'projxy') && (kind === 'Y')) ? '.side_panel2' : '.side_panel',\n            side = this.selectDom('origin').select(sel);\n      return side.empty() ? null : this.drawObject(side.node(), canv, opt);\n   }\n\n   /** @summary Checks if canvas shown inside ui5 widget\n     * @desc Function should be used only from the func which supposed to be replaced by ui5\n     * @private */\n   testUI5() {\n      if (!this.use_openui) return false;\n      console.warn('full ui5 should be used - not loaded yet? Please check!!');\n      return true;\n   }\n\n   /** @summary Show message\n     * @desc Used normally with web-based canvas and handled in ui5\n     * @private */\n   showMessage(msg) {\n      if (!this.testUI5())\n         showProgress(msg, 7000);\n   }\n\n   /** @summary Function called when canvas menu item Save is called */\n   saveCanvasAsFile(fname) {\n      const pnt = fname.indexOf('.');\n      this.createImage(fname.slice(pnt+1))\n          .then(res => this.sendWebsocket(`SAVE:${fname}:${res}`));\n   }\n\n   /** @summary Send command to server to save canvas with specified name\n     * @desc Should be only used in web-based canvas\n     * @private */\n   sendSaveCommand(fname) {\n      this.sendWebsocket('PRODUCE:' + fname);\n   }\n\n   /** @summary Send message via web socket\n     * @private */\n   sendWebsocket(msg) {\n      if (this._websocket?.canSend()) {\n         this._websocket.send(msg);\n         return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Close websocket connection to canvas\n     * @private */\n   closeWebsocket(force) {\n      if (this._websocket) {\n         this._websocket.close(force);\n         this._websocket.cleanup();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Use provided connection for the web canvas\n     * @private */\n   useWebsocket(handle) {\n      this.closeWebsocket();\n\n      this._websocket = handle;\n      this._websocket.setReceiver(this);\n      this._websocket.connect();\n   }\n\n   /** @summary set, test or reset timeout of specified name\n     * @desc Used to prevent overloading of websocket for specific function */\n   websocketTimeout(name, tm) {\n      if (!this._websocket)\n         return;\n      if (!this._websocket._tmouts)\n         this._websocket._tmouts = {};\n\n      const handle = this._websocket._tmouts[name];\n      if (tm === undefined)\n         return handle !== undefined;\n\n      if (tm === 'reset') {\n         if (handle) { clearTimeout(handle); delete this._websocket._tmouts[name]; }\n      } else if (!handle && Number.isInteger(tm))\n         this._websocket._tmouts[name] = setTimeout(() => { delete this._websocket._tmouts[name]; }, tm);\n   }\n\n   /** @summary Hanler for websocket open event\n     * @private */\n   onWebsocketOpened(/* handle */) {\n   }\n\n   /** @summary Hanler for websocket close event\n     * @private */\n   onWebsocketClosed(/* handle */) {\n      if (!this.embed_canvas)\n         closeCurrentWindow();\n   }\n\n   /** @summary Hanler for websocket message\n     * @private */\n   onWebsocketMsg(handle, msg) {\n      // console.log('GET_MSG ' + msg.slice(0,30));\n\n      if (msg === 'CLOSE') {\n         this.onWebsocketClosed();\n         this.closeWebsocket(true);\n      } else if (msg.slice(0, 5) === 'SNAP:') {\n         msg = msg.slice(5);\n         const p1 = msg.indexOf(':'),\n             snapid = msg.slice(0, p1),\n             snap = parse(msg.slice(p1+1));\n         this.syncDraw(true)\n             .then(() => {\n                if (!this.snapid && snap?.fWinSize)\n                   this.resizeBrowser(snap.fWinSize[0], snap.fWinSize[1]);\n             }).then(() => this.redrawPadSnap(snap))\n             .then(() => {\n                 this.addPadInteractive();\n                 handle.send(`SNAPDONE:${snapid}`); // send ready message back when drawing completed\n                 this.confirmDraw();\n              });\n      } else if (msg.slice(0, 4) === 'JSON') {\n         const obj = parse(msg.slice(4));\n         // console.log('get JSON ', msg.length-4, obj._typename);\n         this.redrawObject(obj);\n      } else if (msg.slice(0, 9) === 'REPL_REQ:')\n         this.processDrawableReply(msg.slice(9));\n       else if (msg.slice(0, 4) === 'CMD:') {\n         msg = msg.slice(4);\n         const p1 = msg.indexOf(':'),\n             cmdid = msg.slice(0, p1),\n             cmd = msg.slice(p1+1),\n             reply = `REPLY:${cmdid}:`;\n         if ((cmd === 'SVG') || (cmd === 'PNG') || (cmd === 'JPEG')) {\n            this.createImage(cmd.toLowerCase())\n                .then(res => handle.send(reply + res));\n         } else if (cmd.indexOf('ADDPANEL:') === 0) {\n            const relative_path = cmd.slice(9);\n            if (!isFunc(this.showUI5Panel))\n               handle.send(reply + 'false');\n             else {\n               const conn = new WebWindowHandle(handle.kind);\n\n               // set interim receiver until first message arrives\n               conn.setReceiver({\n                  cpainter: this,\n\n                  onWebsocketOpened() {\n                  },\n\n                  onWebsocketMsg(panel_handle, msg) {\n                     const panel_name = (msg.indexOf('SHOWPANEL:') === 0) ? msg.slice(10) : '';\n                     this.cpainter.showUI5Panel(panel_name, panel_handle)\n                                  .then(res => handle.send(reply + (res ? 'true' : 'false')));\n                  },\n\n                  onWebsocketClosed() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  },\n\n                  onWebsocketError() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  }\n\n               });\n\n               let addr = handle.href;\n               if (relative_path.indexOf('../') === 0) {\n                  const ddd = addr.lastIndexOf('/', addr.length-2);\n                  addr = addr.slice(0, ddd) + relative_path.slice(2);\n               } else\n                  addr += relative_path;\n\n               // only when connection established, panel will be activated\n               conn.connect(addr);\n            }\n         } else {\n            console.log('Unrecognized command ' + cmd);\n            handle.send(reply);\n         }\n      } else if ((msg.slice(0, 7) === 'DXPROJ:') || (msg.slice(0, 7) === 'DYPROJ:')) {\n         const kind = msg[1],\n             hist = parse(msg.slice(7));\n         this.drawProjection(kind, hist);\n      } else if (msg.slice(0, 5) === 'SHOW:') {\n         const that = msg.slice(5),\n             on = that[that.length-1] === '1';\n         this.showSection(that.slice(0, that.length-2), on);\n      } else\n         console.log(`unrecognized msg len: ${msg.length} msg: ${msg.slice(0, 30)}`);\n   }\n\n   /** @summary Submit request to RDrawable object on server side */\n   submitDrawableRequest(kind, req, painter, method) {\n      if (!this._websocket || !req || !req._typename ||\n          !painter.snapid || !isStr(painter.snapid)) return null;\n\n      if (kind && method) {\n         // if kind specified - check if such request already was submitted\n         if (!painter._requests) painter._requests = {};\n\n         const prevreq = painter._requests[kind];\n\n         if (prevreq) {\n            const tm = new Date().getTime();\n            if (!prevreq._tm || (tm - prevreq._tm < 5000)) {\n               prevreq._nextreq = req; // submit when got reply\n               return false;\n            }\n            delete painter._requests[kind]; // let submit new request after timeout\n         }\n\n         painter._requests[kind] = req; // keep reference on the request\n      }\n\n      req.id = painter.snapid;\n\n      if (method) {\n         if (!this._nextreqid) this._nextreqid = 1;\n         req.reqid = this._nextreqid++;\n      } else\n         req.reqid = 0; // request will not be replied\n\n\n      const msg = JSON.stringify(req);\n\n      if (req.reqid) {\n         req._kind = kind;\n         req._painter = painter;\n         req._method = method;\n         req._tm = new Date().getTime();\n\n         if (!this._submreq) this._submreq = {};\n         this._submreq[req.reqid] = req; // fast access to submitted requests\n      }\n\n      // console.log('Sending request ', msg.slice(0,60));\n\n      this.sendWebsocket('REQ:' + msg);\n      return req;\n   }\n\n   /** @summary Submit menu request\n     * @private */\n   async submitMenuRequest(painter, menukind, reqid) {\n      return new Promise(resolveFunc => {\n         this.submitDrawableRequest('', {\n            _typename: `${nsREX}RDrawableMenuRequest`,\n            menukind: menukind || '',\n            menureqid: reqid // used to identify menu request\n         }, painter, resolveFunc);\n      });\n   }\n\n   /** @summary Submit executable command for given painter */\n   submitExec(painter, exec, subelem) {\n      // snapid is intentionally ignored - only painter.snapid has to be used\n      if (!this._websocket) return;\n\n      if (subelem && isStr(subelem)) {\n         const len = subelem.length;\n         if ((len > 2) && (subelem.indexOf('#x') === len - 2)) subelem = 'x'; else\n         if ((len > 2) && (subelem.indexOf('#y') === len - 2)) subelem = 'y'; else\n         if ((len > 2) && (subelem.indexOf('#z') === len - 2)) subelem = 'z';\n\n         if ((subelem === 'x') || (subelem === 'y') || (subelem === 'z'))\n            exec = subelem + 'axis#' + exec;\n         else\n            return console.log(`not recoginzed subelem ${subelem} in SubmitExec`);\n       }\n\n      this.submitDrawableRequest('', { _typename: `${nsREX}RDrawableExecRequest`, exec }, painter);\n   }\n\n   /** @summary Process reply from request to RDrawable */\n   processDrawableReply(msg) {\n      const reply = parse(msg);\n      if (!reply || !reply.reqid || !this._submreq) return false;\n\n      const req = this._submreq[reply.reqid];\n      if (!req) return false;\n\n      // remove reference first\n      delete this._submreq[reply.reqid];\n\n      // remove blocking reference for that kind\n      if (req._kind && req._painter?._requests) {\n         if (req._painter._requests[req._kind] === req)\n            delete req._painter._requests[req._kind];\n      }\n\n      if (req._method)\n         req._method(reply, req);\n\n      // resubmit last request of that kind\n      if (req._nextreq && !req._painter._requests[req._kind])\n         this.submitDrawableRequest(req._kind, req._nextreq, req._painter, req._method);\n   }\n\n   /** @summary Show specified section in canvas */\n   async showSection(that, on) {\n      switch (that) {\n         case 'Menu': break;\n         case 'StatusBar': break;\n         case 'Editor': break;\n         case 'ToolBar': break;\n         case 'ToolTips': this.setTooltipAllowed(on); break;\n      }\n      return true;\n   }\n\n   /** @summary Method informs that something was changed in the canvas\n     * @desc used to update information on the server (when used with web6gui)\n     * @private */\n   processChanges(kind, painter, subelem) {\n      // check if we could send at least one message more - for some meaningful actions\n      if (!this._websocket || !this._websocket.canSend(2) || !isStr(kind)) return;\n\n      const msg = '';\n      if (!painter) painter = this;\n      switch (kind) {\n         case 'sbits':\n            console.log('Status bits in RCanvas are changed - that to do?');\n            break;\n         case 'frame': // when moving frame\n         case 'zoom':  // when changing zoom inside frame\n            console.log('Frame moved or zoom is changed - that to do?');\n            break;\n         case 'pave_moved':\n            console.log('TPave is moved inside RCanvas - that to do?');\n            break;\n         default:\n            if ((kind.slice(0, 5) === 'exec:') && painter?.snapid)\n               this.submitExec(painter, kind.slice(5), subelem);\n             else\n               console.log('UNPROCESSED CHANGES', kind);\n      }\n\n      if (msg)\n         console.log('RCanvas::processChanges want to send  ' + msg.length + '  ' + msg.slice(0, 40));\n   }\n\n   /** @summary Handle pad button click event\n     * @private */\n   clickPadButton(funcname, evnt) {\n      if (funcname === 'ToggleGed')\n         return this.activateGed(this, null, 'toggle');\n      if (funcname === 'ToggleStatus')\n         return this.activateStatusBar('toggle');\n      return super.clickPadButton(funcname, evnt);\n   }\n\n   /** @summary returns true when event status area exist for the canvas */\n   hasEventStatus() {\n      if (this.testUI5()) return false;\n      if (this.brlayout)\n         return this.brlayout.hasStatus();\n      const hp = getHPainter();\n      return hp ? hp.hasStatusLine() : false;\n   }\n\n   /** @summary Check if status bar can be toggled\n     * @private */\n   canStatusBar() {\n      return this.testUI5() || this.brlayout || getHPainter();\n   }\n\n   /** @summary Show/toggle event status bar\n     * @private */\n   activateStatusBar(state) {\n      if (this.testUI5())\n         return;\n      if (this.brlayout)\n         this.brlayout.createStatusLine(23, state);\n      else\n         getHPainter()?.createStatusLine(23, state);\n\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Show online canvas status\n     * @private */\n   showCanvasStatus(...msgs) {\n      if (this.testUI5()) return;\n\n      const br = this.brlayout || getHPainter()?.brlayout;\n\n      br?.showStatus(...msgs);\n   }\n\n   /** @summary Returns true if GED is present on the canvas */\n   hasGed() {\n      if (this.testUI5()) return false;\n      return this.brlayout?.hasContent() ?? false;\n   }\n\n   /** @summary Function used to de-activate GED\n     * @private */\n   removeGed() {\n      if (this.testUI5()) return;\n\n      this.registerForPadEvents(null);\n\n      if (this.ged_view) {\n         this.ged_view.getController().cleanupGed();\n         this.ged_view.destroy();\n         delete this.ged_view;\n      }\n      this.brlayout?.deleteContent(true);\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Get view data for ui5 panel\n     * @private */\n   getUi5PanelData(/* panel_name */) {\n      return { jsroot: { settings, create, parse, toJSON, loadScript, EAxisBits, getColorExec } };\n   }\n\n   /** @summary Function used to activate GED\n     * @return {Promise} when GED is there\n     * @private */\n   async activateGed(objpainter, kind, mode) {\n      if (this.testUI5() || !this.brlayout)\n         return false;\n\n      if (this.brlayout.hasContent()) {\n         if ((mode === 'toggle') || (mode === false))\n            this.removeGed();\n         else\n            objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n         return true;\n      }\n\n      if (mode === false)\n         return false;\n\n      const btns = this.brlayout.createBrowserBtns();\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.diamand, 15, 'toggle fix-pos mode', 'browser')\n                  .style('margin', '3px').on('click', () => this.brlayout.toggleKind('fix'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.circle, 15, 'toggle float mode', 'browser')\n                  .style('margin', '3px').on('click', () => this.brlayout.toggleKind('float'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.cross, 15, 'delete GED', 'browser')\n                  .style('margin', '3px').on('click', () => this.removeGed());\n\n      // be aware, that jsroot_browser_hierarchy required for flexible layout that element use full browser area\n      this.brlayout.setBrowserContent('<div class=\\'jsroot_browser_hierarchy\\' id=\\'ged_placeholder\\'>Loading GED ...</div>');\n      this.brlayout.setBrowserTitle('GED');\n      this.brlayout.toggleBrowserKind(kind || 'float');\n\n      return new Promise(resolveFunc => {\n         loadOpenui5.then(sap => {\n            d3_select('#ged_placeholder').text('');\n\n            sap.ui.require(['sap/ui/model/json/JSONModel', 'sap/ui/core/mvc/XMLView'], (JSONModel, XMLView) => {\n               const oModel = new JSONModel({ handle: null });\n\n               XMLView.create({\n                  viewName: 'rootui5.canv.view.Ged',\n                  viewData: this.getUi5PanelData('Ged')\n               }).then(oGed => {\n                  oGed.setModel(oModel);\n\n                  oGed.placeAt('ged_placeholder');\n\n                  this.ged_view = oGed;\n\n                  // TODO: should be moved into Ged controller - it must be able to detect canvas painter itself\n                  this.registerForPadEvents(oGed.getController().padEventsReceiver.bind(oGed.getController()));\n\n                  objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n                  this.processChanges('sbits', this);\n\n                  resolveFunc(true);\n               });\n            });\n         });\n      });\n   }\n\n   /** @summary produce JSON for RCanvas, which can be used to display canvas once again\n     * @private */\n   produceJSON() {\n      console.error('RCanvasPainter.produceJSON not yet implemented');\n      return '';\n   }\n\n   /** @summary resize browser window to get requested canvas sizes */\n   resizeBrowser(fullW, fullH) {\n      if (!fullW || !fullH || this.isBatchMode() || this.embed_canvas || this.batch_mode)\n         return;\n      this._websocket?.resizeWindow(fullW, fullH);\n   }\n\n   /** @summary draw RCanvas object */\n   static async draw(dom, can /*, opt */) {\n      const nocanvas = !can;\n      if (nocanvas)\n         can = create(`${nsREX}RCanvas`);\n\n      const painter = new RCanvasPainter(dom, can);\n      painter.normal_canvas = !nocanvas;\n      painter.createCanvasSvg(0);\n\n      selectActivePad({ pp: painter, active: false });\n\n      return painter.drawPrimitives().then(() => {\n         painter.addPadInteractive();\n         painter.addPadButtons();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RCanvasPainter\n\n\n/** @summary draw RPadSnapshot object\n  * @private */\nfunction drawRPadSnapshot(dom, snap /*, opt */) {\n   const painter = new RCanvasPainter(dom, null);\n   painter.normal_canvas = false;\n   painter.batch_mode = isBatchMode();\n   return painter.syncDraw(true).then(() => painter.redrawPadSnap(snap)).then(() => {\n      painter.confirmDraw();\n      painter.showPadButtons();\n      return painter;\n   });\n}\n\n/** @summary Ensure RCanvas and RFrame for the painter object\n  * @param {Object} painter  - painter object to process\n  * @param {string|boolean} frame_kind  - false for no frame or '3d' for special 3D mode\n  * @desc Assigns DOM, creates and draw RCanvas and RFrame if necessary, add painter to pad list of painters\n  * @return {Promise} for ready\n  * @private */\nasync function ensureRCanvas(painter, frame_kind) {\n   if (!painter)\n      return Promise.reject(Error('Painter not provided in ensureRCanvas'));\n\n   // simple check - if canvas there, can use painter\n   const pr = painter.getCanvSvg().empty() ? RCanvasPainter.draw(painter.getDom(), null /* noframe */) : Promise.resolve(true);\n\n   return pr.then(() => {\n      if ((frame_kind !== false) && painter.getFrameSvg().selectChild('.main_layer').empty())\n         return RFramePainter.draw(painter.getDom(), null, isStr(frame_kind) ? frame_kind : '');\n   }).then(() => {\n      painter.addToPadPrimitives();\n      return painter;\n   });\n}\n\n\n/** @summary Function used for direct draw of RFrameTitle\n  * @private */\nfunction drawRFrameTitle(reason, drag) {\n   const fp = this.getFramePainter();\n   if (!fp)\n      return console.log('no frame painter - no title');\n\n   const rect = fp.getFrameRect(),\n         fx = rect.x,\n         fy = rect.y,\n         fw = rect.width,\n         // fh           = rect.height,\n         ph = this.getPadPainter().getPadHeight(),\n         title = this.getObject(),\n         title_width = fw,\n         textFont = this.v7EvalFont('text', { size: 0.07, color: 'black', align: 22 });\n   let title_margin = this.v7EvalLength('margin', ph, 0.02),\n       title_height = this.v7EvalLength('height', ph, 0.05);\n\n   if (reason === 'drag') {\n      title_height = drag.height;\n      title_margin = fy - drag.y - drag.height;\n      const changes = {};\n      this.v7AttrChange(changes, 'margin', title_margin / ph);\n      this.v7AttrChange(changes, 'height', title_height / ph);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n   }\n\n   this.createG();\n\n   makeTranslate(this.draw_g, fx, Math.round(fy-title_margin-title_height));\n\n   const arg = { x: title_width/2, y: title_height/2, text: title.fText, latex: 1 };\n\n   this.startTextDrawing(textFont, 'font');\n\n   this.drawText(arg);\n\n   return this.finishTextDrawing().then(() =>\n      addDragHandler(this, { x: fx, y: Math.round(fy-title_margin-title_height), width: title_width, height: title_height,\n                             minwidth: 20, minheight: 20, no_change_x: true, redraw: d => this.redraw('drag', d) })\n   );\n}\n\n/// /////////////////////////////////////////////////////////////////////////////////////////\n\nregisterMethods(`${nsREX}RPalette`, {\n\n   extractRColor(rcolor) {\n     return rcolor.fColor || 'black';\n   },\n\n   getColor(indx) {\n      return this.palette[indx];\n   },\n\n   getContourIndex(zc) {\n      const cntr = this.fContour;\n      let l = 0, r = cntr.length-1, mid;\n\n      if (zc < cntr[0]) return -1;\n      if (zc >= cntr[r]) return r-1;\n\n      if (this.fCustomContour) {\n         while (l < r-1) {\n            mid = Math.round((l+r)/2);\n            if (cntr[mid] > zc) r = mid; else l = mid;\n         }\n         return l;\n      }\n\n      // last color in palette starts from level cntr[r-1]\n      return Math.floor((zc-cntr[0]) / (cntr[r-1] - cntr[0]) * (r-1));\n   },\n\n   getContourColor(zc) {\n      const zindx = this.getContourIndex(zc);\n      return (zindx < 0) ? '' : this.getColor(zindx);\n   },\n\n   getContour() {\n      return this.fContour && (this.fContour.length > 1) ? this.fContour : null;\n   },\n\n   deleteContour() {\n      delete this.fContour;\n   },\n\n   calcColor(value, entry1, entry2) {\n      const dist = entry2.fOrdinal - entry1.fOrdinal,\n          r1 = entry2.fOrdinal - value,\n          r2 = value - entry1.fOrdinal;\n\n      if (!this.fInterpolate || (dist <= 0))\n         return (r1 < r2) ? entry2.fColor : entry1.fColor;\n\n      // interpolate\n      const col1 = d3_rgb(this.extractRColor(entry1.fColor)),\n          col2 = d3_rgb(this.extractRColor(entry2.fColor)),\n          color = d3_rgb(Math.round((col1.r*r1 + col2.r*r2)/dist),\n                         Math.round((col1.g*r1 + col2.g*r2)/dist),\n                         Math.round((col1.b*r1 + col2.b*r2)/dist));\n\n      return color.toString();\n   },\n\n   createPaletteColors(len) {\n      const arr = [];\n      let indx = 0;\n\n      while (arr.length < len) {\n         const value = arr.length / (len-1),\n\n          entry = this.fColors[indx];\n\n         if ((Math.abs(entry.fOrdinal - value) < 0.0001) || (indx === this.fColors.length - 1)) {\n            arr.push(this.extractRColor(entry.fColor));\n            continue;\n         }\n\n         const next = this.fColors[indx+1];\n         if (next.fOrdinal <= value)\n            indx++;\n         else\n            arr.push(this.calcColor(value, entry, next));\n      }\n\n      return arr;\n   },\n\n   getColorOrdinal(value) {\n      // extract color with ordinal value between 0 and 1\n      if (!this.fColors)\n         return 'black';\n      if ((typeof value !== 'number') || (value < 0))\n         value = 0;\n      else if (value > 1)\n         value = 1;\n\n      // TODO: implement better way to find index\n\n      let entry, next = this.fColors[0];\n      for (let indx = 0; indx < this.fColors.length-1; ++indx) {\n         entry = next;\n\n         if (Math.abs(entry.fOrdinal - value) < 0.0001)\n            return this.extractRColor(entry.fColor);\n\n         next = this.fColors[indx+1];\n         if (next.fOrdinal > value)\n            return this.calcColor(value, entry, next);\n      }\n\n      return this.extractRColor(next.fColor);\n   },\n\n   setFullRange(min, max) {\n      // set full z scale range, used in zooming\n      this.full_min = min;\n      this.full_max = max;\n   },\n\n   createContour(logz, nlevels, zmin, zmax, zminpositive) {\n      this.fContour = [];\n      delete this.fCustomContour;\n      this.colzmin = zmin;\n      this.colzmax = zmax;\n\n      if (logz) {\n         if (this.colzmax <= 0) this.colzmax = 1.0;\n         if (this.colzmin <= 0) {\n            if ((zminpositive === undefined) || (zminpositive <= 0))\n               this.colzmin = 0.0001*this.colzmax;\n            else\n               this.colzmin = ((zminpositive < 3) || (zminpositive>100)) ? 0.3*zminpositive : 1;\n         }\n         if (this.colzmin >= this.colzmax)\n            this.colzmin = 0.0001*this.colzmax;\n\n         const logmin = Math.log(this.colzmin)/Math.log(10),\n             logmax = Math.log(this.colzmax)/Math.log(10),\n             dz = (logmax-logmin)/nlevels;\n         this.fContour.push(this.colzmin);\n         for (let level=1; level<nlevels; level++)\n            this.fContour.push(Math.exp((logmin + dz*level)*Math.log(10)));\n         this.fContour.push(this.colzmax);\n         this.fCustomContour = true;\n      } else {\n         if ((this.colzmin === this.colzmax) && (this.colzmin !== 0)) {\n            this.colzmax += 0.01*Math.abs(this.colzmax);\n            this.colzmin -= 0.01*Math.abs(this.colzmin);\n         }\n         const dz = (this.colzmax-this.colzmin)/nlevels;\n         for (let level=0; level<=nlevels; level++)\n            this.fContour.push(this.colzmin + dz*level);\n      }\n\n      if (!this.palette || (this.palette.length !== nlevels))\n         this.palette = this.createPaletteColors(nlevels);\n   }\n\n});\n\n/** @summary draw RFont object\n  * @private */\nfunction drawRFont() {\n   const font = this.getObject(),\n         svg = this.getCanvSvg(),\n         clname = 'custom_font_' + font.fFamily+font.fWeight+font.fStyle;\n   let defs = svg.selectChild('.canvas_defs');\n\n   if (defs.empty())\n      defs = svg.insert('svg:defs', ':first-child').attr('class', 'canvas_defs');\n\n   let entry = defs.selectChild('.' + clname);\n   if (entry.empty()) {\n      entry = defs.append('style')\n                  .attr('type', 'text/css')\n                  .attr('class', clname)\n                  .text(`@font-face { font-family: \"${font.fFamily}\"; font-weight: ${font.fWeight ? font.fWeight : 'normal'}; font-style: ${font.fStyle ? font.fStyle : 'normal'}; src: ${font.fSrc}; }`);\n      const p1 = font.fSrc.indexOf('base64,'),\n            p2 = font.fSrc.lastIndexOf(' format(');\n      if (p1 > 0 && p2 > p1) {\n         const base64 = font.fSrc.slice(p1 + 7, p2 - 2),\n               is_ttf = font.fSrc.indexOf('data:application/font-ttf') > 0;\n         // TODO: for the moment only ttf format supported by jsPDF\n         if (is_ttf)\n            entry.property('$fonthandler', { name: font.fFamily, format: 'ttf', base64 });\n      }\n   }\n\n   if (font.fDefault)\n      this.getPadPainter()._dfltRFont = font;\n\n   return true;\n}\n\n/** @summary draw RAxis object\n  * @private */\nfunction drawRAxis(dom, obj, opt) {\n   const painter = new RAxisPainter(dom, obj, opt);\n   painter.disable_zooming = true;\n   return ensureRCanvas(painter, false)\n           .then(() => painter.redraw())\n           .then(() => painter);\n}\n\n/** @summary draw RFrame object\n  * @private */\nfunction drawRFrame(dom, obj, opt) {\n   const p = new RFramePainter(dom, obj);\n   if (opt === '3d') p.mode3d = true;\n   return ensureRCanvas(p, false).then(() => p.redraw());\n}\n\nexport { ensureRCanvas, drawRPadSnapshot,\n         drawRFrameTitle, drawRFont, drawRAxis, drawRFrame,\n         RObjectPainter, RPadPainter, RCanvasPainter };\n"],"x_google_ignoreList":[0,1,2,3,4,5,6]}