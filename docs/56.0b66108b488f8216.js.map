{"version":3,"file":"56.0b66108b488f8216.js","mappings":"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","names":["RObjectPainter","ObjectPainter","constructor","dom","obj","opt","csstype","super","this","v7EvalAttr","name","dflt","getObject","cssprefix","type_check","res","undefined","typ1","typ2","parseFloat","fAttr","m","value","v","rstyle","fBlocks","blks","k","length","block","selector","fId","fCssClass","map","toLowerCase","v7SetAttr","v7EvalLength","sizepx","Math","round","norm","px","val","operand","pos","console","log","slice","Number","isFinite","v7EvalColor","isStr","pp","getPadPainter","_auto_color_cnt","pal","getHistPalette","cnt","num","_num_primitives","getColorOrdinal","_auto_colors","error","ordinal","v7EvalFont","dflts","fontScale","size","rfont","_dfltRFont","fFamily","fStyle","fWeight","text_size","text_angle","text_align","align","text_color","color","font_family","font_style","font_weight","getPadHeight","handler","FontHandler","setAngle","setAlign","setColor","createv7AttFill","prefix","pattern","createAttFill","color_as_svg","createv7AttLine","width","style","createAttLine","lineatt","setBorder","createv7AttMarker","refsize","createAttMarker","v7AttrChange","req","kind","snapid","_typename","ids","names","values","update","push","parseInt","JSON","stringify","v7SendAttrChanges","do_update","canp","getCanvPainter","v7SubmitRequest","method","isFunc","submitDrawableRequest","_pending_request","assignSnapId","id","p","v7CommMode","_websocket","v7NormalMode","v7OfflineMode","RAxisPainter","arg1","axis","Object","assign","AxisPainterMethods","initAxisPainter","embedded","cleanup","axis_g","cleanupAxisPainter","getAxisType","configureZAxis","fp","_log","logbase","abs","exp","logz","configureAxis","min","max","smin","smax","vertical","frame_range","axis_range","opts","full_min","full_max","_symlog","reverse","timeoffset","toffset","fLabelsIndex","own_labels","labels","func","d3_scaleTime","domain","convertDate","symlog","d3_scaleSymlog","constant","d3_scaleLog","base","d3_scaleLinear","scale_min","scale_max","gr_range","range","axis_shift","gr","format","ndiv","nticks","nticks2","nticks3","floor","scale_range","tf1","tf2","chooseTimeFormat","tfunc1","tfunc2","d3_timeFormat","formatTime","noexp","moreloglabels","formatLog","formatLabels","order","ndig","formatNormal","getScaleMin","getScaleMax","d","indx","fNBinsNoOver","i","pair","second","first","fLabels","createTicks","only_major_as_array","optionNoexp","optionNoopt","optionInt","noticksopt","handle","nminor","nmiddle","nmajor","minor","middle","major","produceTicks","delta","unshift","reset","next","doround","tick","grpos","last_major","next_major_grpos","maxorder","minorder","exclorder3","maxtick","mintick","ord1","log10","ord2","bestorder","bestndig","bestlen","lbls","totallen","lbl","indexOf","warn","isCenteredLabels","processLabelsMove","arg","optionUnlab","label_g","select","box","node","getBBox","append","classed","attr","x","y","height","drag_pos0","offset","property","remove","side","labelsOffset","changeAxisAttr","scalingSize","addTitleDrag","title_g","settings","isBatchMode","acc_x","acc_y","new_x","new_y","alt_pos","curr_indx","drag_rect","drag_move","d3_drag","subject","on","evnt","sourceEvent","preventDefault","stopPropagation","title_length","titlePos","off","swap","isReverseAxis","title_align","isTitleRotated","dx","dy","set_x","set_y","besti","basepos","titleOffset","call","isInsideGrRange","delta1","delta2","getGrRange","drawMainLine","ending","endingSize","endingStyle","sz","sz7","drawTicks","main_draw","ticks","ticks_plusminus","ticksSide","h1","ticksSize","h2","startingSize","ticksColor","ticksWidth","gap0","gap","drawLabels","gaps","center_lbls","_this","rotate_lbls","labelsFont","angle","textscale","maxtextlen","lbls_tilt","lbl_pos","max_lbl_width","max_lbl_height","process_drawtext_ready","painter","result_width","result_height","textwidth","maxwidth","gap_before","gap_after","scale","scaleTextDrawing","lastpos","fix_offset","fix_coord","startTextDrawing","text","latex","draw_g","post_process","drawText","axis_step","has_obstacle","formatExp","finishTextDrawing","then","selectAll","each","txt","d3_select","tr","tilt_height","sin","PI","cos","addZoomingRect","lgaps","disable_zooming","titleFont","drawTitle","_this2","fTitle","title_shift_x","title_shift_y","title_basepos","rotated","titleCenter","titleOpposite","extractDrawAttributes","rect","getPadRect","roundAngle","maxTickSize","drawAxis","layer","transform","_this3","standalone","empty","tgaps","Promise","resolve","setAfterDrawHandler","_afterDrawAgain","drawAxisAgain","drawAxisOtherPlace","only_ticks","zoomStandalone","redraw","drawable","getCoordinate","fPos","len","getPadLength","fVertical","fLength","labels_len","createG","promise","createMenu","menu","add","fillAxisContextMenu","show","addDragHandler","only_move","positionChanged","d3_pointer","item","analyzeWheelEvent","changed","drag","xn","yn","fHoriz","fArr","fVert","submitCanvExec","toFixed","redraw_mode","changes","arguments","redrawPad","changeAxisLog","getFramePainter","unzoom","addchk","input","addRColorMenu","col","addSizeMenu","addSelectMenu","addRAttrTextItems","noangle","noalign","change","t","flag","RFramePainter","tframe","mode3d","xmin","xmax","ymin","ymax","axes_drawn","keys_handler","projection","v7_frame","is_root6","setFrameActive","enabledKeys","control","enableKeys","setLastEventPos","pnt","fLastEventPnt","getLastEventPos","updateAttributes","force","fX1NDC","modified_NDC","fY1NDC","fX2NDC","fY2NDC","fillatt","getProjectionFunc","l","b","DegToRad","alpha2","r2","sqrt","f","cdec","denom","tan","recalculateRange","Proj","scale_ymin","scale_ymax","pnts","scale_xmin","scale_xmax","original_xmin","original_xmax","original_ymin","original_ymax","n","drawGrids","getFrameSvg","h","getFrameHeight","w","getFrameWidth","gridx","gridy","grid_style","getSvgLineStyle","gStyle","grid_color","getColor","x_handle","draw_grid","grid","swap_xy","y_handle","axisAsText","toUpperCase","toPrecision","_setAxisRange","vmin","vmax","nmin","nmax","nzmin","nzmax","zoomChangedInteractive","setAxesRanges","xaxis","yaxis","zaxis","zmin","zmax","setAxes2Ranges","second_x","second_y","x2axis","y2axis","createXY","self_drawaxes","cleanXY","v6axes","reverse_x","reverse_y","logx","logy","extra_y_space","zoom_ymin","zoom_ymax","zoom_xmin","zoom_xmax","clTAxis","create","TAxisPainter","getDom","setPadName","getPadName","symlog_y","symlog_x","logcheckmin","logminfactor","assignFrameMembers","ndim","log_min_nz","ymin_nz","hasDrawnAxes","drawAxes","ticksx","ticksy","sidex","sidey","cleanupAxes","draw_swapside","draw_ticks","z_handle","pr","draw_horiz","draw_vertical","_fast_drawing","can_adjust_frame","disable_x_draw","disable_y_draw","disable_ticks","pr1","invert_side","pr2","_frame_x","all","arr","drawAxes2","zoom_x2min","zoom_x2max","scale_x2min","scale_x2max","x2min","x2max","x2_handle","zoom_y2min","zoom_y2max","scale_y2min","scale_y2max","y2min","y2max","y2_handle","getGrFuncs","use_x2","grx2","use_y2","gry2","grx","gry","revertAxis","sizeChanged","clean","grname","cleanFrameDrawings","create3DScene","window","removeEventListener","_click_handler","_dblclick_handler","frame_painter_ref","trans","top_rect","main_svg","lm","tm","rotate","fixpos","options","RotateFrame","FixFrame","_frame_y","_frame_width","_frame_height","_frame_rotate","_frame_fixpos","getLayerSvg","rx","ry","addInteractivity","FrameInteractive","addBasicInteractivity","getFrameRect","hint_delta_x","hint_delta_y","configureUserClickHandler","configureUserDblclickHandler","zoom","zoom_x","zoom_y","zoom_z","unzoom_x","unzoom_y","unzoom_z","r_x","r_y","r_z","is_any_check","flags","checkZooming","canZoomInside","zoom_zmin","zoom_zmax","forEachPainter","ranges","interactiveRedraw","zoomSingle","zoom_v","unzoom_v","isAxisZoomed","dox","doy","doz","_this4","zoom_changed_x","zoom_changed_y","zoom_changed_z","fld","fillObjectOfflineMenu","changeFrameAttr","fillContextMenu","alone","isTooltipAllowed","setTooltipAllowed","addAttributesMenu","saveAs","revertPoint","showAxisStatus","axis_name","hint_name","axis_value","showObjectStatus","addKeysHandler","addFrameKeysHandler","for_second_axes","addFrameInteractivity","setRootPadRange","toggleAxisLog","RPadPainter","pad","iscan","this_pad_name","fObjectID","internals","painters","has_canvas","forEachPainterInPad","isRoot6","svg_this_pad","getPadSvg","getMainPainter","main_painter_ref","setMainPainter","_doing_draw","forEach","svg_p","pads_cache","_pad_x","_pad_y","_pad_width","_pad_height","draw_object","pad_frame","selectActivePad","active","getPadWidth","szx","szy","getRootPad","cleanPrimitives","splice","findPainterFor","selobj","selname","seltype","find","pobj","fName","fDfltPalette","fColors","fOrdinal","fColor","fInterpolate","fNormalized","addMethods","getNumPainters","userfunc","sub","registerForPadEvents","receiver","pad_events_receiver","producePadEvent","what","padpainter","position","place","selectObjectPainter","istoppad","getAbsPosInCanvas","createCanvasSvg","check_resize","new_size","btns","frect","factor","svg","_fixed_size","getCanvSvg","testMainResize","render_to","selectDom","setTopPainter","online_canvas","enlargePad","padContextMenu","fWinSize","getElementRect","alignButtons","svg_can","pad_enlarged","hasObjectsToDraw","enlargeMain","was_fast","checkResize","showPadButtons","createPadSvg","only_resize","svg_parent","pad_name","pad_visible","svg_pad","svg_rect","fSize","color0","fBorderMode","constants","fPrimitives","syncDraw","entry","findIndex","e","resolveFunc","confirmDraw","shift","drawObject","drawPrimitives","_start_tm","Date","getTime","ppainter","isObject","_primitive","spenttm","processPadTooltipEvent","hints","processTooltipEvent","nproc","hint","user_info","changeDarkMode","mode","addSettingsMenu","hasMenuBar","actiavteMenuBar","hasEventStatus","activateStatusBar","fname","fillObjectExecMenu","reason","sync_promise","showsubitems","redrawNext","isPromise","getActivePad","needRedrawByResize","elem","checkCanvasResize","getPromise","updateObject","addObjectPainter","objpainter","lst","extractTObjectProp","snap","fColIndex","fColValue","colors","root_colors","getRootColors","pattr","fObject","assignObject","fCssType","fOption","extract_color","member_name","attr_name","addColor","fLineColor","fLineWidth","fLineStyle","fFillColor","fFillStyle","fMarkerColor","fMarkerStyle","fMarkerSize","fTextColor","fTextAlign","fTextAngle","fTextSize","drawNextSnap","_snaps_map","next_rstyle","fDummy","redrawPadSnap","fDrawable","subpad","decodeOptions","addToPadPrimitives","addPadButtons","prev_name","selectCurrentPad","webSnapIds","kNone","kObject","kColors","kStyle","kPalette","fKind","ListOfColors","fString","palette","custom_palette","ColorPalette","$dummy","findSnap","onlyid","check","checkid","embed_canvas","document","title","batch_mode","mainid","use_openui","brlayout","BrowserLayout","setDom","drawing_divid","registerForResize","isanyfound","isanyremove","prim","removePadButtons","createImage","btoa_func","_this5","produceImage","separ","itemContextMenu","rrr","getBoundingClientRect","clientX","left","clientY","top","setTimeout","selkind","selp","isInteger","full_canvas","filename","imgdata","saveFile","encodeURIComponent","findActivePad","file_format","use_frame","_this6","items","prnt","btns_node","btns_prnt","parentNode","btns_next","nextSibling","main","render3D","access3dKind","can3d","sz2","getSizeFor3d","canvas","renderer","domElement","dataUrl","toDataURL","foreign","clname","svg_frame","frame_node","frame_next","img","insert","reconstruct","insertBefore","innerHTML","compressSVG","image","Image","onload","createElement","getContext","drawImage","onerror","src","data","replace","match","p1","c","String","fromCharCode","decodeURIComponent","reEncode","clickPadButton","funcname","closeMenu","getDimension","shown","done","clickButton","addPadButton","btn","tooltip","keyname","_buttons","cp","is_online","PadButtonsHandler","frame_painter","sign","getV","getRect","user","DrawOptions","GlobalColors","LocalColors","IgnorePalette","fLogx","fLogy","fLogz","fGridx","fGridy","fTickx","fTicky","static","matchObjectType","clTPad","LongPollSocket","addr","_raw","_args","path","connid","raw","args","nextRequest","url","reqmode","post","browser","createHttpRequest","processRequest","str","u8Arr","Uint8Array","trim","getResponseHeader","extra_hdr","send","_offset","onclose","dummy_tmout","onopen","onmessage","close","FileDumpSocket","protocol","httpRequest","getProtocol","parse","nextOperation","wait_for_file","provideData","WebWindowHandle","socket_kind","credits","state","cansend","ackn","getUserArgs","field","user_args","setUserArgs","setReceiver","invokeReceiver","brdcst","arg2","channels","ks","keys","chid","_msg","_len","wait_first_recv","channel","force_queue","msgqueue","ready","msg","reserveQueueItem","markQueueItemDone","processQueue","_loop_msgqueue","front","master","channelid","timerid","clearTimeout","canSend","numsend","getRelCanSend","keepAlive","inject","immediate","bind","Array","isArray","createChannel","freechannelid","getChannelId","setHRef","href","getHRef","relative_path","ddd","lastIndexOf","connect","ntry","key","token","retry_open","first_time","toString","location","showProgress","WebSocket","next_binary","binchid","Blob","reader","FileReader","qitem","event","target","result","readAsArrayBuffer","i1","credit","i2","i3","newkey","sessionStorage","setItem","reload","ArrayBuffer","err","askReload","addReloadKeyHandler","addEventListener","ctrlKey","RCanvasPainter","tooltip_allowed","v7canvas","_submreq","_changed_layout","setLayoutKind","getLayoutKind","origin","main_selector","changeLayout","layout_kind","sidebar","firstChild","removeChild","html","appendChild","GridDisplay","getGridFrame","resize","toggleProjection","proj_painter","showUI5ProjectionArea","layout","drawProjection","drawInSidePanel","canv","testUI5","showMessage","saveCanvasAsFile","sendWebsocket","sendSaveCommand","closeWebsocket","useWebsocket","onWebsocketOpened","onWebsocketClosed","closeCurrentWindow","onWebsocketMsg","redrawObject","processDrawableReply","cmdid","cmd","reply","showUI5Panel","conn","cpainter","panel_handle","panel_name","onWebsocketError","hist","that","showSection","_requests","prevreq","_tm","_nextreq","_nextreqid","reqid","_kind","_painter","_method","submitMenuRequest","menukind","menureqid","submitExec","exec","subelem","processChanges","activateGed","hasStatus","hp","getHPainter","hasStatusLine","createStatusLine","showCanvasStatus","msgs","showStatus","hasGed","hasContent","removeGed","ged_view","getController","cleanupGed","destroy","deleteContent","getUi5PanelData","jsroot","core","toJSON","loadScript","EAxisBits","getColorExec","createBrowserBtns","ToolbarIcons","toggleKind","setBrowserContent","setBrowserTitle","toggleBrowserKind","loadOpenui5","sap","ui","define","JSONModel","XMLView","oModel","viewName","viewData","oGed","setModel","placeAt","padEventsReceiver","produceJSON","can","nocanvas","normal_canvas","drawRPadSnapshot","ensureRCanvas","_x","frame_kind","draw","reject","Error","apply","drawRFrameTitle","fx","fy","fw","ph","title_margin","title_width","title_height","textFont","fText","minwidth","minheight","no_change_x","drawRFont","font","defs","fSrc","fDefault","drawRAxis","drawRFrame","registerMethods","extractRColor","rcolor","getContourIndex","zc","mid","cntr","fContour","r","fCustomContour","getContourColor","zindx","getContour","deleteContour","calcColor","entry1","entry2","dist","r1","col1","d3_rgb","col2","g","createPaletteColors","setFullRange","createContour","nlevels","zminpositive","colzmin","colzmax","logmin","dz","level"],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/base/RObjectPainter.mjs","../node_modules/jsroot/modules/gpad/RAxisPainter.mjs","../node_modules/jsroot/modules/gpad/RFramePainter.mjs","../node_modules/jsroot/modules/gpad/RPadPainter.mjs","../node_modules/jsroot/modules/webwindow.mjs","../node_modules/jsroot/modules/gpad/RCanvasPainter.mjs"],"sourcesContent":["import { isStr, isFunc } from '../core.mjs';\nimport { FontHandler } from './FontHandler.mjs';\nimport { ObjectPainter } from './ObjectPainter.mjs';\n\n\nconst kNormal = 1, /* kLessTraffic = 2, */ kOffline = 3;\n\nclass RObjectPainter extends ObjectPainter {\n\n   constructor(dom, obj, opt, csstype) {\n      super(dom,obj,opt);\n      this.csstype = csstype;\n   }\n\n   /** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */\n   v7EvalAttr(name, dflt) {\n      let obj = this.getObject();\n      if (!obj) return dflt;\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      const type_check = res => {\n         if (dflt === undefined) return res;\n         let typ1 = typeof dflt, typ2 = typeof res;\n         if (typ1 == typ2) return res;\n         if (typ1 == 'boolean') {\n            if (typ2 == 'string') return (res != '') && (res != '0') && (res != 'no') && (res != 'off');\n            return !!res;\n         }\n         if ((typ1 == 'number') && (typ2 == 'string'))\n            return parseFloat(res);\n         return res;\n      };\n\n      if (obj.fAttr && obj.fAttr.m) {\n         let value = obj.fAttr.m[name];\n         if (value) return type_check(value.v); // found value direct in attributes\n      }\n\n      if (this.rstyle && this.rstyle.fBlocks) {\n         let blks = this.rstyle.fBlocks;\n         for (let k = 0; k < blks.length; ++k) {\n            let block = blks[k],\n                match = (this.csstype && (block.selector == this.csstype)) ||\n                        (obj.fId && (block.selector == ('#' + obj.fId))) ||\n                        (obj.fCssClass && (block.selector == ('.' + obj.fCssClass)));\n\n            if (match && block.map && block.map.m) {\n               let value = block.map.m[name.toLowerCase()];\n               if (value) return type_check(value.v);\n            }\n         }\n      }\n\n      return dflt;\n   }\n\n   /** @summary Set v7 attributes value */\n   v7SetAttr(name, value) {\n      let obj = this.getObject();\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      if (obj && obj.fAttr && obj.fAttr.m)\n         obj.fAttr.m[name] = { v: value };\n   }\n\n   /** @summary Decode pad length from string, return pixel value */\n   v7EvalLength(name, sizepx, dflt) {\n      if (sizepx <= 0) sizepx = 1;\n\n      let value = this.v7EvalAttr(name);\n\n      if (value === undefined)\n         return Math.round(dflt*sizepx);\n\n      if (typeof value == 'number')\n         return Math.round(value*sizepx);\n\n      if (value === null)\n         return 0;\n\n      let norm = 0, px = 0, val = value, operand = 0, pos = 0;\n\n      while (val) {\n         // skip empty spaces\n         while ((pos < val.length) && ((val[pos] == ' ') || (val[pos] == '\\t')))\n            ++pos;\n\n         if (pos >= val.length)\n            break;\n\n         if ((val[pos] == '-') || (val[pos] == '+')) {\n            if (operand) {\n               console.log('Fail to parse RPadLength ' + value);\n               return dflt;\n            }\n            operand = (val[pos] == '-') ? -1 : 1;\n            pos++;\n            continue;\n         }\n\n         if (pos > 0) { val = val.slice(pos); pos = 0; }\n\n         while ((pos < val.length) && (((val[pos] >= '0') && (val[pos] <= '9')) || (val[pos] == '.'))) pos++;\n\n         let v = parseFloat(val.slice(0, pos));\n         if (!Number.isFinite(v)) {\n            console.log('Fail to parse RPadLength ' + value);\n            return Math.round(dflt*sizepx);\n         }\n\n         val = val.slice(pos);\n         pos = 0;\n         if (!operand) operand = 1;\n         if (val && (val[0] == '%')) {\n            val = val.slice(1);\n            norm += operand*v*0.01;\n         } else if ((val.length > 1) && (val[0] == 'p') && (val[1] == 'x')) {\n            val = val.slice(2);\n            px += operand*v;\n         } else {\n            norm += operand*v;\n         }\n\n         operand = 0;\n      }\n\n      return Math.round(norm*sizepx + px);\n   }\n\n   /** @summary Evaluate RColor using attribute storage and configured RStyle */\n   v7EvalColor(name, dflt) {\n      let val = this.v7EvalAttr(name, '');\n      if (!val || !isStr(val)) return dflt;\n\n      if (val == 'auto') {\n         let pp = this.getPadPainter();\n         if (pp?._auto_color_cnt !== undefined) {\n            let pal = pp.getHistPalette(),\n                cnt = pp._auto_color_cnt++,\n                num = pp._num_primitives - 1;\n            if (num < 2) num = 2;\n            val = pal ? pal.getColorOrdinal((cnt % num) / num) : 'blue';\n            if (!this._auto_colors) this._auto_colors = {};\n            this._auto_colors[name] = val;\n         } else if (this._auto_colors && this._auto_colors[name]) {\n            val = this._auto_colors[name];\n         } else {\n            console.error(`Autocolor ${name} not defined yet - please check code`);\n            val = '';\n         }\n      } else if (val[0] == '[') {\n         let ordinal = parseFloat(val.slice(1, val.length-1));\n         val = 'black';\n         if (Number.isFinite(ordinal)) {\n             let pp = this.getPadPainter(),\n                 pal = pp?.getHistPalette();\n             if (pal) val = pal.getColorOrdinal(ordinal);\n         }\n      }\n      return val;\n   }\n\n   /** @summary Evaluate RAttrText properties\n     * @return {Object} FontHandler, can be used directly for the text drawing */\n   v7EvalFont(name, dflts, fontScale) {\n\n      if (!dflts) dflts = {}; else\n      if (typeof dflts == 'number') dflts = { size: dflts };\n\n      let pp = this.getPadPainter(),\n          rfont = pp?._dfltRFont || { fFamily: 'Arial', fStyle: '', fWeight: '' },\n          text_size   = this.v7EvalAttr(name + '_size', dflts.size || 12),\n          text_angle  = this.v7EvalAttr(name + '_angle', 0),\n          text_align  = this.v7EvalAttr(name + '_align', dflts.align || 'none'),\n          text_color  = this.v7EvalColor(name + '_color', dflts.color || 'none'),\n          font_family = this.v7EvalAttr(name + '_font_family', rfont.fFamily || 'Arial'),\n          font_style  = this.v7EvalAttr(name + '_font_style', rfont.fStyle || ''),\n          font_weight = this.v7EvalAttr(name + '_font_weight', rfont.fWeight || '');\n\n       if (isStr(text_size)) text_size = parseFloat(text_size);\n       if (!Number.isFinite(text_size) || (text_size <= 0)) text_size = 12;\n       if (!fontScale) fontScale = pp?.getPadHeight() || 100;\n\n       let handler = new FontHandler(null, text_size, fontScale, font_family, font_style, font_weight);\n\n       if (text_angle) handler.setAngle(360 - text_angle);\n       if (text_align !== 'none') handler.setAlign(text_align);\n       if (text_color !== 'none') handler.setColor(text_color);\n\n       return handler;\n    }\n\n   /** @summary Create this.fillatt object based on v7 fill attributes */\n   createv7AttFill(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'fill_';\n\n      let color = this.v7EvalColor(prefix + 'color', ''),\n          pattern = this.v7EvalAttr(prefix + 'style', 0);\n\n      this.createAttFill({ pattern, color,  color_as_svg: true });\n   }\n\n   /** @summary Create this.lineatt object based on v7 line attributes */\n   createv7AttLine(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'line_';\n\n      let color = this.v7EvalColor(prefix + 'color', 'black'),\n          width = this.v7EvalAttr(prefix + 'width', 1),\n          style = this.v7EvalAttr(prefix + 'style', 1),\n          pattern = this.v7EvalAttr(prefix + 'pattern');\n\n      this.createAttLine({ color, width, style, pattern });\n\n      if (prefix == 'border_')\n         this.lineatt.setBorder(this.v7EvalAttr(prefix + 'rx', 0), this.v7EvalAttr(prefix + 'ry', 0));\n   }\n\n    /** @summary Create this.markeratt object based on v7 attributes */\n   createv7AttMarker(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'marker_';\n\n      let color = this.v7EvalColor(prefix + 'color', 'black'),\n          size = this.v7EvalAttr(prefix + 'size', 0.01),\n          style = this.v7EvalAttr(prefix + 'style', 1),\n          refsize = 1;\n      if (size < 1) {\n         let pp = this.getPadPainter();\n         refsize = pp?.getPadHeight() || 100;\n      }\n\n      this.createAttMarker({ color, size, style, refsize });\n   }\n\n   /** @summary Create RChangeAttr, which can be applied on the server side\n     * @private */\n   v7AttrChange(req, name, value, kind) {\n      if (!this.snapid)\n         return false;\n\n      if (!req._typename) {\n         req._typename = 'ROOT::Experimental::RChangeAttrRequest';\n         req.ids = [];\n         req.names = [];\n         req.values = [];\n         req.update = true;\n      }\n\n      if (this.cssprefix) name = this.cssprefix + name;\n      req.ids.push(this.snapid);\n      req.names.push(name);\n      let obj = null;\n\n      if ((value === null) || (value === undefined)) {\n        if (!kind) kind = 'none';\n        if (kind !== 'none') console.error(`Trying to set ${kind} for none value`);\n      }\n\n      if (!kind)\n         switch(typeof value) {\n            case 'number': kind = 'double'; break;\n            case 'boolean': kind = 'boolean'; break;\n         }\n\n      obj = { _typename: 'ROOT::Experimental::RAttrMap::' };\n      switch(kind) {\n         case 'none': obj._typename += 'NoValue_t'; break;\n         case 'boolean': obj._typename += 'BoolValue_t'; obj.v = value ? true : false; break;\n         case 'int': obj._typename += 'IntValue_t'; obj.v = parseInt(value); break;\n         case 'double': obj._typename += 'DoubleValue_t'; obj.v = parseFloat(value); break;\n         default: obj._typename += 'StringValue_t'; obj.v = isStr(value) ? value : JSON.stringify(value); break;\n      }\n\n      req.values.push(obj);\n      return true;\n   }\n\n   /** @summary Sends accumulated attribute changes to server */\n   v7SendAttrChanges(req, do_update) {\n      let canp = this.getCanvPainter();\n      if (canp && req?._typename) {\n         if (do_update !== undefined)\n            req.update = do_update ? true : false;\n         canp.v7SubmitRequest('', req);\n      }\n   }\n\n   /** @summary Submit request to server-side drawable\n    * @param kind defines request kind, only single request a time can be submitted\n    * @param req is object derived from DrawableRequest, including correct _typename\n    * @param method is method of painter object which will be called when getting reply */\n   v7SubmitRequest(kind, req, method) {\n      let canp = this.getCanvPainter();\n      if (!isFunc(canp?.submitDrawableRequest)) return null;\n\n      // special situation when snapid not yet assigned - just keep ref until snapid is there\n      // maybe keep full list - for now not clear if really needed\n      if (!this.snapid) {\n         this._pending_request = { kind, req, method };\n         return req;\n      }\n\n      return canp.submitDrawableRequest(kind, req, this, method);\n   }\n\n   /** @summary Assign snapid to the painter\n     * @desc Overwrite default method */\n   assignSnapId(id) {\n      this.snapid = id;\n      if (this.snapid && this._pending_request) {\n         let p = this._pending_request;\n         this.v7SubmitRequest(p.kind, p.req, p.method);\n         delete this._pending_request;\n      }\n   }\n\n   /** @summary Return communication mode with the server\n     * @desc\n     * kOffline means no server there,\n     * kLessTraffic advise not to send commands if offline functionality available\n     * kNormal is standard functionality with RCanvas on server side */\n   v7CommMode() {\n      let canp = this.getCanvPainter();\n      if (!canp || !canp.submitDrawableRequest || !canp._websocket)\n         return kOffline;\n\n      return kNormal;\n   }\n\n   v7NormalMode() { return this.v7CommMode() == kNormal; }\n\n   v7OfflineMode() { return this.v7CommMode() == kOffline; }\n\n} // class RObjectPainter\n\nexport { RObjectPainter };\n","import { settings, isBatchMode, isFunc } from '../core.mjs';\nimport { select as d3_select, pointer as d3_pointer,\n         drag as d3_drag, timeFormat as d3_timeFormat,\n         scaleTime as d3_scaleTime, scaleSymlog as d3_scaleSymlog,\n         scaleLog as d3_scaleLog, scaleLinear as d3_scaleLinear } from '../d3.mjs';\nimport { AxisPainterMethods, chooseTimeFormat } from './TAxisPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Axis painter for v7\n *\n * @private\n */\n\nclass RAxisPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, arg1, axis, cssprefix) {\n      let drawable = cssprefix ? arg1.getObject() : arg1;\n      super(dom, drawable, '', cssprefix ? arg1.csstype : 'axis');\n      Object.assign(this, AxisPainterMethods);\n      this.initAxisPainter();\n\n      this.axis = axis;\n      if (cssprefix) { // drawing from the frame\n         this.embedded = true; // indicate that painter embedded into the histo painter\n         //this.csstype = arg1.csstype; // for the moment only via frame one can set axis attributes\n         this.cssprefix = cssprefix;\n         this.rstyle = arg1.rstyle;\n      } else {\n         // this.csstype = 'axis';\n         this.cssprefix = 'axis_';\n      }\n   }\n\n   /** @summary cleanup painter */\n   cleanup() {\n      delete this.axis;\n      delete this.axis_g;\n      this.cleanupAxisPainter();\n      super.cleanup();\n   }\n\n   /** @summary Use in GED to identify kind of axis */\n   getAxisType() { return 'RAttrAxis'; }\n\n   /** @summary Configure only base parameters, later same handle will be used for drawing  */\n   configureZAxis(name, fp) {\n      this.name = name;\n      this.kind = 'normal';\n      this.log = false;\n      let _log = this.v7EvalAttr('log', 0);\n      if (_log) {\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n      }\n      fp.logz = this.log;\n   }\n\n   /** @summary Configure axis painter\n     * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame\n     * Therefore one should distinguish when caclulated coordinates used for axis drawing itself or for calculation of frame coordinates\n     * @private */\n   configureAxis(name, min, max, smin, smax, vertical, frame_range, axis_range, opts) {\n      if (!opts) opts = {};\n      this.name = name;\n      this.full_min = min;\n      this.full_max = max;\n      this.kind = 'normal';\n      this.vertical = vertical;\n      this.log = false;\n      let _log = this.v7EvalAttr('log', 0),\n          _symlog = this.v7EvalAttr('symlog', 0);\n      this.reverse = opts.reverse || false;\n\n      if (this.v7EvalAttr('time')) {\n         this.kind = 'time';\n         this.timeoffset = 0;\n         let toffset = this.v7EvalAttr('timeOffset');\n         if (toffset !== undefined) {\n            toffset = parseFloat(toffset);\n            if (Number.isFinite(toffset)) this.timeoffset = toffset*1000;\n         }\n      } else if (this.axis && this.axis.fLabelsIndex) {\n         this.kind = 'labels';\n         delete this.own_labels;\n      } else if (opts.labels) {\n         this.kind = 'labels';\n      } else {\n         this.kind = 'normal';\n      }\n\n      if (this.kind == 'time') {\n         this.func = d3_scaleTime().domain([this.convertDate(smin), this.convertDate(smax)]);\n      } else if (_symlog && (_symlog > 0)) {\n         this.symlog = _symlog;\n         this.func = d3_scaleSymlog().constant(_symlog).domain([smin,smax]);\n      } else if (_log) {\n         if (smax <= 0) smax = 1;\n         if ((smin <= 0) || (smin >= smax))\n            smin = smax * 0.0001;\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n         this.func = d3_scaleLog().base(this.logbase).domain([smin,smax]);\n      } else {\n         this.func = d3_scaleLinear().domain([smin,smax]);\n      }\n\n      this.scale_min = smin;\n      this.scale_max = smax;\n\n      this.gr_range = axis_range || 1000; // when not specified, one can ignore it\n\n      let range = frame_range ? frame_range : [0, this.gr_range];\n\n      this.axis_shift = range[1] - this.gr_range;\n\n      if (this.reverse)\n         this.func.range([range[1], range[0]]);\n      else\n         this.func.range(range);\n\n      if (this.kind == 'time')\n         this.gr = val => this.func(this.convertDate(val));\n      else if (this.log)\n         this.gr = val => (val < this.scale_min) ? (this.vertical ? this.func.range()[0]+5 : -5) : this.func(val);\n      else\n         this.gr = this.func;\n\n      delete this.format;// remove formatting func\n\n      let ndiv = this.v7EvalAttr('ndiv', 508);\n\n      this.nticks = ndiv % 100;\n      this.nticks2 = (ndiv % 10000 - this.nticks) / 100;\n      this.nticks3 = Math.floor(ndiv/10000);\n\n      if (this.nticks > 20) this.nticks = 20;\n\n      let gr_range = Math.abs(this.gr_range) || 100;\n\n      if (this.kind == 'time') {\n         if (this.nticks > 8) this.nticks = 8;\n\n         let scale_range = this.scale_max - this.scale_min,\n             tf1 = this.v7EvalAttr('timeFormat', ''),\n             tf2 = chooseTimeFormat(scale_range / gr_range, false);\n\n         if (!tf1 || (scale_range < 0.1 * (this.full_max - this.full_min)))\n            tf1 = chooseTimeFormat(scale_range / this.nticks, true);\n\n         this.tfunc1 = this.tfunc2 = d3_timeFormat(tf1);\n         if (tf2!==tf1)\n            this.tfunc2 = d3_timeFormat(tf2);\n\n         this.format = this.formatTime;\n\n      } else if (this.log) {\n         if (this.nticks2 > 1) {\n            this.nticks *= this.nticks2; // all log ticks (major or minor) created centrally\n            this.nticks2 = 1;\n         }\n         this.noexp = this.v7EvalAttr('noexp', false);\n         if ((this.scale_max < 300) && (this.scale_min > 0.3) && (this.logbase == 10)) this.noexp = true;\n         this.moreloglabels = this.v7EvalAttr('moreloglbls', false);\n\n         this.format = this.formatLog;\n      } else if (this.kind == 'labels') {\n         this.nticks = 50; // for text output allow max 50 names\n         let scale_range = this.scale_max - this.scale_min;\n         if (this.nticks > scale_range)\n            this.nticks = Math.round(scale_range);\n         this.nticks2 = 1;\n\n         this.format = this.formatLabels;\n      } else {\n         this.order = 0;\n         this.ndig = 0;\n         this.format = this.formatNormal;\n      }\n   }\n\n   /** @summary Return scale min */\n   getScaleMin() {\n      return this.func ? this.func.domain()[0] : 0;\n   }\n\n   /** @summary Return scale max */\n   getScaleMax() {\n      return this.func ? this.func.domain()[1] : 0;\n   }\n\n   /** @summary Provide label for axis value */\n   formatLabels(d) {\n      let indx = Math.round(d);\n      if (this.axis && this.axis.fLabelsIndex) {\n         if ((indx < 0) || (indx >= this.axis.fNBinsNoOver)) return null;\n         for (let i = 0; i < this.axis.fLabelsIndex.length; ++i) {\n            let pair = this.axis.fLabelsIndex[i];\n            if (pair.second === indx) return pair.first;\n         }\n      } else {\n         let labels = this.getObject().fLabels;\n         if (labels && (indx >= 0) && (indx < labels.length))\n            return labels[indx];\n      }\n      return null;\n   }\n\n   /** @summary Creates array with minor/middle/major ticks */\n   createTicks(only_major_as_array, optionNoexp, optionNoopt, optionInt) {\n\n      if (optionNoopt && this.nticks && (this.kind == 'normal')) this.noticksopt = true;\n\n      let handle = { nminor: 0, nmiddle: 0, nmajor: 0, func: this.func };\n\n      handle.minor = handle.middle = handle.major = this.produceTicks(this.nticks);\n\n      if (only_major_as_array) {\n         let res = handle.major, delta = (this.scale_max - this.scale_min)*1e-5;\n         if (res[0] > this.scale_min + delta) res.unshift(this.scale_min);\n         if (res[res.length-1] < this.scale_max - delta) res.push(this.scale_max);\n         return res;\n      }\n\n      if ((this.nticks2 > 1) && (!this.log || (this.logbase === 10))) {\n         handle.minor = handle.middle = this.produceTicks(handle.major.length, this.nticks2);\n\n         let gr_range = Math.abs(this.func.range()[1] - this.func.range()[0]);\n\n         // avoid black filling by middle-size\n         if ((handle.middle.length <= handle.major.length) || (handle.middle.length > gr_range/3.5)) {\n            handle.minor = handle.middle = handle.major;\n         } else if ((this.nticks3 > 1) && !this.log)  {\n            handle.minor = this.produceTicks(handle.middle.length, this.nticks3);\n            if ((handle.minor.length <= handle.middle.length) || (handle.minor.length > gr_range/1.7)) handle.minor = handle.middle;\n         }\n      }\n\n      handle.reset = function() {\n         this.nminor = this.nmiddle = this.nmajor = 0;\n      };\n\n      handle.next = function(doround) {\n         if (this.nminor >= this.minor.length) return false;\n\n         this.tick = this.minor[this.nminor++];\n         this.grpos = this.func(this.tick);\n         if (doround) this.grpos = Math.round(this.grpos);\n         this.kind = 3;\n\n         if ((this.nmiddle < this.middle.length) && (Math.abs(this.grpos - this.func(this.middle[this.nmiddle])) < 1)) {\n            this.nmiddle++;\n            this.kind = 2;\n         }\n\n         if ((this.nmajor < this.major.length) && (Math.abs(this.grpos - this.func(this.major[this.nmajor])) < 1) ) {\n            this.nmajor++;\n            this.kind = 1;\n         }\n         return true;\n      };\n\n      handle.last_major = function() {\n         return (this.kind !== 1) ? false : this.nmajor == this.major.length;\n      };\n\n      handle.next_major_grpos = function() {\n         if (this.nmajor >= this.major.length) return null;\n         return this.func(this.major[this.nmajor]);\n      };\n\n      this.order = 0;\n      this.ndig = 0;\n\n      // at the moment when drawing labels, we can try to find most optimal text representation for them\n\n      if ((this.kind == 'normal') && !this.log && (handle.major.length > 0)) {\n\n         let maxorder = 0, minorder = 0, exclorder3 = false;\n\n         if (!optionNoexp) {\n            let maxtick = Math.max(Math.abs(handle.major[0]),Math.abs(handle.major[handle.major.length-1])),\n                mintick = Math.min(Math.abs(handle.major[0]),Math.abs(handle.major[handle.major.length-1])),\n                ord1 = (maxtick > 0) ? Math.round(Math.log10(maxtick)/3)*3 : 0,\n                ord2 = (mintick > 0) ? Math.round(Math.log10(mintick)/3)*3 : 0;\n\n             exclorder3 = (maxtick < 2e4); // do not show 10^3 for values below 20000\n\n             if (maxtick || mintick) {\n                maxorder = Math.max(ord1,ord2) + 3;\n                minorder = Math.min(ord1,ord2) - 3;\n             }\n         }\n\n         // now try to find best combination of order and ndig for labels\n\n         let bestorder = 0, bestndig = this.ndig, bestlen = 1e10;\n\n         for (let order = minorder; order <= maxorder; order+=3) {\n            if (exclorder3 && (order===3)) continue;\n            this.order = order;\n            this.ndig = 0;\n            let lbls = [], indx = 0, totallen = 0;\n            while (indx<handle.major.length) {\n               let lbl = this.format(handle.major[indx], true);\n               if (lbls.indexOf(lbl) < 0) {\n                  lbls.push(lbl);\n                  totallen += lbl.length;\n                  indx++;\n                  continue;\n               }\n               if (++this.ndig > 11) break; // not too many digits, anyway it will be exponential\n               lbls = []; indx = 0; totallen = 0;\n            }\n\n            // for order == 0 we should virually remove '0.' and extra label on top\n            if (!order && (this.ndig < 4))\n               totallen -= (handle.major.length * 2 + 3);\n\n            if (totallen < bestlen) {\n               bestlen = totallen;\n               bestorder = this.order;\n               bestndig = this.ndig;\n            }\n         }\n\n         this.order = bestorder;\n         this.ndig = bestndig;\n\n         if (optionInt) {\n            if (this.order) console.warn(`Axis painter - integer labels are configured, but axis order ${this.order} is preferable`);\n            if (this.ndig) console.warn(`Axis painter - integer labels are configured, but ${this.ndig} decimal digits are required`);\n            this.ndig = 0;\n            this.order = 0;\n         }\n      }\n\n      return handle;\n   }\n\n   /** @summary Is labels should be centered */\n   isCenteredLabels() {\n      if (this.kind === 'labels') return true;\n      if (this.kind === 'log') return false;\n      return this.v7EvalAttr('labels_center', false);\n   }\n\n   /** @summary Used to move axis labels instead of zooming\n     * @private */\n   processLabelsMove(arg, pos) {\n      if (this.optionUnlab || !this.axis_g) return false;\n\n      let label_g = this.axis_g.select('.axis_labels');\n      if (!label_g || (label_g.size() != 1)) return false;\n\n      if (arg == 'start') {\n         // no moving without labels\n         let box = label_g.node().getBBox();\n\n         label_g.append('rect')\n                 .classed('zoom', true)\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move');\n         if (this.vertical) {\n            this.drag_pos0 = pos[0];\n         } else {\n            this.drag_pos0 = pos[1];\n         }\n\n         return true;\n      }\n\n      let offset = label_g.property('fix_offset');\n\n      if (this.vertical) {\n         offset += Math.round(pos[0] - this.drag_pos0);\n         label_g.attr('transform', `translate(${offset})`);\n      } else {\n         offset += Math.round(pos[1] - this.drag_pos0);\n         label_g.attr('transform', `translate(0,${offset})`);\n      }\n      if (!offset) label_g.attr('transform', null);\n\n      if (arg == 'stop') {\n         label_g.select('rect.zoom').remove();\n         delete this.drag_pos0;\n         if (offset != label_g.property('fix_offset')) {\n            label_g.property('fix_offset', offset);\n            let side = label_g.property('side') || 1;\n            this.labelsOffset = offset / (this.vertical ? -side : side);\n            this.changeAxisAttr(1, 'labels_offset', this.labelsOffset / this.scalingSize);\n         }\n      }\n\n      return true;\n   }\n\n   /** @summary Add interactive elements to draw axes title */\n   addTitleDrag(title_g, side) {\n      if (!settings.MoveResize || isBatchMode()) return;\n\n      let drag_rect = null,\n          acc_x, acc_y, new_x, new_y, alt_pos, curr_indx,\n          drag_move = d3_drag().subject(Object);\n\n      drag_move\n         .on('start', evnt => {\n\n            evnt.sourceEvent.preventDefault();\n            evnt.sourceEvent.stopPropagation();\n\n            let box = title_g.node().getBBox(), // check that elements visible, request precise value\n                title_length = this.vertical ? box.height : box.width;\n\n            new_x = acc_x = title_g.property('shift_x');\n            new_y = acc_y = title_g.property('shift_y');\n\n            if (this.titlePos == 'center')\n               curr_indx = 1;\n            else\n               curr_indx = (this.titlePos == 'left') ? 0 : 2;\n\n            // let d = ((this.gr_range > 0) && this.vertical) ? title_length : 0;\n            alt_pos = [0, this.gr_range/2, this.gr_range]; // possible positions\n            let off = this.vertical ? -title_length : title_length,\n                swap = this.isReverseAxis() ? 2 : 0;\n            if (this.title_align == 'middle') {\n               alt_pos[swap] += off/2;\n               alt_pos[2-swap] -= off/2;\n            } else if ((this.title_align == 'begin') ^ this.isTitleRotated()) {\n               alt_pos[1] -= off/2;\n               alt_pos[2-swap] -= off;\n            } else { // end\n               alt_pos[swap] += off;\n               alt_pos[1] += off/2;\n            }\n\n            alt_pos[curr_indx] = this.vertical ? acc_y : acc_x;\n\n            drag_rect = title_g.append('rect')\n                 .classed('zoom', true)\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move');\n//                 .style('pointer-events','none'); // let forward double click to underlying elements\n          }).on('drag', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               acc_x += evnt.dx;\n               acc_y += evnt.dy;\n\n               let set_x, set_y,\n                   p = this.vertical ? acc_y : acc_x, besti = 0;\n\n               for (let i=1; i<3; ++i)\n                  if (Math.abs(p - alt_pos[i]) < Math.abs(p - alt_pos[besti])) besti = i;\n\n               if (this.vertical) {\n                  set_x = acc_x;\n                  set_y = alt_pos[besti];\n               } else {\n                  set_x = alt_pos[besti];\n                  set_y = acc_y;\n               }\n\n               new_x = set_x; new_y = set_y; curr_indx = besti;\n               title_g.attr('transform', 'translate(' + Math.round(new_x) + ',' + Math.round(new_y) +  ')');\n\n          }).on('end', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               let basepos = title_g.property('basepos') || 0;\n\n               title_g.property('shift_x', new_x)\n                      .property('shift_y', new_y);\n\n               this.titleOffset = (this.vertical ? basepos - new_x : new_y - basepos) * side;\n\n               if (curr_indx == 1) {\n                  this.titlePos = 'center';\n               } else if (curr_indx == 0) {\n                  this.titlePos = 'left';\n               } else {\n                  this.titlePos = 'right';\n               }\n\n               this.changeAxisAttr(0, 'title_position', this.titlePos, 'title_offset', this.titleOffset / this.scalingSize);\n\n               drag_rect.remove();\n               drag_rect = null;\n            });\n\n      title_g.style('cursor', 'move').call(drag_move);\n   }\n\n   /** @summary checks if value inside graphical range, taking into account delta */\n   isInsideGrRange(pos, delta1, delta2) {\n      if (!delta1) delta1 = 0;\n      if (delta2 === undefined) delta2 = delta1;\n      if (this.gr_range < 0)\n         return (pos >= this.gr_range - delta2) && (pos <= delta1);\n      return (pos >= -delta1) && (pos <= this.gr_range + delta2);\n   }\n\n   /** @summary returns graphical range */\n   getGrRange(delta) {\n      if (!delta) delta = 0;\n      if (this.gr_range < 0)\n         return this.gr_range - delta;\n      return this.gr_range + delta;\n   }\n\n   /** @summary If axis direction is negative coordinates direction */\n   isReverseAxis() {\n      return !this.vertical !== (this.getGrRange() > 0);\n   }\n\n   /** @summary Draw axis ticks\n     * @private */\n   drawMainLine(axis_g) {\n      let ending = '';\n\n      if (this.endingSize && this.endingStyle) {\n         let sz = (this.gr_range > 0) ? -this.endingSize : this.endingSize,\n             sz7 = Math.round(sz*0.7);\n         sz = Math.round(sz);\n         if (this.vertical)\n            ending = `l${sz7},${sz}M0,${this.gr_range}l${-sz7},${sz}`;\n         else\n            ending = `l${sz},${sz7}M${this.gr_range},0l${sz},${-sz7}`;\n      }\n\n      axis_g.append('svg:path')\n            .attr('d','M0,0' + (this.vertical ? 'v' : 'h') + this.gr_range + ending)\n            .call(this.lineatt.func)\n            .style('fill', ending ? 'none' : null);\n   }\n\n   /** @summary Draw axis ticks\n     * @return {Object} with gaps on left and right side\n     * @private */\n   drawTicks(axis_g, side, main_draw) {\n      if (main_draw) this.ticks = [];\n\n      this.handle.reset();\n\n      let res = '', ticks_plusminus = 0;\n      if (this.ticksSide == 'both') {\n         side = 1;\n         ticks_plusminus = 1;\n      }\n\n      while (this.handle.next(true)) {\n\n         let h1 = Math.round(this.ticksSize/4), h2 = 0;\n\n         if (this.handle.kind < 3)\n            h1 = Math.round(this.ticksSize/2);\n\n         let grpos = this.handle.grpos - this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(grpos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.handle.kind == 1) {\n            // if not showing labels, not show large tick\n            if ((this.kind == 'labels') || (this.format(this.handle.tick,true) !== null)) h1 = this.ticksSize;\n\n            if (main_draw) this.ticks.push(grpos); // keep graphical positions of major ticks\n         }\n\n         if (ticks_plusminus > 0) {\n            h2 = -h1;\n         } else if (side < 0) {\n            h2 = -h1; h1 = 0;\n         } else {\n            h2 = 0;\n         }\n\n         res += this.vertical ? `M${h1},${grpos}H${h2}` : `M${grpos},${-h1}V${-h2}`;\n      }\n\n      if (res)\n         axis_g.append('svg:path')\n               .attr('d', res)\n               .style('stroke', this.ticksColor || this.lineatt.color)\n               .style('stroke-width', !this.ticksWidth || (this.ticksWidth == 1) ? null : this.ticksWidth);\n\n       let gap0 = Math.round(0.25*this.ticksSize), gap = Math.round(1.25*this.ticksSize);\n       return { '-1': (side > 0) || ticks_plusminus ? gap : gap0,\n                 '1': (side < 0) || ticks_plusminus ? gap : gap0 };\n   }\n\n   /** @summary Performs labels drawing\n     * @return {Promise} with gaps in both direction */\n   async drawLabels(axis_g, side, gaps) {\n      let center_lbls = this.isCenteredLabels(),\n          rotate_lbls = this.labelsFont.angle != 0,\n          textscale = 1, maxtextlen = 0, lbls_tilt = false,\n          label_g = axis_g.append('svg:g').attr('class','axis_labels').property('side', side),\n          lbl_pos = this.handle.lbl_pos || this.handle.major,\n          max_lbl_width = 0, max_lbl_height = 0;\n\n      // function called when text is drawn to analyze width, required to correctly scale all labels\n      function process_drawtext_ready(painter) {\n\n         max_lbl_width = Math.max(max_lbl_width, this.result_width);\n         max_lbl_height = Math.max(max_lbl_height, this.result_height);\n\n         let textwidth = this.result_width;\n\n         if (textwidth && ((!painter.vertical && !rotate_lbls) || (painter.vertical && rotate_lbls)) && !painter.log) {\n            let maxwidth = this.gap_before*0.45 + this.gap_after*0.45;\n            if (!this.gap_before) maxwidth = 0.9*this.gap_after; else\n            if (!this.gap_after) maxwidth = 0.9*this.gap_before;\n            textscale = Math.min(textscale, maxwidth / textwidth);\n         }\n\n         if ((textscale > 0.0001) && (textscale < 0.8) && !painter.vertical && !rotate_lbls && (maxtextlen > 5) && (side > 0))\n            lbls_tilt = true;\n\n         let scale = textscale * (lbls_tilt ? 3 : 1);\n         if ((scale > 0.0001) && (scale < 1))\n            painter.scaleTextDrawing(1/scale, label_g);\n      }\n\n      let lastpos = 0,\n          fix_offset = Math.round((this.vertical ? -side : side) * this.labelsOffset),\n          fix_coord = Math.round((this.vertical ? -side : side) * gaps[side]);\n\n      if (fix_offset)\n         label_g.attr('transform', this.vertical ? `translate(${fix_offset})` : `translate(0,${fix_offset})`);\n\n      label_g.property('fix_offset', fix_offset);\n\n      this.startTextDrawing(this.labelsFont, 'font', label_g);\n\n      for (let nmajor = 0; nmajor < lbl_pos.length; ++nmajor) {\n\n         let lbl = this.format(lbl_pos[nmajor], true);\n         if (lbl === null) continue;\n\n         let pos = Math.round(this.func(lbl_pos[nmajor])),\n             arg = { text: lbl, latex: 1, draw_g: label_g };\n\n         arg.gap_before = (nmajor > 0) ? Math.abs(Math.round(pos - this.func(lbl_pos[nmajor-1]))) : 0,\n         arg.gap_after = (nmajor < lbl_pos.length-1) ? Math.abs(Math.round(this.func(lbl_pos[nmajor+1])-pos)) : 0;\n\n         if (center_lbls) {\n            let gap = arg.gap_after || arg.gap_before;\n            pos = Math.round(pos - (this.vertical ? 0.5*gap : -0.5*gap));\n            if (!this.isInsideGrRange(pos, 5)) continue;\n         }\n\n         maxtextlen = Math.max(maxtextlen, lbl.length);\n\n         pos -= this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(pos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.vertical) {\n            arg.x = fix_coord;\n            arg.y = pos;\n            arg.align = rotate_lbls ? ((side < 0) ? 23 : 20) : ((side < 0) ? 12 : 32);\n         } else {\n            arg.x = pos;\n            arg.y = fix_coord;\n            arg.align = rotate_lbls ? ((side < 0) ? 12 : 32) : ((side < 0) ? 20 : 23);\n         }\n\n         arg.post_process = process_drawtext_ready;\n\n         this.drawText(arg);\n\n         if (lastpos && (pos!=lastpos) && ((this.vertical && !rotate_lbls) || (!this.vertical && rotate_lbls))) {\n            let axis_step = Math.abs(pos-lastpos);\n            textscale = Math.min(textscale, 0.9*axis_step/this.labelsFont.size);\n         }\n\n         lastpos = pos;\n      }\n\n      if (this.order)\n         this.drawText({ x: this.vertical ? side*5 : this.getGrRange(5),\n                         y: this.has_obstacle ? fix_coord : (this.vertical ? this.getGrRange(3) : -3*side),\n                         align: this.vertical ? ((side < 0) ? 30 : 10) : ((this.has_obstacle ^ (side < 0)) ? 13 : 10),\n                         latex: 1,\n                         text: '#times' + this.formatExp(10, this.order),\n                         draw_g: label_g\n         });\n\n      return this.finishTextDrawing(label_g).then(() => {\n\n        if (lbls_tilt)\n           label_g.selectAll('text').each(function () {\n               let txt = d3_select(this), tr = txt.attr('transform');\n               txt.attr('transform', tr + ' rotate(25)').style('text-anchor', 'start');\n           });\n\n         if (this.vertical) {\n            gaps[side] += Math.round(rotate_lbls ? 1.2*max_lbl_height : max_lbl_width + 0.4*this.labelsFont.size) - side*fix_offset;\n         } else {\n            let tilt_height = lbls_tilt ? max_lbl_width * Math.sin(25/180*Math.PI) + max_lbl_height * (Math.cos(25/180*Math.PI) + 0.2) : 0;\n\n            gaps[side] += Math.round(Math.max(rotate_lbls ? max_lbl_width + 0.4*this.labelsFont.size : 1.2*max_lbl_height, 1.2*this.labelsFont.size, tilt_height)) + fix_offset;\n         }\n\n         return gaps;\n      });\n   }\n\n   /** @summary Add zomming rect to axis drawing */\n   addZoomingRect(axis_g, side, lgaps) {\n      if (settings.Zooming && !this.disable_zooming && !isBatchMode()) {\n         let sz = Math.max(lgaps[side], 10),\n             d = this.vertical ? `v${this.gr_range}h${-side*sz}v${-this.gr_range}`\n                               : `h${this.gr_range}v${side*sz}h${-this.gr_range}`;\n         axis_g.append('svg:path')\n               .attr('d',`M0,0${d}z`)\n               .attr('class', 'axis_zoom')\n               .style('opacity', '0')\n               .style('cursor', 'crosshair');\n      }\n   }\n\n   /** @summary Returns true if axis title is rotated */\n   isTitleRotated() {\n      return this.titleFont && (this.titleFont.angle != (this.vertical ? 270 : 0));\n   }\n\n   /** @summary Draw axis title */\n   async drawTitle(axis_g, side, lgaps) {\n      if (!this.fTitle)\n         return this;\n\n      let title_g = axis_g.append('svg:g').attr('class', 'axis_title'),\n          title_shift_x = 0, title_shift_y = 0, title_basepos = 0;\n\n      let rotated = this.isTitleRotated();\n\n      this.startTextDrawing(this.titleFont, 'font', title_g);\n\n      this.title_align = this.titleCenter ? 'middle' : (this.titleOpposite ^ (this.isReverseAxis() || rotated) ? 'begin' : 'end');\n\n      if (this.vertical) {\n         title_basepos = Math.round(-side*(lgaps[side]));\n         title_shift_x = title_basepos + Math.round(-side*this.titleOffset);\n         title_shift_y = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         this.drawText({ align: [this.title_align, ((side < 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      } else {\n         title_shift_x = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         title_basepos = Math.round(side*lgaps[side]);\n         title_shift_y = title_basepos + Math.round(side*this.titleOffset);\n         this.drawText({ align: [this.title_align, ((side > 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      }\n\n      title_g.attr('transform', `translate(${title_shift_x},${title_shift_y})`)\n             .property('basepos', title_basepos)\n             .property('shift_x', title_shift_x)\n             .property('shift_y', title_shift_y);\n\n      this.addTitleDrag(title_g, side);\n\n      return this.finishTextDrawing(title_g);\n   }\n\n   /** @summary Extract major draw attributes, which are also used in interactive operations\n     * @private  */\n   extractDrawAttributes(scalingSize) {\n      let pp = this.getPadPainter(),\n          rect = pp?.getPadRect() || { width: 10, height: 10 };\n\n      this.scalingSize = scalingSize || (this.vertical ? rect.width : rect.height);\n\n      this.createv7AttLine('line_');\n\n      this.optionUnlab = this.v7EvalAttr('labels_hide', false);\n\n      this.endingStyle = this.v7EvalAttr('ending_style', '');\n      this.endingSize = Math.round(this.v7EvalLength('ending_size', this.scalingSize, this.endingStyle ? 0.02 : 0));\n      this.startingSize = Math.round(this.v7EvalLength('starting_size', this.scalingSize, 0));\n      this.ticksSize = this.v7EvalLength('ticks_size', this.scalingSize, 0.02);\n      this.ticksSide = this.v7EvalAttr('ticks_side', 'normal');\n      this.ticksColor = this.v7EvalColor('ticks_color', '');\n      this.ticksWidth = this.v7EvalAttr('ticks_width', 1);\n      if (scalingSize && (this.ticksSize < 0))\n         this.ticksSize = -this.ticksSize;\n\n      this.fTitle = this.v7EvalAttr('title_value', '');\n\n      if (this.fTitle) {\n         this.titleFont = this.v7EvalFont('title', { size: 0.03 }, scalingSize || pp?.getPadHeight() || 10);\n         this.titleFont.roundAngle(180, this.vertical ? 270 : 0);\n\n         this.titleOffset = this.v7EvalLength('title_offset', this.scalingSize, 0);\n         this.titlePos = this.v7EvalAttr('title_position', 'right');\n         this.titleCenter = (this.titlePos == 'center');\n         this.titleOpposite = (this.titlePos == 'left');\n      } else {\n         delete this.titleFont;\n         delete this.titleOffset;\n         delete this.titlePos;\n      }\n\n      // TODO: remove old scaling factors for labels and ticks\n      this.labelsFont = this.v7EvalFont('labels', { size: scalingSize ? 0.05 : 0.03 });\n      this.labelsFont.roundAngle(180);\n      if (this.labelsFont.angle) this.labelsFont.angle = 270;\n      this.labelsOffset = this.v7EvalLength('labels_offset', this.scalingSize, 0);\n\n      if (scalingSize) this.ticksSize = this.labelsFont.size*0.5; // old lego scaling factor\n\n      if (this.maxTickSize && (this.ticksSize > this.maxTickSize))\n         this.ticksSize = this.maxTickSize;\n   }\n\n   /** @summary Performs axis drawing\n     * @return {Promise} which resolved when drawing is completed */\n   async drawAxis(layer, transform, side) {\n      let axis_g = layer;\n\n      if (side === undefined) side = 1;\n\n      if (!this.standalone) {\n         axis_g = layer.select('.' + this.name + '_container');\n         if (axis_g.empty())\n            axis_g = layer.append('svg:g').attr('class', this.name + '_container');\n         else\n            axis_g.selectAll('*').remove();\n      }\n\n      axis_g.attr('transform', transform || null);\n\n      this.extractDrawAttributes();\n      this.axis_g = axis_g;\n      this.side = side;\n\n      if (this.ticksSide == 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(axis_g);\n\n      let optionNoopt = false,  // no ticks position optimization\n          optionInt = false,    // integer labels\n          optionNoexp = false;  // do not create exp\n\n      this.handle = this.createTicks(false, optionNoexp, optionNoopt, optionInt);\n\n      // first draw ticks\n      let tgaps = this.drawTicks(axis_g, side, true);\n\n      // draw labels\n      let labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(axis_g, side, lgaps);\n      });\n   }\n\n   /** @summary Assign handler, which is called when axis redraw by interactive changes\n     * @desc Used by palette painter to reassign iteractive handlers\n     * @private */\n   setAfterDrawHandler(handler) {\n      this._afterDrawAgain = handler;\n   }\n\n   /** @summary Draw axis with the same settings, used by interactive changes */\n   drawAxisAgain() {\n      if (!this.axis_g || !this.side) return;\n\n      this.axis_g.selectAll('*').remove();\n\n      this.extractDrawAttributes();\n\n      let side = this.side;\n      if (this.ticksSide == 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(this.axis_g);\n\n      // first draw ticks\n      let tgaps = this.drawTicks(this.axis_g, side, false);\n\n      let labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(this.axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(this.axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(this.axis_g, side, lgaps);\n      }).then(() => {\n         if (isFunc(this._afterDrawAgain))\n            this._afterDrawAgain();\n      });\n   }\n\n   /** @summary Draw axis again on opposite frame size */\n   drawAxisOtherPlace(layer, transform, side, only_ticks) {\n      let axis_g = layer.select('.' + this.name + '_container2');\n      if (axis_g.empty())\n         axis_g = layer.append('svg:g').attr('class',this.name + '_container2');\n      else\n         axis_g.selectAll('*').remove();\n\n      axis_g.attr('transform', transform || null);\n\n      if (this.ticksSide == 'invert') side = -side;\n\n      // draw ticks again\n      let tgaps = this.drawTicks(axis_g, side, false);\n\n      // draw labels again\n      let promise = this.optionUnlab || only_ticks ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return promise.then(lgaps => {\n         this.addZoomingRect(axis_g, side, lgaps);\n         return true;\n      });\n   }\n\n   /** @summary Change zooming in standalone mode */\n   zoomStandalone(min,max) {\n      this.changeAxisAttr(1, 'zoomMin', min, 'zoomMax', max);\n   }\n\n   /** @summary Redraw axis, used in standalone mode for RAxisDrawable */\n   redraw() {\n\n      let drawable = this.getObject(),\n          pp   = this.getPadPainter(),\n          pos  = pp.getCoordinate(drawable.fPos),\n          len  = pp.getPadLength(drawable.fVertical, drawable.fLength),\n          reverse = this.v7EvalAttr('reverse', false),\n          labels_len = drawable.fLabels.length,\n          min = (labels_len > 0) ? 0 : this.v7EvalAttr('min', 0),\n          max = (labels_len > 0) ? labels_len : this.v7EvalAttr('max', 100);\n\n      // in vertical direction axis drawn in negative direction\n      if (drawable.fVertical) len -= pp.getPadHeight();\n\n      let smin = this.v7EvalAttr('zoomMin'),\n          smax = this.v7EvalAttr('zoomMax');\n      if (smin === smax) {\n         smin = min; smax = max;\n      }\n\n      this.configureAxis('axis', min, max, smin, smax, drawable.fVertical, undefined, len, { reverse, labels: labels_len > 0 });\n\n      this.createG();\n\n      this.standalone = true;  // no need to clean axis container\n\n      let promise = this.drawAxis(this.draw_g, `translate(${pos.x},${pos.y})`);\n\n      if (isBatchMode()) return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu)\n            this.draw_g.on('contextmenu', evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                 menu.add('header:RAxisDrawable');\n                 menu.add('Unzoom', () => this.zoomStandalone());\n                 this.fillAxisContextMenu(menu, '');\n                 menu.show();\n               });\n            });\n\n         addDragHandler(this, { x: pos.x, y: pos.y, width: this.vertical ? 10 : len, height: this.vertical ? len : 10,\n                                only_move: true, redraw: d => this.positionChanged(d) });\n\n         this.draw_g.on('dblclick', () => this.zoomStandalone());\n\n         if (settings.ZoomWheel)\n            this.draw_g.on('wheel', evnt => {\n               evnt.stopPropagation();\n               evnt.preventDefault();\n\n               let pos = d3_pointer(evnt, this.draw_g.node()),\n                   coord = this.vertical ? (1 - pos[1] / len) : pos[0] / len,\n                   item = this.analyzeWheelEvent(evnt, coord);\n\n               if (item.changed) this.zoomStandalone(item.min, item.max);\n            });\n      });\n   }\n\n   /** @summary Process interactive moving of the axis drawing */\n   positionChanged(drag) {\n      let drawable = this.getObject(),\n          rect = this.getPadPainter().getPadRect(),\n          xn = drag.x / rect.width,\n          yn = 1 - drag.y / rect.height;\n\n      drawable.fPos.fHoriz.fArr = [ xn ];\n      drawable.fPos.fVert.fArr = [ yn ];\n\n      this.submitCanvExec(`SetPos({${xn.toFixed(4)},${yn.toFixed(4)}})`);\n   }\n\n   /** @summary Change axis attribute, submit changes to server and redraw axis when specified\n     * @desc Arguments as redraw_mode, name1, value1, name2, value2, ... */\n   changeAxisAttr(redraw_mode) {\n      let changes = {}, indx = 1;\n      while (indx < arguments.length - 1) {\n         this.v7AttrChange(changes, arguments[indx], arguments[indx+1]);\n         this.v7SetAttr(arguments[indx], arguments[indx+1]);\n         indx += 2;\n      }\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      if (redraw_mode === 1) {\n         if (this.standalone)\n            this.redraw();\n         else\n            this.drawAxisAgain();\n      } else if (redraw_mode)\n         this.redrawPad();\n   }\n\n   /** @summary Change axis log scale kind */\n   changeAxisLog(arg) {\n      if ((this.kind == 'labels') || (this.kind == 'time')) return;\n      if (arg === 'toggle') arg = this.log ? 0 : 10;\n\n      arg = parseFloat(arg);\n      if (Number.isFinite(arg)) this.changeAxisAttr(2, 'log', arg, 'symlog', 0);\n   }\n\n   /** @summary Provide context menu for axis */\n   fillAxisContextMenu(menu, kind) {\n\n      if (kind) menu.add('Unzoom', () => this.getFramePainter().unzoom(kind));\n\n      menu.add('sub:Log scale', () => this.changeAxisLog('toggle'));\n      menu.addchk(!this.log && !this.symlog, 'linear', 0, arg => this.changeAxisLog(arg));\n      menu.addchk(this.log && !this.symlog && (this.logbase == 10), 'log10', () => this.changeAxisLog(10));\n      menu.addchk(this.log && !this.symlog && (this.logbase == 2), 'log2', () => this.changeAxisLog(2));\n      menu.addchk(this.log && !this.symlog && Math.abs(this.logbase - Math.exp(1)) < 0.1, 'ln', () => this.changeAxisLog(Math.exp(1)));\n      menu.addchk(!this.log && this.symlog, 'symlog', 0, () =>\n         menu.input('set symlog constant', this.symlog || 10, 'float').then(v => this.changeAxisAttr(2,'symlog', v)));\n      menu.add('endsub:');\n\n      menu.add('Divisions', () => menu.input('Set axis devisions', this.v7EvalAttr('ndiv', 508), 'int').then(val => this.changeAxisAttr(2, 'ndiv', val)));\n\n      menu.add('sub:Ticks');\n      menu.addRColorMenu('color', this.ticksColor, col => this.changeAxisAttr(1, 'ticks_color', col));\n      menu.addSizeMenu('size', 0, 0.05, 0.01, this.ticksSize/this.scalingSize, sz => this.changeAxisAttr(1, 'ticks_size', sz));\n      menu.addSelectMenu('side', ['normal', 'invert', 'both'], this.ticksSide, side => this.changeAxisAttr(1, 'ticks_side', side));\n      menu.add('endsub:');\n\n      if (!this.optionUnlab && this.labelsFont) {\n         menu.add('sub:Labels');\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.labelsOffset/this.scalingSize,\n                         offset => this.changeAxisAttr(1, 'labels_offset', offset));\n         menu.addRAttrTextItems(this.labelsFont, { noangle: 1, noalign: 1 },\n               change => this.changeAxisAttr(1, 'labels_' + change.name, change.value));\n         menu.addchk(this.labelsFont.angle, 'rotate', res => this.changeAxisAttr(1, 'labels_angle', res ? 180 : 0));\n         menu.add('endsub:');\n      }\n\n      menu.add('sub:Title', () => menu.input('Enter axis title', this.fTitle).then(t => this.changeAxisAttr(1, 'title_value', t)));\n\n      if (this.fTitle) {\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.titleOffset/this.scalingSize,\n                           offset => this.changeAxisAttr(1, 'title_offset', offset));\n\n         menu.addSelectMenu('position', ['left', 'center', 'right'], this.titlePos,\n                            pos => this.changeAxisAttr(1, 'title_position', pos));\n\n         menu.addchk(this.isTitleRotated(), 'rotate', flag => this.changeAxisAttr(1, 'title_angle', flag ? 180 : 0));\n\n         menu.addRAttrTextItems(this.titleFont, { noangle: 1, noalign: 1 }, change => this.changeAxisAttr(1, 'title_' + change.name, change.value));\n      }\n\n      menu.add('endsub:');\n      return true;\n   }\n\n} // class RAxisPainter\n\nexport { RAxisPainter };\n","import { gStyle, settings, create, isBatchMode, isFunc, isStr, clTAxis } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { getSvgLineStyle } from '../base/TAttLineHandler.mjs';\nimport { TAxisPainter } from './TAxisPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { FrameInteractive } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Painter class for RFrame, main handler for interactivity\n *\n * @private\n */\n\nclass RFramePainter extends RObjectPainter {\n\n   /** @summary constructor\n     * @param {object|string} dom - DOM element for drawing or element id\n     * @param {object} tframe - RFrame object */\n   constructor(dom, tframe) {\n      super(dom, tframe, '', 'frame');\n      this.mode3d = false;\n      this.xmin = this.xmax = 0; // no scale specified, wait for objects drawing\n      this.ymin = this.ymax = 0; // no scale specified, wait for objects drawing\n      this.axes_drawn = false;\n      this.keys_handler = null;\n      this.projection = 0; // different projections\n      this.v7_frame = true; // indicator of v7, used in interactive part\n   }\n\n   /** @summary Returns frame painter - object itself */\n   getFramePainter() { return this; }\n\n   /** @summary Returns true if it is ROOT6 frame\n    * @private */\n   is_root6() { return false; }\n\n   /** @summary Set active flag for frame - can block some events\n    * @private */\n   setFrameActive(on) {\n      this.enabledKeys = on && settings.HandleKeys ? true : false;\n      // used only in 3D mode\n      if (this.control)\n         this.control.enableKeys = this.enabledKeys;\n   }\n\n   setLastEventPos(pnt) {\n      // set position of last context menu event, can be\n      this.fLastEventPnt = pnt;\n   }\n\n   getLastEventPos() {\n      // return position of last event\n      return this.fLastEventPnt;\n   }\n\n   /** @summary Update graphical attributes */\n   updateAttributes(force) {\n      if ((this.fX1NDC === undefined) || (force && !this.modified_NDC)) {\n\n         let rect = this.getPadPainter().getPadRect();\n         this.fX1NDC = this.v7EvalLength('margins_left', rect.width, settings.FrameNDC.fX1NDC) / rect.width;\n         this.fY1NDC = this.v7EvalLength('margins_bottom', rect.height, settings.FrameNDC.fY1NDC) / rect.height;\n         this.fX2NDC = 1 - this.v7EvalLength('margins_right', rect.width, 1-settings.FrameNDC.fX2NDC) / rect.width;\n         this.fY2NDC = 1 - this.v7EvalLength('margins_top', rect.height, 1-settings.FrameNDC.fY2NDC) / rect.height;\n      }\n\n      if (!this.fillatt)\n         this.createv7AttFill();\n\n      this.createv7AttLine('border_');\n   }\n\n   /** @summary Returns coordinates transformation func */\n   getProjectionFunc() {\n      switch (this.projection) {\n         // Aitoff2xy\n         case 1: return (l, b) => {\n            const DegToRad = Math.PI/180,\n                  alpha2 = (l/2)*DegToRad,\n                  delta  = b*DegToRad,\n                  r2     = Math.sqrt(2),\n                  f      = 2*r2/Math.PI,\n                  cdec   = Math.cos(delta),\n                  denom  = Math.sqrt(1. + cdec*Math.cos(alpha2));\n            return {\n               x: cdec*Math.sin(alpha2)*2.*r2/denom/f/DegToRad,\n               y: Math.sin(delta)*r2/denom/f/DegToRad\n            };\n         };\n         // mercator\n         case 2: return (l, b) => { return { x: l, y: Math.log(Math.tan((Math.PI/2 + b/180*Math.PI)/2)) }; };\n         // sinusoidal\n         case 3: return (l, b) => { return { x: l*Math.cos(b/180*Math.PI), y: b } };\n         // parabolic\n         case 4: return (l, b) => { return { x: l*(2.*Math.cos(2*b/180*Math.PI/3) - 1), y: 180*Math.sin(b/180*Math.PI/3) }; };\n      }\n   }\n\n   /** @summary Rcalculate frame ranges using specified projection functions\n     * @desc Not yet used in v7 */\n   recalculateRange(Proj) {\n      this.projection = Proj || 0;\n\n      if ((this.projection == 2) && ((this.scale_ymin <= -90 || this.scale_ymax >=90))) {\n         console.warn(`Mercator Projection: latitude out of range ${this.scale_ymin} ${this.scale_ymax}`);\n         this.projection = 0;\n      }\n\n      let func = this.getProjectionFunc();\n      if (!func) return;\n\n      let pnts = [ func(this.scale_xmin, this.scale_ymin),\n                   func(this.scale_xmin, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymin) ];\n      if (this.scale_xmin < 0 && this.scale_xmax > 0) {\n         pnts.push(func(0, this.scale_ymin));\n         pnts.push(func(0, this.scale_ymax));\n      }\n      if (this.scale_ymin < 0 && this.scale_ymax > 0) {\n         pnts.push(func(this.scale_xmin, 0));\n         pnts.push(func(this.scale_xmax, 0));\n      }\n\n      this.original_xmin = this.scale_xmin;\n      this.original_xmax = this.scale_xmax;\n      this.original_ymin = this.scale_ymin;\n      this.original_ymax = this.scale_ymax;\n\n      this.scale_xmin = this.scale_xmax = pnts[0].x;\n      this.scale_ymin = this.scale_ymax = pnts[0].y;\n\n      for (let n = 1; n < pnts.length; ++n) {\n         this.scale_xmin = Math.min(this.scale_xmin, pnts[n].x);\n         this.scale_xmax = Math.max(this.scale_xmax, pnts[n].x);\n         this.scale_ymin = Math.min(this.scale_ymin, pnts[n].y);\n         this.scale_ymax = Math.max(this.scale_ymax, pnts[n].y);\n      }\n   }\n\n   /** @summary Draw axes grids\n     * @desc Called immediately after axes drawing */\n   drawGrids() {\n      let layer = this.getFrameSvg().select('.grid_layer');\n\n      layer.selectAll('.xgrid').remove();\n      layer.selectAll('.ygrid').remove();\n\n      let h = this.getFrameHeight(),\n          w = this.getFrameWidth(),\n          gridx = this.v7EvalAttr('gridX', false),\n          gridy = this.v7EvalAttr('gridY', false),\n          grid_style = getSvgLineStyle(gStyle.fGridStyle),\n          grid_color = (gStyle.fGridColor > 0) ? this.getColor(gStyle.fGridColor) : 'black';\n\n      if (this.x_handle)\n         this.x_handle.draw_grid = gridx;\n\n      // add a grid on x axis, if the option is set\n      if (this.x_handle && this.x_handle.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.x_handle.ticks.length; ++n)\n            if (this.swap_xy)\n               grid += `M0,${h+this.x_handle.ticks[n]}h${w}`;\n            else\n               grid += `M${this.x_handle.ticks[n]},0v${h}`;\n\n         if (grid)\n            layer.append('svg:path')\n                 .attr('class', 'xgrid')\n                 .attr('d', grid)\n                 .style('stroke',grid_color)\n                 .style('stroke-width', gStyle.fGridWidth)\n                 .style('stroke-dasharray', grid_style);\n      }\n\n      if (this.y_handle)\n         this.y_handle.draw_grid = gridy;\n\n      // add a grid on y axis, if the option is set\n      if (this.y_handle && this.y_handle.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.y_handle.ticks.length; ++n)\n            if (this.swap_xy)\n               grid += `M${this.y_handle.ticks[n]},0v${h}`;\n            else\n               grid += `M0,${h+this.y_handle.ticks[n]}h${w}`;\n\n         if (grid)\n          layer.append('svg:path')\n               .attr('class', 'ygrid')\n               .attr('d', grid)\n               .style('stroke', grid_color)\n               .style('stroke-width', gStyle.fGridWidth)\n               .style('stroke-dasharray', grid_style);\n      }\n   }\n\n   /** @summary Converts 'raw' axis value into text */\n   axisAsText(axis, value) {\n      let handle = this[axis+'_handle'];\n\n      if (handle)\n         return handle.axisAsText(value, settings[axis.toUpperCase() + 'ValuesFormat']);\n\n      return value.toPrecision(4);\n   }\n\n   /** @summary Set axix range */\n   _setAxisRange(prefix, vmin, vmax) {\n      let nmin = prefix + 'min', nmax = prefix + 'max';\n      if (this[nmin] != this[nmax]) return;\n      let min = this.v7EvalAttr(prefix + '_min'),\n          max = this.v7EvalAttr(prefix + '_max');\n\n      if (min !== undefined) vmin = min;\n      if (max !== undefined) vmax = max;\n\n      if (vmin < vmax) {\n         this[nmin] = vmin;\n         this[nmax] = vmax;\n      }\n\n      let nzmin = 'zoom_' + prefix + 'min', nzmax = 'zoom_' + prefix + 'max';\n\n      if ((this[nzmin] == this[nzmax]) && !this.zoomChangedInteractive(prefix)) {\n         min = this.v7EvalAttr(prefix + '_zoomMin');\n         max = this.v7EvalAttr(prefix + '_zoomMax');\n\n         if ((min !== undefined) || (max !== undefined)) {\n            this[nzmin] = (min === undefined) ? this[nmin] : min;\n            this[nzmax] = (max === undefined) ? this[nmax] : max;\n         }\n      }\n   }\n\n   /** @summary Set axes ranges for drawing, check configured attributes if range already specified */\n   setAxesRanges(xaxis, xmin, xmax, yaxis, ymin, ymax, zaxis, zmin, zmax) {\n      if (this.axes_drawn) return;\n      this.xaxis = xaxis;\n      this._setAxisRange('x', xmin, xmax);\n      this.yaxis = yaxis;\n      this._setAxisRange('y', ymin, ymax);\n      this.zaxis = zaxis;\n      this._setAxisRange('z', zmin, zmax);\n   }\n\n   /** @summary Set secondary axes ranges */\n   setAxes2Ranges(second_x, xaxis, xmin, xmax, second_y, yaxis, ymin, ymax) {\n      if (second_x) {\n         this.x2axis = xaxis;\n         this._setAxisRange('x2', xmin, xmax);\n      }\n      if (second_y) {\n         this.y2axis = yaxis;\n         this._setAxisRange('y2', ymin, ymax);\n      }\n   }\n\n   /** @summary Create x,y objects which maps user coordinates into pixels\n     * @desc Must be used only for v6 objects, see TFramePainter for more details\n     * @private */\n   createXY(opts) {\n      if (this.self_drawaxes) return;\n\n      this.cleanXY(); // remove all previous configurations\n\n      if (!opts) opts = {};\n\n      this.v6axes = true;\n      this.swap_xy = opts.swap_xy || false;\n      this.reverse_x = opts.reverse_x || false;\n      this.reverse_y = opts.reverse_y || false;\n\n      this.logx = this.v7EvalAttr('x_log', 0);\n      this.logy = this.v7EvalAttr('y_log', 0);\n\n      let w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      this.scale_xmin = this.xmin;\n      this.scale_xmax = this.xmax;\n\n      this.scale_ymin = this.ymin;\n      this.scale_ymax = this.ymax;\n\n      if (opts.extra_y_space) {\n         let log_scale = this.swap_xy ? this.logx : this.logy;\n         if (log_scale && (this.scale_ymax > 0))\n            this.scale_ymax = Math.exp(Math.log(this.scale_ymax)*1.1);\n         else\n            this.scale_ymax += (this.scale_ymax - this.scale_ymin)*0.1;\n      }\n\n      // if (opts.check_pad_range) {\n         // take zooming out of pad or axis attributes - skip!\n      // }\n\n      if ((this.zoom_ymin == this.zoom_ymax) && (opts.zoom_ymin != opts.zoom_ymax) && !this.zoomChangedInteractive('y')) {\n         this.zoom_ymin = opts.zoom_ymin;\n         this.zoom_ymax = opts.zoom_ymax;\n      }\n\n      if (this.zoom_xmin != this.zoom_xmax) {\n         this.scale_xmin = this.zoom_xmin;\n         this.scale_xmax = this.zoom_xmax;\n      }\n\n      if (this.zoom_ymin != this.zoom_ymax) {\n         this.scale_ymin = this.zoom_ymin;\n         this.scale_ymax = this.zoom_ymax;\n      }\n\n      let xaxis = this.xaxis, yaxis = this.yaxis;\n      if (xaxis?._typename != clTAxis) xaxis = create(clTAxis);\n      if (yaxis?._typename != clTAxis) yaxis = create(clTAxis);\n\n      this.x_handle = new TAxisPainter(this.getDom(), xaxis, true);\n      this.x_handle.setPadName(this.getPadName());\n      this.x_handle.optionUnlab = this.v7EvalAttr('x_labels_hide', false);\n\n      this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, this.swap_xy, this.swap_xy ? [0,h] : [0,w],\n                                      { reverse: this.reverse_x,\n                                        log: this.swap_xy ? this.logy : this.logx,\n                                        symlog: this.swap_xy ? opts.symlog_y : opts.symlog_x,\n                                        logcheckmin: this.swap_xy,\n                                        logminfactor: 0.0001 });\n\n      this.x_handle.assignFrameMembers(this,'x');\n\n      this.y_handle = new TAxisPainter(this.getDom(), yaxis, true);\n      this.y_handle.setPadName(this.getPadName());\n      this.y_handle.optionUnlab = this.v7EvalAttr('y_labels_hide', false);\n\n      this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, !this.swap_xy, this.swap_xy ? [0,w] : [0,h],\n                                      { reverse: this.reverse_y,\n                                        log: this.swap_xy ? this.logx : this.logy,\n                                        symlog: this.swap_xy ? opts.symlog_x : opts.symlog_y,\n                                        logcheckmin: (opts.ndim < 2) || this.swap_xy,\n                                        log_min_nz: opts.ymin_nz && (opts.ymin_nz < 0.01*this.ymax) ? 0.3 * opts.ymin_nz : 0,\n                                        logminfactor: 3e-4 });\n\n      this.y_handle.assignFrameMembers(this,'y');\n   }\n\n   /** @summary Identify if requested axes are drawn\n     * @desc Checks if x/y axes are drawn. Also if second side is already there */\n   hasDrawnAxes(second_x, second_y) {\n      return !second_x && !second_y ? this.axes_drawn : false;\n   }\n\n   /** @summary Draw configured axes on the frame\n     * @desc axes can be drawn only for main histogram  */\n   async drawAxes() {\n\n      if (this.axes_drawn || (this.xmin == this.xmax) || (this.ymin == this.ymax))\n         return this.axes_drawn;\n\n      let ticksx = this.v7EvalAttr('ticksX', 1),\n          ticksy = this.v7EvalAttr('ticksY', 1),\n          sidex = 1, sidey = 1;\n\n      if (this.v7EvalAttr('swapX', false)) sidex = -1;\n      if (this.v7EvalAttr('swapY', false)) sidey = -1;\n\n      let w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      if (!this.v6axes) {\n         // this is partially same as v6 createXY method\n\n         this.cleanupAxes();\n\n         this.swap_xy = false;\n\n         if (this.zoom_xmin != this.zoom_xmax) {\n            this.scale_xmin = this.zoom_xmin;\n            this.scale_xmax = this.zoom_xmax;\n         } else {\n            this.scale_xmin = this.xmin;\n            this.scale_xmax = this.xmax;\n         }\n\n         if (this.zoom_ymin != this.zoom_ymax) {\n            this.scale_ymin = this.zoom_ymin;\n            this.scale_ymax = this.zoom_ymax;\n         } else {\n            this.scale_ymin = this.ymin;\n            this.scale_ymax = this.ymax;\n         }\n\n         this.recalculateRange(0);\n\n         this.x_handle = new RAxisPainter(this.getDom(), this, this.xaxis, 'x_');\n         this.x_handle.setPadName(this.getPadName());\n         this.x_handle.snapid = this.snapid;\n         this.x_handle.draw_swapside = (sidex < 0);\n         this.x_handle.draw_ticks = ticksx;\n\n         this.y_handle = new RAxisPainter(this.getDom(), this, this.yaxis, 'y_');\n         this.y_handle.setPadName(this.getPadName());\n         this.y_handle.snapid = this.snapid;\n         this.y_handle.draw_swapside = (sidey < 0);\n         this.y_handle.draw_ticks = ticksy;\n\n         this.z_handle = new RAxisPainter(this.getDom(), this, this.zaxis, 'z_');\n         this.z_handle.setPadName(this.getPadName());\n         this.z_handle.snapid = this.snapid;\n\n         this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, false, [0,w], w, { reverse: false });\n         this.x_handle.assignFrameMembers(this,'x');\n\n         this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, true, [h,0], -h, { reverse: false });\n         this.y_handle.assignFrameMembers(this,'y');\n\n         // only get basic properties like log scale\n         this.z_handle.configureZAxis('zaxis', this);\n      }\n\n      let layer = this.getFrameSvg().select('.axis_layer');\n\n      this.x_handle.has_obstacle = false;\n\n      let draw_horiz = this.swap_xy ? this.y_handle : this.x_handle,\n          draw_vertical = this.swap_xy ? this.x_handle : this.y_handle,\n          pp = this.getPadPainter(), pr;\n\n      if (pp?._fast_drawing) {\n         pr = Promise.resolve(true); // do nothing\n      } else if (this.v6axes) {\n\n         // in v7 ticksx/y values shifted by 1 relative to v6\n         // In v7 ticksx == 0 means no ticks, ticksx == 1 equivalent to == 0 in v6\n\n         let can_adjust_frame = false, disable_x_draw = false, disable_y_draw = false;\n\n         draw_horiz.disable_ticks = (ticksx <= 0);\n         draw_vertical.disable_ticks = (ticksy <= 0);\n\n         let pr1 = draw_horiz.drawAxis(layer, w, h,\n                                   draw_horiz.invert_side ? undefined : `translate(0,${h})`,\n                                   (ticksx > 1) ? -h : 0, disable_x_draw,\n                                   undefined, false);\n\n         let pr2 =  draw_vertical.drawAxis(layer, w, h,\n                                      draw_vertical.invert_side ? `translate(${w})` : undefined,\n                                      (ticksy > 1) ? w : 0, disable_y_draw,\n                                      draw_vertical.invert_side ? 0 : this._frame_x, can_adjust_frame);\n\n         pr = Promise.all([pr1,pr2]).then(() => this.drawGrids());\n\n      } else {\n\n         let arr = [];\n\n         if (ticksx > 0)\n            arr.push(draw_horiz.drawAxis(layer, (sidex > 0) ? `translate(0,${h})` : '', sidex));\n\n         if (ticksy > 0)\n            arr.push(draw_vertical.drawAxis(layer, (sidey > 0) ? `translate(0,${h})` : `translate(${w},${h})`, sidey));\n\n         pr = Promise.all(arr).then(() => {\n            arr = [];\n            if (ticksx > 1)\n               arr.push(draw_horiz.drawAxisOtherPlace(layer, (sidex < 0) ? `translate(0,${h})` : '', -sidex, ticksx == 2));\n\n            if (ticksy > 1)\n               arr.push(draw_vertical.drawAxisOtherPlace(layer, (sidey < 0) ? `translate(0,${h})` : `translate(${w},${h})`, -sidey, ticksy == 2));\n            return Promise.all(arr);\n         }).then(() => this.drawGrids());\n      }\n\n      return pr.then(() => {\n         this.axes_drawn = true;\n         return true;\n      });\n   }\n\n   /** @summary Draw secondary configuread axes */\n   drawAxes2(second_x, second_y) {\n      let w = this.getFrameWidth(), h = this.getFrameHeight(),\n          layer = this.getFrameSvg().select('.axis_layer'),\n          pr1, pr2;\n\n      if (second_x) {\n         if (this.zoom_x2min != this.zoom_x2max) {\n            this.scale_x2min = this.zoom_x2min;\n            this.scale_x2max = this.zoom_x2max;\n         } else {\n           this.scale_x2min = this.x2min;\n           this.scale_x2max = this.x2max;\n         }\n         this.x2_handle = new RAxisPainter(this.getDom(), this, this.x2axis, 'x2_');\n         this.x2_handle.setPadName(this.getPadName());\n         this.x2_handle.snapid = this.snapid;\n\n         this.x2_handle.configureAxis('x2axis', this.x2min, this.x2max, this.scale_x2min, this.scale_x2max, false, [0,w], w, { reverse: false });\n         this.x2_handle.assignFrameMembers(this,'x2');\n\n         pr1 = this.x2_handle.drawAxis(layer, '', -1);\n      }\n\n      if (second_y) {\n         if (this.zoom_y2min != this.zoom_y2max) {\n            this.scale_y2min = this.zoom_y2min;\n            this.scale_y2max = this.zoom_y2max;\n         } else {\n            this.scale_y2min = this.y2min;\n            this.scale_y2max = this.y2max;\n         }\n\n         this.y2_handle = new RAxisPainter(this.getDom(), this, this.y2axis, 'y2_');\n         this.y2_handle.setPadName(this.getPadName());\n         this.y2_handle.snapid = this.snapid;\n\n         this.y2_handle.configureAxis('y2axis', this.y2min, this.y2max, this.scale_y2min, this.scale_y2max, true, [h,0], -h, { reverse: false });\n         this.y2_handle.assignFrameMembers(this,'y2');\n\n         pr2 = this.y2_handle.drawAxis(layer, `translate(${w},${h})`, -1);\n      }\n\n      return Promise.all([pr1,pr2]);\n   }\n\n   /** @summary Return functions to create x/y points based on coordinates\n     * @desc In default case returns frame painter itself\n     * @private */\n   getGrFuncs(second_x, second_y) {\n      let use_x2 = second_x && this.grx2,\n          use_y2 = second_y && this.gry2;\n      if (!use_x2 && !use_y2) return this;\n\n      return {\n         use_x2: use_x2,\n         grx: use_x2 ? this.grx2 : this.grx,\n         x_handle: use_x2 ? this.x2_handle : this.x_handle,\n         logx: use_x2 ? this.x2_handle.log : this.x_handle.log,\n         scale_xmin: use_x2 ? this.scale_x2min : this.scale_xmin,\n         scale_xmax: use_x2 ? this.scale_x2max : this.scale_xmax,\n         use_y2: use_y2,\n         gry: use_y2 ? this.gry2 : this.gry,\n         y_handle: use_y2 ? this.y2_handle : this.y_handle,\n         logy: use_y2 ? this.y2_handle.log : this.y_handle.log,\n         scale_ymin: use_y2 ? this.scale_y2min : this.scale_ymin,\n         scale_ymax: use_y2 ? this.scale_y2max : this.scale_ymax,\n         swap_xy: this.swap_xy,\n         fp: this,\n         revertAxis(name, v) {\n            if ((name == 'x') && this.use_x2) name = 'x2';\n            if ((name == 'y') && this.use_y2) name = 'y2';\n            return this.fp.revertAxis(name, v);\n         },\n         axisAsText(name, v) {\n            if ((name == 'x') && this.use_x2) name = 'x2';\n            if ((name == 'y') && this.use_y2) name = 'y2';\n            return this.fp.axisAsText(name, v);\n         }\n      };\n   }\n\n   /** @summary function called at the end of resize of frame\n     * @desc Used to update attributes on the server\n     * @private */\n   sizeChanged() {\n\n      let changes = {};\n      this.v7AttrChange(changes, 'margins_left', this.fX1NDC);\n      this.v7AttrChange(changes, 'margins_bottom', this.fY1NDC);\n      this.v7AttrChange(changes, 'margins_right', 1 - this.fX2NDC);\n      this.v7AttrChange(changes, 'margins_top', 1 - this.fY2NDC);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n\n      this.redrawPad();\n   }\n\n   /** @summary Remove all x/y functions\n     * @private */\n   cleanXY() {\n      // remove all axes drawings\n      let clean = (name,grname) => {\n         if (this[name]) {\n            this[name].cleanup();\n            delete this[name];\n         }\n         delete this[grname];\n      };\n\n      clean('x_handle', 'grx');\n      clean('y_handle', 'gry');\n      clean('z_handle', 'grz');\n      clean('x2_handle', 'grx2');\n      clean('y2_handle', 'gry2');\n\n      delete this.v6axes; // marker that v6 axes are used\n   }\n\n   /** @summary Remove all axes drawings\n     * @private */\n   cleanupAxes() {\n      this.cleanXY();\n\n      if (this.draw_g) {\n         this.draw_g.select('.grid_layer').selectAll('*').remove();\n         this.draw_g.select('.axis_layer').selectAll('*').remove();\n      }\n      this.axes_drawn = false;\n   }\n\n   /** @summary Removes all drawn elements of the frame\n     * @private */\n   cleanFrameDrawings() {\n      // cleanup all 3D drawings if any\n      if (isFunc(this.create3DScene))\n         this.create3DScene(-1);\n\n      this.cleanupAxes();\n\n      let clean = (name) => {\n         this[name+'min'] = this[name+'max'] = 0;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         this[`scale_${name}min`] = this[`scale_${name}max`] = 0;\n      };\n\n      clean('x');\n      clean('y');\n      clean('z');\n      clean('x2');\n      clean('y2');\n\n      if (this.draw_g) {\n         this.draw_g.select('.main_layer').selectAll('*').remove();\n         this.draw_g.select('.upper_layer').selectAll('*').remove();\n      }\n   }\n\n   /** @summary Fully cleanup frame\n     * @private */\n   cleanup() {\n\n      this.cleanFrameDrawings();\n\n      if (this.draw_g) {\n         this.draw_g.selectAll('*').remove();\n         this.draw_g.on('mousedown', null)\n                    .on('dblclick', null)\n                    .on('wheel', null)\n                    .on('contextmenu', null)\n                    .property('interactive_set', null);\n      }\n\n      if (this.keys_handler) {\n         window.removeEventListener('keydown', this.keys_handler, false);\n         this.keys_handler = null;\n      }\n      delete this.enabledKeys;\n      delete this.self_drawaxes;\n\n      delete this.xaxis;\n      delete this.yaxis;\n      delete this.zaxis;\n      delete this.x2axis;\n      delete this.y2axis;\n\n      delete this.draw_g; // frame <g> element managet by the pad\n\n      delete this._click_handler;\n      delete this._dblclick_handler;\n\n      let pp = this.getPadPainter();\n      if (pp?.frame_painter_ref === this)\n         delete pp.frame_painter_ref;\n\n      super.cleanup();\n   }\n\n   /** @summary Redraw frame\n     * @private */\n   redraw() {\n\n      let pp = this.getPadPainter();\n      if (pp) pp.frame_painter_ref = this;\n\n      // first update all attributes from objects\n      this.updateAttributes();\n\n      let rect = pp?.getPadRect() ?? { width: 10, height: 10 },\n          lm = Math.round(rect.width * this.fX1NDC),\n          w = Math.round(rect.width * (this.fX2NDC - this.fX1NDC)),\n          tm = Math.round(rect.height * (1 - this.fY2NDC)),\n          h = Math.round(rect.height * (this.fY2NDC - this.fY1NDC)),\n          rotate = false, fixpos = false, trans;\n\n      if (pp?.options) {\n         if (pp.options.RotateFrame) rotate = true;\n         if (pp.options.FixFrame) fixpos = true;\n      }\n\n      if (rotate) {\n         trans = `rotate(-90,${lm},${tm}) translate(${lm-h},${tm})`;\n         [w, h] = [h, w];\n      } else {\n         trans = `translate(${lm},${tm})`;\n      }\n\n      // update values here to let access even when frame is not really updated\n      this._frame_x = lm;\n      this._frame_y = tm;\n      this._frame_width = w;\n      this._frame_height = h;\n      this._frame_rotate = rotate;\n      this._frame_fixpos = fixpos;\n\n      if (this.mode3d) return this; // no need for real draw in mode3d\n\n      // this is svg:g object - container for every other items belonging to frame\n      this.draw_g = this.getFrameSvg();\n\n      let top_rect, main_svg;\n\n      if (this.draw_g.empty()) {\n\n         this.draw_g = this.getLayerSvg('primitives_layer').append('svg:g').attr('class', 'root_frame');\n\n         if (!isBatchMode())\n            this.draw_g.append('svg:title').text('');\n\n         top_rect = this.draw_g.append('svg:rect');\n\n         // append for the moment three layers - for drawing and axis\n         this.draw_g.append('svg:g').attr('class','grid_layer');\n\n         main_svg = this.draw_g.append('svg:svg')\n                           .attr('class','main_layer')\n                           .attr('x', 0)\n                           .attr('y', 0)\n                           .attr('overflow', 'hidden');\n\n         this.draw_g.append('svg:g').attr('class','axis_layer');\n         this.draw_g.append('svg:g').attr('class','upper_layer');\n      } else {\n         top_rect = this.draw_g.select('rect');\n         main_svg = this.draw_g.select('.main_layer');\n      }\n\n      this.axes_drawn = false;\n\n      this.draw_g.attr('transform', trans);\n\n      top_rect.attr('x', 0)\n              .attr('y', 0)\n              .attr('width', w)\n              .attr('height', h)\n              .attr('rx', this.lineatt.rx || null)\n              .attr('ry', this.lineatt.ry || null)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      main_svg.attr('width', w)\n              .attr('height', h)\n              .attr('viewBox', `0 0 ${w} ${h}`);\n\n      let pr = Promise.resolve(true);\n\n      if (this.v7EvalAttr('drawAxes')) {\n         this.self_drawaxes = true;\n         this.setAxesRanges();\n         pr = this.drawAxes().then(() => this.addInteractivity());\n      }\n\n      return pr.then(() => {\n         if (!isBatchMode()) {\n            top_rect.style('pointer-events', 'visibleFill');  // let process mouse events inside frame\n\n            FrameInteractive.assign(this);\n            this.addBasicInteractivity();\n         }\n\n         return this;\n      });\n   }\n\n   /** @summary Returns frame width */\n   getFrameWidth() { return this._frame_width || 0; }\n\n   /** @summary Returns frame height */\n   getFrameHeight() { return this._frame_height || 0; }\n\n   /** @summary Returns frame rectangle plus extra info for hint display */\n   getFrameRect() {\n      return {\n         x: this._frame_x || 0,\n         y: this._frame_y || 0,\n         width: this.getFrameWidth(),\n         height: this.getFrameHeight(),\n         transform: this.draw_g ? this.draw_g.attr('transform') : '',\n         hint_delta_x: 0,\n         hint_delta_y: 0\n      }\n   }\n\n   /** @summary Returns palette associated with frame */\n   getHistPalette() {\n      return this.getPadPainter().getHistPalette();\n   }\n\n   /** @summary Configure user-defined click handler\n     * @desc Function will be called every time when frame click was perfromed\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of click will be disabled */\n   configureUserClickHandler(handler) {\n      this._click_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary Configure user-defined dblclick handler\n     * @desc Function will be called every time when double click was called\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of dblclick (unzoom) will be disabled */\n   configureUserDblclickHandler(handler) {\n      this._dblclick_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary function can be used for zooming into specified range\n     * @desc if both limits for each axis 0 (like xmin == xmax == 0), axis will be unzoomed\n     * @return {Promise} with boolean flag if zoom operation was performed */\n   async zoom(xmin, xmax, ymin, ymax, zmin, zmax) {\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection) return false;\n\n      if (xmin === 'x') { xmin = xmax; xmax = ymin; ymin = undefined; } else\n      if (xmin === 'y') { ymax = ymin; ymin = xmax; xmin = xmax = undefined; } else\n      if (xmin === 'z') { zmin = xmax; zmax = ymin; xmin = xmax = ymin = undefined; }\n\n      let zoom_x = (xmin !== xmax), zoom_y = (ymin !== ymax), zoom_z = (zmin !== zmax),\n          unzoom_x = false, unzoom_y = false, unzoom_z = false;\n\n      if (zoom_x) {\n         let cnt = 0;\n         if (xmin <= this.xmin) { xmin = this.xmin; cnt++; }\n         if (xmax >= this.xmax) { xmax = this.xmax; cnt++; }\n         if (cnt === 2) { zoom_x = false; unzoom_x = true; }\n      } else {\n         unzoom_x = (xmin === xmax) && (xmin === 0);\n      }\n\n      if (zoom_y) {\n         let cnt = 0;\n         if (ymin <= this.ymin) { ymin = this.ymin; cnt++; }\n         if (ymax >= this.ymax) { ymax = this.ymax; cnt++; }\n         if (cnt === 2) { zoom_y = false; unzoom_y = true; }\n      } else {\n         unzoom_y = (ymin === ymax) && (ymin === 0);\n      }\n\n      if (zoom_z) {\n         let cnt = 0;\n         // if (this.logz && this.ymin_nz && this.getDimension()===2) main_zmin = 0.3*this.ymin_nz;\n         if (zmin <= this.zmin) { zmin = this.zmin; cnt++; }\n         if (zmax >= this.zmax) { zmax = this.zmax; cnt++; }\n         if (cnt === 2) { zoom_z = false; unzoom_z = true; }\n      } else {\n         unzoom_z = (zmin === zmax) && (zmin === 0);\n      }\n\n      let changed = false,\n          r_x = '', r_y = '', r_z = '', is_any_check = false,\n         req = {\n            _typename: 'ROOT::Experimental::RFrame::RUserRanges',\n            values: [0, 0, 0, 0, 0, 0],\n            flags: [false, false, false, false, false, false]\n         };\n\n      const checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_x && (force || painter.canZoomInside('x', xmin, xmax))) {\n            this.zoom_xmin = xmin;\n            this.zoom_xmax = xmax;\n            changed = true; r_x = '0';\n            zoom_x = false;\n            req.values[0] = xmin; req.values[1] = xmax;\n            req.flags[0] = req.flags[1] = true;\n         }\n         if (zoom_y && (force || painter.canZoomInside('y', ymin, ymax))) {\n            this.zoom_ymin = ymin;\n            this.zoom_ymax = ymax;\n            changed = true; r_y = '1';\n            zoom_y = false;\n            req.values[2] = ymin; req.values[3] = ymax;\n            req.flags[2] = req.flags[3] = true;\n         }\n         if (zoom_z && (force || painter.canZoomInside('z', zmin, zmax))) {\n            this.zoom_zmin = zmin;\n            this.zoom_zmax = zmax;\n            changed = true; r_z = '2';\n            zoom_z = false;\n            req.values[4] = zmin; req.values[5] = zmax;\n            req.flags[4] = req.flags[5] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_x || zoom_y || zoom_z)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      // and process unzoom, if any\n      if (unzoom_x || unzoom_y || unzoom_z) {\n         if (unzoom_x) {\n            if (this.zoom_xmin !== this.zoom_xmax) { changed = true; r_x = '0'; }\n            this.zoom_xmin = this.zoom_xmax = 0;\n            req.values[0] = req.values[1] = -1;\n         }\n         if (unzoom_y) {\n            if (this.zoom_ymin !== this.zoom_ymax) { changed = true; r_y = '1'; }\n            this.zoom_ymin = this.zoom_ymax = 0;\n            req.values[2] = req.values[3] = -1;\n         }\n         if (unzoom_z) {\n            if (this.zoom_zmin !== this.zoom_zmax) { changed = true; r_z = '2'; }\n            this.zoom_zmin = this.zoom_zmax = 0;\n            req.values[4] = req.values[5] = -1;\n         }\n      }\n\n      if (!changed) return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: 'ROOT::Experimental::RFrame::RZoomRequest', ranges: req });\n\n      return this.interactiveRedraw('pad', 'zoom' + r_x + r_y + r_z).then(() => true);\n   }\n\n   /** @summary Provide zooming of single axis\n     * @desc One can specify names like x/y/z but also second axis x2 or y2 */\n   async zoomSingle(name, vmin, vmax) {\n\n      let names = ['x','y','z','x2','y2'], indx = names.indexOf(name);\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection || !this[name+'_handle'] || (indx < 0))\n         return false;\n\n      let zoom_v = (vmin !== vmax), unzoom_v = false;\n\n      if (zoom_v) {\n         let cnt = 0;\n         if (vmin <= this[name+'min']) { vmin = this[name+'min']; cnt++; }\n         if (vmax >= this[name+'max']) { vmax = this[name+'max']; cnt++; }\n         if (cnt === 2) { zoom_v = false; unzoom_v = true; }\n      } else {\n         unzoom_v = (vmin === vmax) && (vmin === 0);\n      }\n\n      let changed = false, is_any_check = false,\n          req = {\n             _typename: 'ROOT::Experimental::RFrame::RUserRanges',\n             values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n             flags: [false, false, false, false, false, false, false, false, false, false]\n          };\n\n      let checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter?.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_v && (force || painter.canZoomInside(name[0], vmin, vmax))) {\n            this['zoom_' + name + 'min'] = vmin;\n            this['zoom_' + name + 'max'] = vmax;\n            changed = true;\n            zoom_v = false;\n            req.values[indx*2] = vmin; req.values[indx*2+1] = vmax;\n            req.flags[indx*2] = req.flags[indx*2+1] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_v)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      if (unzoom_v) {\n         if (this[`zoom_${name}min`] !== this[`zoom_${name}max`]) changed = true;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         req.values[indx*2] = req.values[indx*2+1] = -1;\n      }\n\n      if (!changed) return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: 'ROOT::Experimental::RFrame::RZoomRequest', ranges: req });\n\n      return this.interactiveRedraw('pad', 'zoom' + indx).then(() => true);\n   }\n\n   /** @summary Checks if specified axis zoomed */\n   isAxisZoomed(axis) {\n      return this['zoom_'+axis+'min'] !== this['zoom_'+axis+'max'];\n   }\n\n   /** @summary Unzoom specified axes\n     * @return {Promise} with boolean flag if zoom is changed */\n   async unzoom(dox, doy, doz) {\n      if (dox == 'all')\n         return this.unzoom('x2').then(() => this.unzoom('y2')).then(() => this.unzoom('xyz'));\n\n      if ((dox == 'x2') || (dox == 'y2'))\n         return this.zoomSingle(dox, 0, 0).then(changed => {\n            if (changed) this.zoomChangedInteractive(dox, 'unzoom');\n            return changed;\n         });\n\n      if (typeof dox === 'undefined') { dox = doy = doz = true; } else\n      if (isStr(dox)) { doz = dox.indexOf('z') >= 0; doy = dox.indexOf('y') >= 0; dox = dox.indexOf('x') >= 0; }\n\n      return this.zoom(dox ? 0 : undefined, dox ? 0 : undefined,\n                       doy ? 0 : undefined, doy ? 0 : undefined,\n                       doz ? 0 : undefined, doz ? 0 : undefined).then(changed => {\n\n         if (changed && dox) this.zoomChangedInteractive('x', 'unzoom');\n         if (changed && doy) this.zoomChangedInteractive('y', 'unzoom');\n         if (changed && doz) this.zoomChangedInteractive('z', 'unzoom');\n\n         return changed;\n      });\n   }\n\n   /** @summary Mark/check if zoom for specific axis was changed interactively\n     * @private */\n   zoomChangedInteractive(axis, value) {\n      if (axis == 'reset') {\n         this.zoom_changed_x = this.zoom_changed_y = this.zoom_changed_z = undefined;\n         return;\n      }\n      if (!axis || axis == 'any')\n         return this.zoom_changed_x || this.zoom_changed_y  || this.zoom_changed_z;\n\n      if ((axis !== 'x') && (axis !== 'y') && (axis !== 'z')) return;\n\n      let fld = 'zoom_changed_' + axis;\n      if (value === undefined) return this[fld];\n\n      if (value === 'unzoom') {\n         // special handling of unzoom, only if was never changed before flag set to true\n         this[fld] = (this[fld] === undefined);\n         return;\n      }\n\n      if (value) this[fld] = true;\n   }\n\n   /** @summary Fill menu for frame when server is not there */\n   fillObjectOfflineMenu(menu, kind) {\n      if ((kind != 'x') && (kind != 'y')) return;\n\n      menu.add('Unzoom', () => this.unzoom(kind));\n\n      //if (this[kind+'_kind'] == 'normal')\n      //   menu.addchk(this['log'+kind], 'SetLog'+kind, this.toggleAxisLog.bind(this, kind));\n\n      // here should be all axes attributes in offline\n   }\n\n   /** @summary Set grid drawing for specified axis */\n   changeFrameAttr(attr, value) {\n      let changes = {};\n      this.v7AttrChange(changes, attr, value);\n      this.v7SetAttr(attr, value);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      this.redrawPad();\n   }\n\n   /** @summary Fill context menu */\n   fillContextMenu(menu, kind, /* obj */) {\n\n      // when fill and show context menu, remove all zooming\n\n      if ((kind == 'x') || (kind == 'y') || (kind == 'x2') || (kind == 'y2')) {\n         let handle = this[kind+'_handle'];\n         if (!handle) return false;\n         menu.add('header: ' + kind.toUpperCase() + ' axis');\n         return handle.fillAxisContextMenu(menu, kind);\n      }\n\n      let alone = menu.size() == 0;\n\n      if (alone)\n         menu.add('header:Frame');\n      else\n         menu.add('separator');\n\n      if (this.zoom_xmin !== this.zoom_xmax)\n         menu.add('Unzoom X', () => this.unzoom('x'));\n      if (this.zoom_ymin !== this.zoom_ymax)\n         menu.add('Unzoom Y', () => this.unzoom('y'));\n      if (this.zoom_zmin !== this.zoom_zmax)\n         menu.add('Unzoom Z', () => this.unzoom('z'));\n      if (this.zoom_x2min !== this.zoom_x2max)\n         menu.add('Unzoom X2', () => this.unzoom('x2'));\n      if (this.zoom_y2min !== this.zoom_y2max)\n         menu.add('Unzoom Y2', () => this.unzoom('y2'));\n      menu.add('Unzoom all', () => this.unzoom('all'));\n\n      menu.add('separator');\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (this.x_handle)\n         menu.addchk(this.x_handle.draw_grid, 'Grid x', flag => this.changeFrameAttr('gridX', flag));\n      if (this.y_handle)\n         menu.addchk(this.y_handle.draw_grid, 'Grid y', flag => this.changeFrameAttr('gridY', flag));\n      if (this.x_handle && !this.x2_handle)\n         menu.addchk(this.x_handle.draw_swapside, 'Swap x', flag => this.changeFrameAttr('swapX', flag));\n      if (this.y_handle && !this.y2_handle)\n         menu.addchk(this.y_handle.draw_swapside, 'Swap y', flag => this.changeFrameAttr('swapY', flag));\n      if (this.x_handle && !this.x2_handle) {\n         menu.add('sub:Ticks x');\n         menu.addchk(this.x_handle.draw_ticks == 0, 'off', () => this.changeFrameAttr('ticksX', 0));\n         menu.addchk(this.x_handle.draw_ticks == 1, 'normal', () => this.changeFrameAttr('ticksX', 1));\n         menu.addchk(this.x_handle.draw_ticks == 2, 'ticks on both sides', () => this.changeFrameAttr('ticksX', 2));\n         menu.addchk(this.x_handle.draw_ticks == 3, 'labels on both sides', () => this.changeFrameAttr('ticksX', 3));\n         menu.add('endsub:');\n       }\n      if (this.y_handle && !this.y2_handle) {\n         menu.add('sub:Ticks y');\n         menu.addchk(this.y_handle.draw_ticks == 0, 'off', () => this.changeFrameAttr('ticksY', 0));\n         menu.addchk(this.y_handle.draw_ticks == 1, 'normal', () => this.changeFrameAttr('ticksY', 1));\n         menu.addchk(this.y_handle.draw_ticks == 2, 'ticks on both sides', () => this.changeFrameAttr('ticksY', 2));\n         menu.addchk(this.y_handle.draw_ticks == 3, 'labels on both sides', () => this.changeFrameAttr('ticksY', 3));\n         menu.add('endsub:');\n       }\n\n      menu.addAttributesMenu(this, alone ? '' : 'Frame ');\n      menu.add('separator');\n      menu.add('Save as frame.png', () => this.getPadPainter().saveAs('png', 'frame', 'frame.png'));\n      menu.add('Save as frame.svg', () => this.getPadPainter().saveAs('svg', 'frame', 'frame.svg'));\n\n      return true;\n   }\n\n   /** @summary Convert graphical coordinate into axis value */\n   revertAxis(axis, pnt) {\n      let handle = this[axis+'_handle'];\n      return handle ? handle.revertPoint(pnt) : 0;\n   }\n\n   /** @summary Show axis status message\n     * @desc method called normally when mouse enter main object element\n     * @private */\n   showAxisStatus(axis_name, evnt) {\n\n      let taxis = null, hint_name = axis_name, hint_title = 'axis',\n          m = d3_pointer(evnt, this.getFrameSvg().node()), id = (axis_name == 'x') ? 0 : 1;\n\n      if (taxis) { hint_name = taxis.fName; hint_title = taxis.fTitle || 'axis object'; }\n\n      if (this.swap_xy) id = 1-id;\n\n      let axis_value = this.revertAxis(axis_name, m[id]);\n\n      this.showObjectStatus(hint_name, hint_title, axis_name + ' : ' + this.axisAsText(axis_name, axis_value), Math.round(m[0]) + ',' + Math.round(m[1]));\n   }\n\n   /** @summary Add interactive keys handlers\n    * @private */\n   addKeysHandler() {\n      if (isBatchMode()) return;\n      FrameInteractive.assign(this);\n      this.addFrameKeysHandler();\n   }\n\n   /** @summary Add interactive functionality to the frame\n    * @private */\n   addInteractivity(for_second_axes) {\n\n      if (isBatchMode() || (!settings.Zooming && !settings.ContextMenu))\n         return true;\n      FrameInteractive.assign(this);\n      return this.addFrameInteractivity(for_second_axes);\n   }\n\n   /** @summary Set selected range back to pad object - to be implemented\n     * @private */\n   setRootPadRange(/* pad, is3d */) {\n      // TODO: change of pad range and send back to root application\n   }\n\n   /** @summary Toggle log scale on the specified axes */\n   toggleAxisLog(axis) {\n      let handle = this[axis+'_handle'];\n      if (handle) handle.changeAxisLog('toggle');\n   }\n\n} // class RFramePainter\n\nexport { RFramePainter };\n","import { gStyle, settings, constants, internals, addMethods,\n         isPromise, getPromise, isBatchMode, isObject, isFunc, isStr, btoa_func, clTPad } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { ColorPalette, addColor, getRootColors } from '../base/colors.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { getElementRect, getAbsPosInCanvas, DrawOptions, compressSVG } from '../base/BasePainter.mjs';\nimport { selectActivePad, getActivePad } from '../base/ObjectPainter.mjs';\nimport { registerForResize, saveFile } from '../gui/utils.mjs';\nimport { BrowserLayout } from '../gui/display.mjs';\nimport { createMenu, closeMenu } from '../gui/menu.mjs';\nimport { PadButtonsHandler } from './TPadPainter.mjs';\n\n\n/**\n * @summary Painter class for RPad\n *\n * @private\n */\n\nclass RPadPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, pad, iscan) {\n      super(dom, pad, '', 'pad');\n      this.pad = pad;\n      this.iscan = iscan; // indicate if working with canvas\n      this.this_pad_name = '';\n      if (!this.iscan && (pad !== null)) {\n         if (pad.fObjectID)\n            this.this_pad_name = 'pad' + pad.fObjectID; // use objectid as padname\n         else\n            this.this_pad_name = 'ppp' + internals.id_counter++; // artificical name\n      }\n      this.painters = []; // complete list of all painters in the pad\n      this.has_canvas = true;\n      this.forEachPainter = this.forEachPainterInPad;\n   }\n\n   /** @summary Indicates that is not Root6 pad painter\n    * @private */\n   isRoot6() { return false; }\n\n  /** @summary Returns SVG element for the pad itself\n    * @private */\n   svg_this_pad() {\n      return this.getPadSvg(this.this_pad_name);\n   }\n\n   /** @summary Returns main painter on the pad\n     * @desc Typically main painter is TH1/TH2 object which is drawing axes\n    * @private */\n   getMainPainter() {\n      return this.main_painter_ref || null;\n   }\n\n   /** @summary Assign main painter on the pad\n    * @private */\n   setMainPainter(painter, force) {\n      if (!this.main_painter_ref || force)\n         this.main_painter_ref = painter;\n   }\n\n   /** @summary cleanup pad and all primitives inside */\n   cleanup() {\n      if (this._doing_draw)\n         console.error('pad drawing is not completed when cleanup is called');\n\n      this.painters.forEach(p => p.cleanup());\n\n      let svg_p = this.svg_this_pad();\n      if (!svg_p.empty()) {\n         svg_p.property('pad_painter', null);\n         if (!this.iscan) svg_p.remove();\n      }\n\n      delete this.main_painter_ref;\n      delete this.frame_painter_ref;\n      delete this.pads_cache;\n      delete this._pad_x;\n      delete this._pad_y;\n      delete this._pad_width;\n      delete this._pad_height;\n      delete this._doing_draw;\n      delete this._dfltRFont;\n\n      this.painters = [];\n      this.pad = null;\n      this.draw_object = null;\n      this.pad_frame = null;\n      this.this_pad_name = undefined;\n      this.has_canvas = false;\n\n      selectActivePad({ pp: this, active: false });\n\n      super.cleanup();\n   }\n\n   /** @summary Returns frame painter inside the pad\n    * @private */\n   getFramePainter() { return this.frame_painter_ref; }\n\n   /** @summary get pad width */\n   getPadWidth() { return this._pad_width || 0; }\n\n   /** @summary get pad height */\n   getPadHeight() { return this._pad_height || 0; }\n\n   /** @summary get pad rect */\n   getPadRect() {\n      return {\n         x: this._pad_x || 0,\n         y: this._pad_y || 0,\n         width: this.getPadWidth(),\n         height: this.getPadHeight()\n      }\n   }\n\n   /** @summary Returns frame coordiantes - also when frame is not drawn */\n   getFrameRect() {\n      let fp = this.getFramePainter();\n      if (fp) return fp.getFrameRect();\n\n      let w = this.getPadWidth(),\n          h = this.getPadHeight(),\n          rect = {};\n\n      rect.szx = Math.round(0.5*w);\n      rect.szy = Math.round(0.5*h);\n      rect.width = 2*rect.szx;\n      rect.height = 2*rect.szy;\n      rect.x = Math.round(w/2 - rect.szx);\n      rect.y = Math.round(h/2 - rect.szy);\n      rect.hint_delta_x = rect.szx;\n      rect.hint_delta_y = rect.szy;\n      rect.transform = `translate(${rect.x},${rect.y})`;\n      return rect;\n   }\n\n   /** @summary return RPad object */\n   getRootPad(is_root6) {\n      return (is_root6 === undefined) || !is_root6 ? this.pad : null;\n   }\n\n   /** @summary Cleanup primitives from pad - selector lets define which painters to remove\n    * @private */\n   cleanPrimitives(selector) {\n      if (!isFunc(selector)) return;\n\n      for (let k = this.painters.length-1; k >= 0; --k)\n         if (selector(this.painters[k])) {\n            this.painters[k].cleanup();\n            this.painters.splice(k, 1);\n         }\n   }\n\n   /** @summary Try to find painter for specified object\n     * @desc can be used to find painter for some special objects, registered as\n     * histogram functions\n     * @private */\n   findPainterFor(selobj, selname, seltype) {\n      return this.painters.find(p => {\n         let pobj = p.getObject();\n         if (!pobj) return;\n\n         if (selobj && (pobj === selobj)) return true;\n         if (!selname && !seltype) return;\n         if (selname && (pobj.fName !== selname)) return;\n         if (seltype && (pobj._typename !== seltype)) return;\n         return true;\n      });\n   }\n\n   /** @summary Returns palette associated with pad.\n     * @desc Either from existing palette painter or just default palette */\n   getHistPalette() {\n      let pp = this.findPainterFor(undefined, undefined, 'ROOT::Experimental::RPaletteDrawable');\n\n      if (pp) return pp.getHistPalette();\n\n      if (!this.fDfltPalette) {\n         this.fDfltPalette = {\n            _typename: 'ROOT::Experimental::RPalette',\n            fColors: [{ fOrdinal: 0,     fColor: { fColor: 'rgb(53, 42, 135)' } },\n                      { fOrdinal: 0.125, fColor: { fColor: 'rgb(15, 92, 221)' } },\n                      { fOrdinal: 0.25,  fColor: { fColor: 'rgb(20, 129, 214)' } },\n                      { fOrdinal: 0.375, fColor: { fColor: 'rgb(6, 164, 202)' } },\n                      { fOrdinal: 0.5,   fColor: { fColor: 'rgb(46, 183, 164)' } },\n                      { fOrdinal: 0.625, fColor: { fColor: 'rgb(135, 191, 119)' } },\n                      { fOrdinal: 0.75,  fColor: { fColor: 'rgb(209, 187, 89)' } },\n                      { fOrdinal: 0.875, fColor: { fColor: 'rgb(254, 200, 50)' } },\n                      { fOrdinal: 1,     fColor: { fColor: 'rgb(249, 251, 14)' } }],\n             fInterpolate: true,\n             fNormalized: true\n         };\n         addMethods(this.fDfltPalette, 'ROOT::Experimental::RPalette');\n      }\n\n      return this.fDfltPalette;\n   }\n\n   /** @summary Returns number of painters\n     * @private */\n   getNumPainters() { return this.painters.length; }\n\n   /** @summary Call function for each painter in pad\n     * @param {function} userfunc - function to call\n     * @param {string} kind - 'all' for all objects (default), 'pads' only pads and subpads, 'objects' only for object in current pad\n     * @private */\n   forEachPainterInPad(userfunc, kind) {\n      if (!kind) kind = 'all';\n      if (kind != 'objects') userfunc(this);\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (isFunc(sub.forEachPainterInPad)) {\n            if (kind!='objects') sub.forEachPainterInPad(userfunc, kind);\n         } else if (kind != 'pads') userfunc(sub);\n      }\n   }\n\n   /** @summary register for pad events receiver\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   registerForPadEvents(receiver) {\n      this.pad_events_receiver = receiver;\n   }\n\n   /** @summary Generate pad events, normally handled by GED\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   producePadEvent(what, padpainter, painter, position, place) {\n      if ((what == 'select') && isFunc(this.selectActivePad))\n         this.selectActivePad(padpainter, painter, position);\n\n      if (this.pad_events_receiver)\n         this.pad_events_receiver({ what, padpainter, painter, position, place });\n   }\n\n   /** @summary method redirect call to pad events receiver */\n   selectObjectPainter(painter, pos, place) {\n\n      let istoppad = (this.iscan || !this.has_canvas),\n          canp = istoppad ? this : this.getCanvPainter();\n\n      if (painter === undefined) painter = this;\n\n      if (pos && !istoppad)\n         pos = getAbsPosInCanvas(this.svg_this_pad(), pos);\n\n      selectActivePad({ pp: this, active: true });\n\n      canp.producePadEvent('select', this, painter, pos, place);\n   }\n\n   /** @summary Create SVG element for the canvas */\n   createCanvasSvg(check_resize, new_size) {\n\n      let factor = null, svg = null, lmt = 5, rect = null, btns, frect;\n\n      if (check_resize > 0) {\n\n         if (this._fixed_size) return (check_resize > 1); // flag used to force re-drawing of all subpads\n\n         svg = this.getCanvSvg();\n\n         if (svg.empty()) return false;\n\n         factor = svg.property('height_factor');\n\n         rect = this.testMainResize(check_resize, null, factor);\n\n         if (!rect.changed) return false;\n\n         if (!isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n\n         frect = svg.select('.canvas_fillrect');\n\n      } else {\n\n         let render_to = this.selectDom();\n\n         if (render_to.style('position') == 'static')\n            render_to.style('position', 'relative');\n\n         svg = render_to.append('svg')\n             .attr('class', 'jsroot root_canvas')\n             .property('pad_painter', this) // this is custom property\n             .property('current_pad', '') // this is custom property\n             .property('redraw_by_resize', false); // could be enabled to force redraw by each resize\n\n         this.setTopPainter(); //assign canvas as top painter of that element\n\n         if (!isBatchMode() && !this.online_canvas)\n            svg.append('svg:title').text('ROOT canvas');\n\n         frect = svg.append('svg:path').attr('class','canvas_fillrect');\n         if (!isBatchMode())\n            frect.style('pointer-events', 'visibleFill')\n                 .on('dblclick', evnt => this.enlargePad(evnt))\n                 .on('click', () => this.selectObjectPainter(this, null))\n                 .on('mouseenter', () => this.showObjectStatus())\n                 .on('contextmenu', settings.ContextMenu ? evnt => this.padContextMenu(evnt) : null);\n\n         svg.append('svg:g').attr('class', 'primitives_layer');\n         svg.append('svg:g').attr('class', 'info_layer');\n         if (!isBatchMode())\n            btns = svg.append('svg:g')\n                      .attr('class','btns_layer')\n                      .property('leftside', settings.ToolBarSide == 'left')\n                      .property('vertical', settings.ToolBarVert);\n\n         factor = 0.66;\n         if (this.pad && this.pad.fWinSize[0] && this.pad.fWinSize[1]) {\n            factor = this.pad.fWinSize[1] / this.pad.fWinSize[0];\n            if ((factor < 0.1) || (factor > 10)) factor = 0.66;\n         }\n\n         if (this._fixed_size) {\n            render_to.style('overflow','auto');\n            rect = { width: this.pad.fWinSize[0], height: this.pad.fWinSize[1] };\n            if (!rect.width || !rect.height)\n               rect = getElementRect(render_to);\n         } else {\n            rect = this.testMainResize(2, new_size, factor);\n         }\n      }\n\n      this.createAttFill({ pattern: 1001, color: 0 });\n\n      if ((rect.width <= lmt) || (rect.height <= lmt)) {\n         svg.style('display', 'none');\n         console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);\n         rect.width = 200; rect.height = 100; // just to complete drawing\n      } else {\n         svg.style('display', null);\n      }\n\n      if (this._fixed_size) {\n         svg.attr('x', 0)\n            .attr('y', 0)\n            .attr('width', rect.width)\n            .attr('height', rect.height)\n            .style('position', 'absolute');\n      } else {\n        svg.attr('x', 0)\n           .attr('y', 0)\n           .style('width', '100%')\n           .style('height', '100%')\n           .style('position', 'absolute')\n           .style('left', 0)\n           .style('top', 0)\n           .style('right', 0)\n           .style('bottom', 0);\n      }\n\n      svg.style('filter', settings.DarkMode ? 'invert(100%)' : null);\n\n      svg.attr('viewBox', `0 0 ${rect.width} ${rect.height}`)\n         .attr('preserveAspectRatio', 'none')  // we do not preserve relative ratio\n         .property('height_factor', factor)\n         .property('draw_x', 0)\n         .property('draw_y', 0)\n         .property('draw_width', rect.width)\n         .property('draw_height', rect.height);\n\n      this._pad_x = 0;\n      this._pad_y = 0;\n      this._pad_width = rect.width;\n      this._pad_height = rect.height;\n\n      frect.attr('d', `M0,0H${rect.width}V${rect.height}H0Z`)\n           .call(this.fillatt.func);\n\n      this._fast_drawing = settings.SmallPad && ((rect.width < settings.SmallPad.width) || (rect.height < settings.SmallPad.height));\n\n      if (this.alignButtons && btns)\n         this.alignButtons(btns, rect.width, rect.height);\n\n      return true;\n   }\n\n   /** @summary Enlarge pad draw element when possible */\n   enlargePad(evnt) {\n\n      if (evnt) {\n         evnt.preventDefault();\n         evnt.stopPropagation();\n      }\n\n      let svg_can = this.getCanvSvg(),\n          pad_enlarged = svg_can.property('pad_enlarged');\n\n      if (this.iscan || !this.has_canvas || (!pad_enlarged && !this.hasObjectsToDraw() && !this.painters)) {\n         if (this._fixed_size) return; // canvas cannot be enlarged in such mode\n         if (!this.enlargeMain('toggle')) return;\n         if (this.enlargeMain('state') == 'off') svg_can.property('pad_enlarged', null);\n      } else if (!pad_enlarged) {\n         this.enlargeMain(true, true);\n         svg_can.property('pad_enlarged', this.pad);\n      } else if (pad_enlarged === this.pad) {\n         this.enlargeMain(false);\n         svg_can.property('pad_enlarged', null);\n      } else {\n         console.error('missmatch with pad double click events');\n      }\n\n      let was_fast = this._fast_drawing;\n\n      this.checkResize(true);\n\n      if (this._fast_drawing != was_fast)\n         this.showPadButtons();\n   }\n\n   /** @summary Create SVG element for the pad\n     * @return true when pad is displayed and all its items should be redrawn */\n   createPadSvg(only_resize) {\n\n      if (!this.has_canvas) {\n         this.createCanvasSvg(only_resize ? 2 : 0);\n         return true;\n      }\n\n      let svg_parent = this.getPadSvg(this.pad_name), // this.pad_name MUST be here to select parent pad\n          svg_can = this.getCanvSvg(),\n          width = svg_parent.property('draw_width'),\n          height = svg_parent.property('draw_height'),\n          pad_enlarged = svg_can.property('pad_enlarged'),\n          pad_visible = true,\n          w = width, h = height, x = 0, y = 0,\n          svg_pad = null, svg_rect = null, btns = null;\n\n      if (this.pad && this.pad.fPos && this.pad.fSize) {\n         x = Math.round(width * this.pad.fPos.fHoriz.fArr[0]);\n         y = Math.round(height * this.pad.fPos.fVert.fArr[0]);\n         w = Math.round(width * this.pad.fSize.fHoriz.fArr[0]);\n         h = Math.round(height * this.pad.fSize.fVert.fArr[0]);\n      }\n\n      if (pad_enlarged) {\n         pad_visible = false;\n         if (pad_enlarged === this.pad)\n            pad_visible = true;\n         else\n            this.forEachPainterInPad(pp => { if (pp.getObject() == pad_enlarged) pad_visible = true; }, 'pads');\n\n         if (pad_visible) { w = width; h = height; x = y = 0; }\n      }\n\n      if (only_resize) {\n         svg_pad = this.svg_this_pad();\n         svg_rect = svg_pad.select('.root_pad_border');\n         if (!isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n      } else {\n         svg_pad = svg_parent.select('.primitives_layer')\n             .append('svg:svg') // here was g before, svg used to blend all drawin outside\n             .classed('__root_pad_' + this.this_pad_name, true)\n             .attr('pad', this.this_pad_name) // set extra attribute  to mark pad name\n             .property('pad_painter', this); // this is custom property\n\n         if (!isBatchMode())\n            svg_pad.append('svg:title').text('ROOT subpad');\n\n         svg_rect = svg_pad.append('svg:path').attr('class', 'root_pad_border');\n\n         svg_pad.append('svg:g').attr('class','primitives_layer');\n         if (!isBatchMode())\n            btns = svg_pad.append('svg:g')\n                          .attr('class','btns_layer')\n                          .property('leftside', settings.ToolBarSide != 'left')\n                          .property('vertical', settings.ToolBarVert);\n\n         if (settings.ContextMenu)\n            svg_rect.on('contextmenu', evnt => this.padContextMenu(evnt));\n\n         if (!isBatchMode())\n            svg_rect.style('pointer-events', 'visibleFill') // get events also for not visible rect\n                    .on('dblclick', evnt => this.enlargePad(evnt))\n                    .on('click', () => this.selectObjectPainter(this, null))\n                    .on('mouseenter', () => this.showObjectStatus());\n      }\n\n      this.createAttFill({ attr: this.pad });\n\n      this.createAttLine({ attr: this.pad, color0: this.pad.fBorderMode == 0 ? 'none' : '' });\n\n      svg_pad.style('display', pad_visible ? null : 'none')\n             .attr('viewBox', `0 0 ${w} ${h}`) // due to svg\n             .attr('preserveAspectRatio', 'none')   // due to svg, we do not preserve relative ratio\n             .attr('x', x)    // due to svg\n             .attr('y', y)   // due to svg\n             .attr('width', w)    // due to svg\n             .attr('height', h)   // due to svg\n             .property('draw_x', x) // this is to make similar with canvas\n             .property('draw_y', y)\n             .property('draw_width', w)\n             .property('draw_height', h);\n\n      this._pad_x = x;\n      this._pad_y = y;\n      this._pad_width = w;\n      this._pad_height = h;\n\n      svg_rect.attr('d', `M0,0H${w}V${h}H0Z`)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      this._fast_drawing = settings.SmallPad && ((w < settings.SmallPad.width) || (h < settings.SmallPad.height));\n\n       // special case of 3D canvas overlay\n      if (svg_pad.property('can3d') === constants.Embed3D.Overlay)\n          this.selectDom().select('.draw3d_' + this.this_pad_name)\n              .style('display', pad_visible ? '' : 'none');\n\n      if (this.alignButtons && btns) this.alignButtons(btns, w, h);\n\n      return pad_visible;\n   }\n\n   /** @summary returns true if any objects beside sub-pads exists in the pad */\n   hasObjectsToDraw() {\n      let arr = this.pad ? this.pad.fPrimitives : null;\n      return arr && arr.find(obj => obj._typename != 'ROOT::Experimental::RPadDisplayItem') ? true : false;\n   }\n\n   /** @summary sync drawing/redrawing/resize of the pad\n     * @param {string} kind - kind of draw operation, if true - always queued\n     * @return {Promise} when pad is ready for draw operation or false if operation already queued\n     * @private */\n   syncDraw(kind) {\n      let entry = { kind : kind || 'redraw' };\n      if (this._doing_draw === undefined) {\n         this._doing_draw = [ entry ];\n         return Promise.resolve(true);\n      }\n      // if queued operation registered, ignore next calls, indx == 0 is running operation\n      if ((entry.kind !== true) && (this._doing_draw.findIndex((e,i) => (i > 0) && (e.kind == entry.kind)) > 0))\n         return false;\n      this._doing_draw.push(entry);\n      return new Promise(resolveFunc => {\n         entry.func = resolveFunc;\n      });\n   }\n\n   /** @summary confirms that drawing is completed, may trigger next drawing immediately\n     * @private */\n   confirmDraw() {\n      if (this._doing_draw === undefined)\n         return console.warn('failure, should not happen');\n      this._doing_draw.shift();\n      if (this._doing_draw.length == 0) {\n         delete this._doing_draw;\n      } else {\n         let entry = this._doing_draw[0];\n         if(entry.func) { entry.func(); delete entry.func; }\n      }\n   }\n\n   /** @summary Draw single primitive */\n   async drawObject(/*dom, obj, opt*/) {\n      console.log('Not possible to draw object without loading of draw.mjs');\n      return null;\n   }\n\n   /** @summary Draw pad primitives\n     * @private */\n   async drawPrimitives(indx) {\n\n      if (indx === undefined) {\n         if (this.iscan)\n            this._start_tm = new Date().getTime();\n\n         // set number of primitves\n         this._num_primitives = this.pad && this.pad.fPrimitives ? this.pad.fPrimitives.length : 0;\n\n         return this.syncDraw(true).then(() => this.drawPrimitives(0));\n      }\n\n      if (!this.pad || (indx >= this._num_primitives)) {\n\n         this.confirmDraw();\n\n         if (this._start_tm) {\n            let spenttm = new Date().getTime() - this._start_tm;\n            if (spenttm > 3000) console.log(`Canvas drawing took ${(spenttm*1e-3).toFixed(2)}s`);\n            delete this._start_tm;\n         }\n\n         return;\n      }\n\n      // handle used to invoke callback only when necessary\n      return this.drawObject(this.getDom(), this.pad.fPrimitives[indx], '').then(ppainter => {\n         // mark painter as belonging to primitives\n         if (isObject(ppainter))\n            ppainter._primitive = true;\n\n         return this.drawPrimitives(indx+1);\n      });\n   }\n\n   /** @summary Process tooltip event in the pad\n     * @private */\n   processPadTooltipEvent(pnt) {\n      let painters = [], hints = [];\n\n      // first count - how many processors are there\n      if (this.painters !== null)\n         this.painters.forEach(obj => {\n            if (isFunc(obj.processTooltipEvent)) painters.push(obj);\n         });\n\n      if (pnt) pnt.nproc = painters.length;\n\n      painters.forEach(obj => {\n         let hint = obj.processTooltipEvent(pnt);\n         if (!hint) hint = { user_info: null };\n         hints.push(hint);\n         if (pnt && pnt.painters) hint.painter = obj;\n      });\n\n      return hints;\n   }\n\n   /** @summary Changes canvas dark mode\n     * @private */\n   changeDarkMode(mode) {\n      this.getCanvSvg().style('filter', (mode ?? settings.DarkMode)  ? 'invert(100%)' : null);\n   }\n\n   /** @summary Fill pad context menu\n     * @private */\n   fillContextMenu(menu) {\n\n      if (this.iscan)\n         menu.add('header: RCanvas');\n      else\n         menu.add('header: RPad');\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (!this._websocket) {\n         menu.addAttributesMenu(this);\n         if (this.iscan)\n            menu.addSettingsMenu(false, false, arg => {\n               if (arg == 'dark') this.changeDarkMode();\n            });\n      }\n\n      menu.add('separator');\n\n      if (isFunc(this.hasMenuBar) && isFunc(this.actiavteMenuBar))\n         menu.addchk(this.hasMenuBar(), 'Menu bar', flag => this.actiavteMenuBar(flag));\n\n      if (isFunc(this.hasEventStatus) && isFunc(this.activateStatusBar))\n         menu.addchk(this.hasEventStatus(), 'Event status', () => this.activateStatusBar('toggle'));\n\n      if (this.enlargeMain() || (this.has_canvas && this.hasObjectsToDraw()))\n         menu.addchk((this.enlargeMain('state') == 'on'), 'Enlarge ' + (this.iscan ? 'canvas' : 'pad'), () => this.enlargePad());\n\n      let fname = this.this_pad_name || (this.iscan ? 'canvas' : 'pad');\n      menu.add(`Save as ${fname}.png`, fname+'.png', arg => this.saveAs('png', false, arg));\n      menu.add(`Save as ${fname}.svg`, fname+'.svg', arg => this.saveAs('svg', false, arg));\n\n      return true;\n   }\n\n   /** @summary Show pad context menu\n     * @private */\n   padContextMenu(evnt) {\n      if (evnt.stopPropagation) {\n         let pos = d3_pointer(evnt, this.svg_this_pad().node());\n         // this is normal event processing and not emulated jsroot event\n         // for debug purposes keep original context menu for small region in top-left corner\n         if ((pos.length==2) && (pos[0] >= 0) && (pos[0] < 10) && (pos[1] >= 0) && (pos[1] < 10)) return;\n\n         evnt.stopPropagation(); // disable main context menu\n         evnt.preventDefault();  // disable browser context menu\n\n         this.getFramePainter()?.setLastEventPos();\n      }\n\n      createMenu(evnt, this).then(menu => {\n         this.fillContextMenu(menu);\n         return this.fillObjectExecMenu(menu);\n      }).then(menu => menu.show());\n   }\n\n   /** @summary Redraw pad means redraw ourself\n     * @return {Promise} when redrawing ready */\n   async redrawPad(reason) {\n\n      let sync_promise = this.syncDraw(reason);\n      if (sync_promise === false) {\n         console.log('Prevent RPad redrawing');\n         return false;\n      }\n\n      let showsubitems = true;\n      let redrawNext = indx => {\n         while (indx < this.painters.length) {\n            let sub = this.painters[indx++], res = 0;\n            if (showsubitems || sub.this_pad_name)\n               res = sub.redraw(reason);\n\n            if (isPromise(res))\n               return res.then(() => redrawNext(indx));\n         }\n         return true;\n      };\n\n      return sync_promise.then(() => {\n         if (this.iscan) {\n            this.createCanvasSvg(2);\n         } else {\n            showsubitems = this.createPadSvg(true);\n         }\n         return redrawNext(0);\n      }).then(() => {\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         this.confirmDraw();\n         return true;\n      });\n   }\n\n   /** @summary redraw pad */\n   redraw(reason) {\n      return this.redrawPad(reason);\n   }\n\n\n   /** @summary Checks if pad should be redrawn by resize\n     * @private */\n   needRedrawByResize() {\n      let elem = this.svg_this_pad();\n      if (!elem.empty() && elem.property('can3d') === constants.Embed3D.Overlay) return true;\n\n      for (let i = 0; i < this.painters.length; ++i)\n         if (isFunc(this.painters[i].needRedrawByResize))\n            if (this.painters[i].needRedrawByResize()) return true;\n\n      return false;\n   }\n\n   /** @summary Check resize of canvas */\n   checkCanvasResize(size, force) {\n\n      if (!this.iscan && this.has_canvas) return false;\n\n      let sync_promise = this.syncDraw('canvas_resize');\n      if (sync_promise === false) return false;\n\n      if ((size === true) || (size === false)) { force = size; size = null; }\n\n      if (isObject(size) && size.force) force = true;\n\n      if (!force) force = this.needRedrawByResize();\n\n      let changed = false,\n          redrawNext = indx => {\n             if (!changed || (indx >= this.painters.length)) {\n                this.confirmDraw();\n                return changed;\n             }\n\n             return getPromise(this.painters[indx].redraw(force ? 'redraw' : 'resize')).then(() => redrawNext(indx+1));\n          };\n\n      return sync_promise.then(() => {\n\n         changed = this.createCanvasSvg(force ? 2 : 1, size);\n\n         // if canvas changed, redraw all its subitems.\n         // If redrawing was forced for canvas, same applied for sub-elements\n         return redrawNext(0);\n      });\n   }\n\n   /** @summary update RPad object\n     * @private */\n   updateObject(obj) {\n      if (!obj) return false;\n\n      this.pad.fStyle = obj.fStyle;\n      this.pad.fAttr = obj.fAttr;\n\n      if (this.iscan) {\n         this.pad.fTitle = obj.fTitle;\n         this.pad.fWinSize = obj.fWinSize;\n      } else {\n         this.pad.fPos = obj.fPos;\n         this.pad.fSize = obj.fSize;\n      }\n\n      return true;\n   }\n\n\n   /** @summary Add object painter to list of primitives\n     * @private */\n   addObjectPainter(objpainter, lst, indx) {\n      if (objpainter && lst && lst[indx] && (objpainter.snapid === undefined)) {\n         // keep snap id in painter, will be used for the\n         if (this.painters.indexOf(objpainter) < 0)\n            this.painters.push(objpainter);\n         objpainter.assignSnapId(lst[indx].fObjectID);\n         if (!objpainter.rstyle) objpainter.rstyle = lst[indx].fStyle || this.rstyle;\n      }\n   }\n\n   /** @summary Extract properties from TObjectDisplayItem */\n   extractTObjectProp(snap) {\n      if (snap.fColIndex && snap.fColValue) {\n         let colors = this.root_colors || getRootColors();\n         for (let k = 0; k < snap.fColIndex.length; ++k)\n            colors[snap.fColIndex[k]] = snap.fColValue[k];\n       }\n\n      // painter used only for evaluation of attributes\n      let pattr = new RObjectPainter(), obj = snap.fObject;\n      pattr.assignObject(snap);\n      pattr.csstype = snap.fCssType;\n      pattr.rstyle = snap.fStyle;\n\n      snap.fOption = pattr.v7EvalAttr('options', '');\n\n      const extract_color = (member_name, attr_name) => {\n         let col = pattr.v7EvalColor(attr_name, '');\n         if (col) obj[member_name] = addColor(col, this.root_colors);\n      };\n\n      // handle TAttLine\n      if ((obj.fLineColor !== undefined) && (obj.fLineWidth !== undefined) && (obj.fLineStyle !== undefined)) {\n         extract_color('fLineColor', 'line_color');\n         obj.fLineWidth = pattr.v7EvalAttr('line_width', obj.fLineWidth);\n         obj.fLineStyle = pattr.v7EvalAttr('line_style', obj.fLineStyle);\n      }\n\n      // handle TAttFill\n      if ((obj.fFillColor !== undefined) && (obj.fFillStyle !== undefined)) {\n         extract_color('fFillColor', 'fill_color');\n         obj.fFillStyle = pattr.v7EvalAttr('fill_style', obj.fFillStyle);\n      }\n\n      // handle TAttMarker\n      if ((obj.fMarkerColor !== undefined) && (obj.fMarkerStyle !== undefined) && (obj.fMarkerSize !== undefined)) {\n         extract_color('fMarkerColor', 'marker_color');\n         obj.fMarkerStyle = pattr.v7EvalAttr('marker_style', obj.fMarkerStyle);\n         obj.fMarkerSize = pattr.v7EvalAttr('marker_size', obj.fMarkerSize);\n      }\n\n      // handle TAttText\n      if ((obj.fTextColor !== undefined) && (obj.fTextAlign !== undefined) && (obj.fTextAngle !== undefined) && (obj.fTextSize !== undefined)) {\n         extract_color('fTextColor', 'text_color');\n         obj.fTextAlign = pattr.v7EvalAttr('text_align', obj.fTextAlign);\n         obj.fTextAngle = pattr.v7EvalAttr('text_angle', obj.fTextAngle);\n         obj.fTextSize = pattr.v7EvalAttr('text_size', obj.fTextSize);\n         // TODO: v7 font handling differs much from v6, ignore for the moment\n      }\n   }\n\n   /** @summary Function called when drawing next snapshot from the list\n     * @return {Promise} with pad painter when ready\n     * @private */\n   async drawNextSnap(lst, indx) {\n\n      if (indx === undefined) {\n         indx = -1;\n         // flag used to prevent immediate pad redraw during first draw\n         this._snaps_map = {}; // to control how much snaps are drawn\n         this._num_primitives = lst ? lst.length : 0;\n         this._auto_color_cnt = 0;\n      }\n\n      delete this.next_rstyle;\n\n      ++indx; // change to the next snap\n\n      if (!lst || indx >= lst.length) {\n         delete this._snaps_map;\n         delete this._auto_color_cnt;\n         return this;\n      }\n\n      let snap = lst[indx],\n          snapid = snap.fObjectID,\n          cnt = this._snaps_map[snapid],\n          objpainter = null;\n\n      if (cnt) cnt++; else cnt=1;\n      this._snaps_map[snapid] = cnt; // check how many objects with same snapid drawn, use them again\n\n      // empty object, no need to do something, take next\n      if (snap.fDummy) return this.drawNextSnap(lst, indx);\n\n      // first appropriate painter for the object\n      // if same object drawn twice, two painters will exists\n      for (let k = 0; k < this.painters.length; ++k) {\n         if (this.painters[k].snapid === snapid)\n            if (--cnt === 0) { objpainter = this.painters[k]; break;  }\n      }\n\n      if (objpainter) {\n\n         if (snap._typename == 'ROOT::Experimental::RPadDisplayItem')  // subpad\n            return objpainter.redrawPadSnap(snap).then(ppainter => {\n               this.addObjectPainter(ppainter, lst, indx);\n               return this.drawNextSnap(lst, indx);\n            });\n\n         if (snap._typename === 'ROOT::Experimental::TObjectDisplayItem')\n            this.extractTObjectProp(snap);\n\n         let promise;\n\n         if (objpainter.updateObject(snap.fDrawable || snap.fObject || snap, snap.fOption || '', true))\n            promise = objpainter.redraw();\n\n         return getPromise(promise).then(() => this.drawNextSnap(lst, indx)); // call next\n      }\n\n      if (snap._typename == 'ROOT::Experimental::RPadDisplayItem') { // subpad\n\n         let subpad = snap; // not subpad, but just attributes\n\n         let padpainter = new RPadPainter(this.getDom(), subpad, false);\n         padpainter.decodeOptions('');\n         padpainter.addToPadPrimitives(this.this_pad_name); // only set parent pad name\n         padpainter.assignSnapId(snap.fObjectID);\n         padpainter.rstyle = snap.fStyle;\n\n         padpainter.createPadSvg();\n\n         if (snap.fPrimitives && snap.fPrimitives.length > 0)\n            padpainter.addPadButtons();\n\n         // we select current pad, where all drawing is performed\n         let prev_name = padpainter.selectCurrentPad(padpainter.this_pad_name);\n\n         return padpainter.drawNextSnap(snap.fPrimitives).then(() => {\n            padpainter.selectCurrentPad(prev_name);\n            return this.drawNextSnap(lst, indx);\n         });\n      }\n\n      // will be used in addToPadPrimitives to assign style to sub-painters\n      this.next_rstyle = lst[indx].fStyle || this.rstyle;\n\n      if (snap._typename === 'ROOT::Experimental::TObjectDisplayItem') {\n\n         // identifier used in RObjectDrawable\n         const webSnapIds = { kNone: 0,  kObject: 1, kColors: 4, kStyle: 5, kPalette: 6 };\n\n         if (snap.fKind == webSnapIds.kStyle) {\n            Object.assign(gStyle, snap.fObject);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind == webSnapIds.kColors) {\n            let ListOfColors = [], arr = snap.fObject.arr;\n            for (let n = 0; n < arr.length; ++n) {\n               let name = arr[n].fString, p = name.indexOf('=');\n               if (p > 0)\n                  ListOfColors[parseInt(name.slice(0,p))] = name.slice(p+1);\n            }\n\n            this.root_colors = ListOfColors;\n            // set global list of colors\n            // adoptRootColors(ListOfColors);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind == webSnapIds.kPalette) {\n            let arr = snap.fObject.arr, palette = [];\n            for (let n = 0; n < arr.length; ++n)\n               palette[n] =  arr[n].fString;\n            this.custom_palette = new ColorPalette(palette);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (!this.getFramePainter())\n            return this.drawObject(this.getDom(), { _typename: 'TFrame', $dummy: true }, '')\n                       .then(() => this.drawNextSnap(lst, indx-1)); // call same object again\n\n         this.extractTObjectProp(snap);\n      }\n\n      // TODO - fDrawable is v7, fObject from v6, maybe use same data member?\n      return this.drawObject(this.getDom(), snap.fDrawable || snap.fObject || snap, snap.fOption || '').then(objpainter => {\n         this.addObjectPainter(objpainter, lst, indx);\n         return this.drawNextSnap(lst, indx);\n      });\n   }\n\n   /** @summary Search painter with specified snapid, also sub-pads are checked\n     * @private */\n   findSnap(snapid, onlyid) {\n\n      function check(checkid) {\n         if (!checkid || !isStr(checkid)) return false;\n         if (checkid == snapid) return true;\n         return onlyid && (checkid.length > snapid.length) &&\n                (checkid.indexOf(snapid) == (checkid.length - snapid.length));\n      }\n\n      if (check(this.snapid)) return this;\n\n      if (!this.painters) return null;\n\n      for (let k=0;k<this.painters.length;++k) {\n         let sub = this.painters[k];\n\n         if (!onlyid && isFunc(sub.findSnap))\n            sub = sub.findSnap(snapid);\n         else if (!check(sub.snapid))\n            sub = null;\n\n         if (sub) return sub;\n      }\n\n      return null;\n   }\n\n   /** @summary Redraw pad snap\n     * @desc Online version of drawing pad primitives\n     * @return {Promise} with pad painter*/\n   async redrawPadSnap(snap) {\n      // for the pad/canvas display item contains list of primitives plus pad attributes\n\n      if (!snap || !snap.fPrimitives)\n         return this;\n\n      // for the moment only window size attributes are provided\n      // let padattr = { fCw: snap.fWinSize[0], fCh: snap.fWinSize[1], fTitle: snap.fTitle };\n\n      // if canvas size not specified in batch mode, temporary use 900x700 size\n      // if (this.batch_mode && this.iscan && (!padattr.fCw || !padattr.fCh)) { padattr.fCw = 900; padattr.fCh = 700; }\n\n      if (this.iscan && this._websocket && snap.fTitle && !this.embed_canvas && (typeof document !== 'undefined'))\n         document.title = snap.fTitle;\n\n      if (this.snapid === undefined) {\n         // first time getting snap, create all gui elements first\n\n         this.assignSnapId(snap.fObjectID);\n\n         this.draw_object = snap;\n         this.pad = snap;\n\n         if (this.batch_mode && this.iscan)\n             this._fixed_size = true;\n\n         let mainid = this.selectDom().attr('id');\n\n         if (!this.batch_mode && !this.use_openui && !this.brlayout && mainid && isStr(mainid)) {\n            this.brlayout = new BrowserLayout(mainid, null, this);\n            this.brlayout.create(mainid, true);\n            this.setDom(this.brlayout.drawing_divid()); // need to create canvas\n            registerForResize(this.brlayout);\n         }\n\n         this.createCanvasSvg(0);\n         this.addPadButtons(true);\n\n         return this.drawNextSnap(snap.fPrimitives);\n      }\n\n      // update only pad/canvas attributes\n      this.updateObject(snap);\n\n      // apply all changes in the object (pad or canvas)\n      if (this.iscan) {\n         this.createCanvasSvg(2);\n      } else {\n         this.createPadSvg(true);\n      }\n\n      let isanyfound = false, isanyremove = false;\n\n      // find and remove painters which no longer exists in the list\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (sub.snapid === undefined) continue; // look only for painters with snapid\n\n         snap.fPrimitives.forEach(prim => {\n            if (sub && (prim.fObjectID === sub.snapid)) {\n               sub = null; isanyfound = true;\n            }\n         });\n\n         if (sub) {\n            // remove painter which does not found in the list of snaps\n            this.painters.splice(k--,1);\n            sub.cleanup(); // cleanup such painter\n            isanyremove = true;\n            if (this.main_painter_ref === sub)\n               delete this.main_painter_ref;\n         }\n      }\n\n      if (isanyremove)\n         delete this.pads_cache;\n\n      if (!isanyfound) {\n         let fp = this.getFramePainter();\n         // cannot preserve ROOT6 frame - it must be recreated\n         if (fp?.is_root6()) fp = null;\n         for (let k = 0; k < this.painters.length; ++k)\n             if (fp !== this.painters[k])\n               this.painters[k].cleanup();\n         this.painters = [];\n         delete this.main_painter_ref;\n         if (fp) {\n            this.painters.push(fp);\n            fp.cleanFrameDrawings();\n            fp.redraw(); // need to create all layers again\n         }\n         if (this.removePadButtons) this.removePadButtons();\n         this.addPadButtons(true);\n      }\n\n      let prev_name = this.selectCurrentPad(this.this_pad_name);\n\n      return this.drawNextSnap(snap.fPrimitives).then(() => {\n         this.selectCurrentPad(prev_name);\n\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         return this;\n      });\n   }\n\n   /** @summary Create image for the pad\n     * @desc Used with web-based canvas to create images for server side\n     * @return {Promise} with image data, coded with btoa() function\n     * @private */\n   async createImage(format) {\n      // use https://github.com/MrRio/jsPDF in the future here\n      if (format == 'pdf')\n         return btoa_func('dummy PDF file');\n\n      if ((format == 'png') || (format == 'jpeg') || (format == 'svg'))\n         return this.produceImage(true, format).then(res => {\n            if (!res || (format == 'svg')) return res;\n            let separ = res.indexOf('base64,');\n            return (separ > 0) ? res.slice(separ+7) : '';\n         });\n\n      return '';\n   }\n\n   /** @summary Show context menu for specified item\n     * @private */\n   itemContextMenu(name) {\n       let rrr = this.svg_this_pad().node().getBoundingClientRect(),\n           evnt = { clientX: rrr.left+10, clientY: rrr.top + 10 };\n\n       // use timeout to avoid conflict with mouse click and automatic menu close\n       if (name == 'pad')\n          return setTimeout(() => this.padContextMenu(evnt), 50);\n\n       let selp = null, selkind;\n\n       switch(name) {\n          case 'xaxis':\n          case 'yaxis':\n          case 'zaxis':\n             selp = this.getMainPainter();\n             selkind = name[0];\n             break;\n          case 'frame':\n             selp = this.getFramePainter();\n             break;\n          default: {\n             let indx = parseInt(name);\n             if (Number.isInteger(indx)) selp = this.painters[indx];\n          }\n       }\n\n       if (!isFunc(selp?.fillContextMenu)) return;\n\n       createMenu(evnt, selp).then(menu => {\n          if (selp.fillContextMenu(menu, selkind))\n             selp.fillObjectExecMenu(menu, selkind).then(() => setTimeout(() => menu.show(), 50));\n       });\n   }\n\n   /** @summary Save pad in specified format\n     * @desc Used from context menu */\n   saveAs(kind, full_canvas, filename) {\n      if (!filename)\n         filename = (this.this_pad_name || (this.iscan ? 'canvas' : 'pad')) + '.' + kind;\n\n      this.produceImage(full_canvas, kind).then(imgdata => {\n         if (!imgdata)\n            return console.error(`Fail to produce image ${filename}`);\n\n         saveFile(filename, (kind != 'svg') ? imgdata : 'data:image/svg+xml;charset=utf-8,'+encodeURIComponent(imgdata));\n      });\n   }\n\n   /** @summary Search active pad\n     * @return {Object} pad painter for active pad */\n   findActivePad() {\n      return null;\n   }\n\n   /** @summary Prodce image for the pad\n     * @return {Promise} with created image */\n   async produceImage(full_canvas, file_format) {\n\n      let use_frame = (full_canvas === 'frame'),\n          elem = use_frame ? this.getFrameSvg(this.this_pad_name) : (full_canvas ? this.getCanvSvg() : this.svg_this_pad()),\n          painter = (full_canvas && !use_frame) ? this.getCanvPainter() : this,\n          items = []; // keep list of replaced elements, which should be moved back at the end\n\n      if (elem.empty())\n         return '';\n\n      if (!use_frame) // do not make transformations for the frame\n      painter.forEachPainterInPad(pp => {\n\n         let item = { prnt: pp.svg_this_pad() };\n         items.push(item);\n\n         // remove buttons from each subpad\n         let btns = pp.getLayerSvg('btns_layer', this.this_pad_name);\n         item.btns_node = btns.node();\n         if (item.btns_node) {\n            item.btns_prnt = item.btns_node.parentNode;\n            item.btns_next = item.btns_node.nextSibling;\n            btns.remove();\n         }\n\n         let main = pp.getFramePainter();\n         if (!main || !isFunc(main.render3D) || !isFunc(main.access3dKind)) return;\n\n         let can3d = main.access3dKind();\n\n         if ((can3d !== constants.Embed3D.Overlay) && (can3d !== constants.Embed3D.Embed)) return;\n\n         let sz2 = main.getSizeFor3d(constants.Embed3D.Embed), // get size and position of DOM element as it will be embed\n             canvas = main.renderer.domElement;\n\n         main.render3D(0); // WebGL clears buffers, therefore we should render scene and convert immediately\n\n         let dataUrl = canvas.toDataURL('image/png');\n\n         // remove 3D drawings\n\n         if (can3d === constants.Embed3D.Embed) {\n            item.foreign = item.prnt.select('.' + sz2.clname);\n            item.foreign.remove();\n         }\n\n         let svg_frame = main.getFrameSvg();\n         item.frame_node = svg_frame.node();\n         if (item.frame_node) {\n            item.frame_next = item.frame_node.nextSibling;\n            svg_frame.remove();\n         }\n\n         // add svg image\n         item.img = item.prnt.insert('image','.primitives_layer')     // create image object\n                        .attr('x', sz2.x)\n                        .attr('y', sz2.y)\n                        .attr('width', canvas.width)\n                        .attr('height', canvas.height)\n                        .attr('href', dataUrl);\n\n      }, 'pads');\n\n      const reEncode = data => {\n         data = encodeURIComponent(data);\n         data = data.replace(/%([0-9A-F]{2})/g, function(match, p1) {\n           let c = String.fromCharCode('0x'+p1);\n           return c === '%' ? '%25' : c;\n         });\n         return decodeURIComponent(data);\n      }, reconstruct = () => {\n         for (let k = 0; k < items.length; ++k) {\n            let item = items[k];\n\n            if (item.img)\n               item.img.remove(); // delete embed image\n\n            let prim = item.prnt.select('.primitives_layer');\n\n            if (item.foreign) // reinsert foreign object\n               item.prnt.node().insertBefore(item.foreign.node(), prim.node());\n\n            if (item.frame_node) // reinsert frame as first in list of primitives\n               prim.node().insertBefore(item.frame_node, item.frame_next);\n\n            if (item.btns_node) // reinsert buttons\n               item.btns_prnt.insertBefore(item.btns_node, item.btns_next);\n         }\n      };\n\n      let width = elem.property('draw_width'), height = elem.property('draw_height');\n      if (use_frame) {\n         let fp = this.getFramePainter();\n         width = fp.getFrameWidth();\n         height = fp.getFrameHeight();\n      }\n\n      let svg = `<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">${elem.node().innerHTML}</svg>`;\n\n      if (internals.processSvgWorkarounds)\n         svg = internals.processSvgWorkarounds(svg);\n\n      svg = compressSVG(svg);\n\n      if (file_format == 'svg') {\n         reconstruct();\n         return svg; // return SVG file as is\n      }\n\n      let doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">',\n          image = new Image();\n\n      return new Promise(resolveFunc => {\n         image.onload = function() {\n            let canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            let context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0);\n\n            reconstruct();\n\n            resolveFunc(canvas.toDataURL('image/' + file_format));\n         }\n\n         image.onerror = function(arg) {\n            console.log(`IMAGE ERROR ${arg}`);\n            reconstruct();\n            resolveFunc(null);\n         }\n\n         image.src = 'data:image/svg+xml;base64,' + btoa_func(reEncode(doctype + svg));\n      });\n   }\n\n   /** @summary Process pad button click */\n   clickPadButton(funcname, evnt) {\n\n      if (funcname == 'CanvasSnapShot')\n         return this.saveAs('png', true);\n\n      if (funcname == 'enlargePad')\n         return this.enlargePad();\n\n      if (funcname == 'PadSnapShot')\n         return this.saveAs('png', false);\n\n      if (funcname == 'PadContextMenus') {\n\n         if (evnt) {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n         }\n\n         if (closeMenu()) return;\n\n         createMenu(evnt, this).then(menu => {\n            menu.add('header:Menus');\n\n            if (this.iscan)\n               menu.add('Canvas', 'pad', this.itemContextMenu);\n            else\n               menu.add('Pad', 'pad', this.itemContextMenu);\n\n            if (this.getFramePainter())\n               menu.add('Frame', 'frame', this.itemContextMenu);\n\n            let main = this.getMainPainter(); // here hist painter methods\n\n            if (main) {\n               menu.add('X axis', 'xaxis', this.itemContextMenu);\n               menu.add('Y axis', 'yaxis', this.itemContextMenu);\n               if (isFunc(main.getDimension) && (main.getDimension() > 1))\n                  menu.add('Z axis', 'zaxis', this.itemContextMenu);\n            }\n\n            if (this.painters?.length) {\n               menu.add('separator');\n               let shown = [];\n               for (let n = 0; n < this.painters.length; ++n) {\n                  let obj = this.painters[n]?.getObject();\n                  if (!obj || (shown.indexOf(obj) >= 0)) continue;\n\n                  let name = obj._typename ? obj._typename + '::' : '';\n                  if (obj.fName) name += obj.fName;\n                  if (!name) name = 'item' + n;\n                  menu.add(name, n, this.itemContextMenu);\n               }\n            }\n\n            menu.show();\n         });\n\n         return;\n      }\n\n      // click automatically goes to all sub-pads\n      // if any painter indicates that processing completed, it returns true\n      let done = false;\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         let pp = this.painters[i];\n\n         if (isFunc(pp.clickPadButton))\n            pp.clickPadButton(funcname);\n\n         if (!done && isFunc(pp.clickButton))\n            done = pp.clickButton(funcname);\n      }\n   }\n\n   /** @summary Add button to the pad\n     * @private */\n   addPadButton(btn, tooltip, funcname, keyname) {\n      if (!settings.ToolBar || isBatchMode() || this.batch_mode) return;\n\n      if (!this._buttons) this._buttons = [];\n      // check if there are duplications\n\n      for (let k = 0; k < this._buttons.length; ++k)\n         if (this._buttons[k].funcname == funcname) return;\n\n      this._buttons.push({ btn, tooltip, funcname, keyname });\n\n      let iscan = this.iscan || !this.has_canvas;\n      if (!iscan && (funcname.indexOf('Pad') != 0) && (funcname !== 'enlargePad')) {\n         let cp = this.getCanvPainter();\n         if (cp && (cp !== this)) cp.addPadButton(btn, tooltip, funcname);\n      }\n   }\n\n   /** @summary Add buttons for pad or canvas\n     * @private */\n   addPadButtons(is_online) {\n\n      this.addPadButton('camera', 'Create PNG', this.iscan ? 'CanvasSnapShot' : 'PadSnapShot', 'Ctrl PrintScreen');\n\n      if (settings.ContextMenu)\n         this.addPadButton('question', 'Access context menus', 'PadContextMenus');\n\n      let add_enlarge = !this.iscan && this.has_canvas && this.hasObjectsToDraw()\n\n      if (add_enlarge || this.enlargeMain('verify'))\n         this.addPadButton('circle', 'Enlarge canvas', 'enlargePad');\n\n      if (is_online && this.brlayout) {\n         this.addPadButton('diamand', 'Toggle Ged', 'ToggleGed');\n         this.addPadButton('three_circles', 'Toggle Status', 'ToggleStatus');\n      }\n\n   }\n\n   /** @summary Show pad buttons\n     * @private */\n   showPadButtons() {\n      if (!this._buttons) return;\n\n      PadButtonsHandler.assign(this);\n      this.showPadButtons();\n   }\n\n   /** @summary Calculates RPadLength value */\n   getPadLength(vertical, len, frame_painter) {\n      let sign = vertical ? -1 : 1,\n          rect, res,\n          getV = (indx, dflt) => (indx < len.fArr.length) ? len.fArr[indx] : dflt,\n          getRect = () => {\n             if (!rect)\n                rect = frame_painter ? frame_painter.getFrameRect() : this.getPadRect();\n             return rect;\n          };\n\n      if (frame_painter) {\n         let user = getV(2), func = vertical ? 'gry' : 'grx';\n         if ((user !== undefined) && frame_painter[func])\n            res = frame_painter[func](user);\n      }\n\n      if (res === undefined)\n         res = vertical ? getRect().height : 0;\n\n      let norm = getV(0, 0), pixel = getV(1, 0);\n\n      res += sign*pixel;\n\n      if (norm)\n         res += sign * (vertical ? getRect().height : getRect().width) * norm;\n\n      return Math.round(res);\n   }\n\n\n   /** @summary Calculates pad position for RPadPos values\n     * @param {object} pos - instance of RPadPos\n     * @param {object} frame_painter - if drawing will be performed inside frame, frame painter */\n   getCoordinate(pos, frame_painter) {\n      return {\n         x: this.getPadLength(false, pos.fHoriz, frame_painter),\n         y: this.getPadLength(true, pos.fVert, frame_painter)\n      }\n   }\n\n   /** @summary Decode pad draw options */\n   decodeOptions(opt) {\n      let pad = this.getObject();\n      if (!pad) return;\n\n      let d = new DrawOptions(opt);\n\n      if (!this.options) this.options = {};\n\n      Object.assign(this.options, { GlobalColors: true, LocalColors: false, IgnorePalette: false, RotateFrame: false, FixFrame: false });\n\n      if (d.check('NOCOLORS') || d.check('NOCOL')) this.options.GlobalColors = this.options.LocalColors = false;\n      if (d.check('LCOLORS') || d.check('LCOL')) { this.options.GlobalColors = false; this.options.LocalColors = true; }\n      if (d.check('NOPALETTE') || d.check('NOPAL')) this.options.IgnorePalette = true;\n      if (d.check('ROTATE')) this.options.RotateFrame = true;\n      if (d.check('FIXFRAME')) this.options.FixFrame = true;\n\n      if (d.check('WHITE')) pad.fFillColor = 0;\n      if (d.check('LOGX')) pad.fLogx = 1;\n      if (d.check('LOGY')) pad.fLogy = 1;\n      if (d.check('LOGZ')) pad.fLogz = 1;\n      if (d.check('LOG')) pad.fLogx = pad.fLogy = pad.fLogz = 1;\n      if (d.check('GRIDX')) pad.fGridx = 1;\n      if (d.check('GRIDY')) pad.fGridy = 1;\n      if (d.check('GRID')) pad.fGridx = pad.fGridy = 1;\n      if (d.check('TICKX')) pad.fTickx = 1;\n      if (d.check('TICKY')) pad.fTicky = 1;\n      if (d.check('TICK')) pad.fTickx = pad.fTicky = 1;\n   }\n\n   /** @summary draw RPad object */\n   static async draw(dom, pad, opt) {\n      let painter = new RPadPainter(dom, pad, false);\n      painter.decodeOptions(opt);\n\n      if (painter.getCanvSvg().empty()) {\n         painter.has_canvas = false;\n         painter.this_pad_name = '';\n         painter.setTopPainter();\n      } else {\n         painter.addToPadPrimitives(painter.pad_name); // must be here due to pad painter\n      }\n\n      painter.createPadSvg();\n\n      if (painter.matchObjectType(clTPad) && (!painter.has_canvas || painter.hasObjectsToDraw())) {\n         painter.addPadButtons();\n      }\n\n      // we select current pad, where all drawing is performed\n      let prev_name = painter.has_canvas ? painter.selectCurrentPad(painter.this_pad_name) : undefined;\n\n      selectActivePad({ pp: painter, active: false });\n\n      // flag used to prevent immediate pad redraw during first draw\n      return painter.drawPrimitives().then(() => {\n         painter.showPadButtons();\n         // we restore previous pad name\n         painter.selectCurrentPad(prev_name);\n         return painter;\n      });\n   }\n\n} // class RPadPainter\n\nexport { RPadPainter };\n","import { httpRequest, createHttpRequest, loadScript, decodeUrl,\n         browser, setBatchMode, isBatchMode, isObject, isFunc, isStr, btoa_func } from './core.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5 } from './gui/utils.mjs';\n\n\n/**\n * @summary Class emulating web socket with long-poll http requests\n *\n * @private\n */\n\nclass LongPollSocket {\n\n   constructor(addr, _raw, _args) {\n      this.path = addr;\n      this.connid = null;\n      this.req = null;\n      this.raw = _raw;\n      this.args = _args;\n\n      this.nextRequest('', 'connect');\n   }\n\n   /** @summary Submit next request */\n   nextRequest(data, kind) {\n      let url = this.path, reqmode = 'buf', post = null;\n      if (kind === 'connect') {\n         url += this.raw ? '?raw_connect' : '?txt_connect';\n         if (this.args) url += '&' + this.args;\n         console.log(`longpoll connect ${url} raw = ${this.raw}`);\n         this.connid = 'connect';\n      } else if (kind === 'close') {\n         if ((this.connid === null) || (this.connid === 'close')) return;\n         url += `?connection=${this.connid}&close`;\n         this.connid = 'close';\n         reqmode = 'text;sync'; // use sync mode to close connection before browser window closed\n      } else if ((this.connid === null) || (typeof this.connid !== 'number')) {\n         if (!browser.qt5) console.error('No connection');\n         return;\n      } else {\n         url += '?connection=' + this.connid;\n         if (kind === 'dummy') url += '&dummy';\n      }\n\n      if (data) {\n         if (this.raw) {\n            // special workaround to avoid POST request, use base64 coding\n            url += '&post=' + btoa_func(data);\n         } else {\n            // send data with post request - most efficient way\n            reqmode = 'postbuf';\n            post = data;\n         }\n      }\n\n      createHttpRequest(url, reqmode, function(res) {\n         // this set to the request itself, res is response\n\n         if (this.handle.req === this)\n            this.handle.req = null; // get response for existing dummy request\n\n         if (res === null)\n            return this.handle.processRequest(null);\n\n         if (this.handle.raw) {\n            // raw mode - all kind of reply data packed into binary buffer\n            // first 4 bytes header 'txt:' or 'bin:'\n            // after the 'bin:' there is length of optional text argument like 'bin:14  :optional_text'\n            // and immedaitely after text binary data. Server sends binary data so, that offset should be multiple of 8\n\n            let str = '', i = 0, u8Arr = new Uint8Array(res), offset = u8Arr.length;\n            if (offset < 4) {\n               if (!browser.qt5) console.error(`longpoll got short message in raw mode ${offset}`);\n               return this.handle.processRequest(null);\n            }\n\n            while (i < 4) str += String.fromCharCode(u8Arr[i++]);\n            if (str != 'txt:') {\n               str = '';\n               while ((i < offset) && (String.fromCharCode(u8Arr[i]) != ':'))\n                  str += String.fromCharCode(u8Arr[i++]);\n               ++i;\n               offset = i + parseInt(str.trim());\n            }\n\n            str = '';\n            while (i < offset) str += String.fromCharCode(u8Arr[i++]);\n\n            if (str) {\n               if (str == '<<nope>>')\n                  this.handle.processRequest(-1111);\n               else\n                   this.handle.processRequest(str);\n            }\n            if (offset < u8Arr.length)\n               this.handle.processRequest(res, offset);\n         } else if (this.getResponseHeader('Content-Type') == 'application/x-binary') {\n            // binary reply with optional header\n            let extra_hdr = this.getResponseHeader('LongpollHeader');\n            if (extra_hdr) this.handle.processRequest(extra_hdr);\n            this.handle.processRequest(res, 0);\n         } else {\n            // text reply\n            if (res && !isStr(res)) {\n               let str = '', u8Arr = new Uint8Array(res);\n               for (let i = 0; i < u8Arr.length; ++i)\n                  str += String.fromCharCode(u8Arr[i]);\n               res = str;\n            }\n            if (res == '<<nope>>')\n               this.handle.processRequest(-1111);\n            else\n               this.handle.processRequest(res);\n         }\n      }, function(/*err,status*/) {\n         this.handle.processRequest(null, 'error');\n      }, true).then(req => {\n         req.handle = this;\n         if (!this.req)\n            this.req = req; // any request can be used for response, do not submit dummy until req is there\n         req.send(post);\n      });\n   }\n\n   /** @summary Process request */\n   processRequest(res, _offset) {\n      if (res === null) {\n         if (isFunc(this.onerror))\n            this.onerror('receive data with connid ' + (this.connid || '---'));\n         if ((_offset == 'error') && isFunc(this.onclose))\n            this.onclose('force_close');\n         this.connid = null;\n         return;\n      } else if (res === -1111) {\n         res = '';\n      }\n\n      let dummy_tmout = 5;\n\n      if (this.connid === 'connect') {\n         if (!res) {\n            this.connid = null;\n            if (isFunc(this.onerror))\n               this.onerror('connection rejected');\n            return;\n         }\n\n         this.connid = parseInt(res);\n         dummy_tmout = 100; // when establishing connection, wait a bit longer to submit dummy package\n         console.log(`Get new longpoll connection with id ${this.connid}`);\n         if (isFunc(this.onopen))\n            this.onopen();\n      } else if (this.connid === 'close') {\n         if (isFunc(this.onclose))\n            this.onclose();\n         return;\n      } else {\n         if (isFunc(this.onmessage) && res)\n            this.onmessage({ data: res, offset: _offset });\n      }\n\n      // minimal timeout to reduce load, generate dummy only if client not submit new request immediately\n      if (!this.req)\n         setTimeout(() => { if (!this.req) this.nextRequest('', 'dummy'); }, dummy_tmout);\n   }\n\n   /** @summary Send data */\n   send(str) { this.nextRequest(str); }\n\n   /** @summary Close connection */\n   close() { this.nextRequest('', 'close'); }\n\n} // class LongPollSocket\n\n// ========================================================================================\n\n/**\n * @summary Class re-playing socket data from stored protocol\n *\n * @private\n */\n\nclass FileDumpSocket {\n\n   constructor(receiver) {\n      this.receiver = receiver;\n      this.protocol = [];\n      this.cnt = 0;\n      httpRequest('protocol.json', 'text').then(res => this.getProtocol(res));\n   }\n\n   /** @summary Get stored protocol */\n   getProtocol(res) {\n      if (!res) return;\n      this.protocol = JSON.parse(res);\n      if (isFunc(this.onopen)) this.onopen();\n      this.nextOperation();\n   }\n\n   /** @summary Emulate send - just cound operation */\n   send(/* str */) {\n      if (this.protocol[this.cnt] == 'send') {\n         this.cnt++;\n         setTimeout(() => this.nextOperation(), 10);\n      }\n   }\n\n   /** @summary Emulate close */\n   close() {}\n\n   /** @summary Read data for next operation */\n   nextOperation() {\n      // when file request running - just ignore\n      if (this.wait_for_file) return;\n      let fname = this.protocol[this.cnt];\n      if (!fname) return;\n      if (fname == 'send') return; // waiting for send\n      this.wait_for_file = true;\n      this.cnt++;\n      httpRequest(fname, (fname.indexOf('.bin') > 0 ? 'buf' : 'text')).then(res => {\n         this.wait_for_file = false;\n         if (!res) return;\n         if (this.receiver.provideData)\n            this.receiver.provideData(1, res, 0);\n         setTimeout(() => this.nextOperation(), 10);\n      });\n   }\n\n} // class FileDumpSocket\n\n\n/**\n * @summary Client communication handle for RWebWindow.\n *\n * @desc Should be created with {@link connectWebWindow} function\n */\n\nclass WebWindowHandle {\n\n   constructor(socket_kind, credits) {\n      this.kind = socket_kind;\n      this.state = 0;\n      this.credits = credits || 10;\n      this.cansend = this.credits;\n      this.ackn = this.credits;\n   }\n\n   /** @summary Returns arguments specified in the RWebWindow::SetUserArgs() method\n     * @desc Can be any valid JSON expression. Undefined by default.\n     * @param {string} [field] - if specified and user args is object, returns correspondent object member\n     * @return user arguments object */\n   getUserArgs(field) {\n      if (field && isStr(field))\n         return isObject(this.user_args) ? this.user_args[field] : undefined;\n\n      return this.user_args;\n   }\n\n   /** @summary Set user args\n     * @desc Normally set via RWebWindow::SetUserArgs() method */\n   setUserArgs(args) { this.user_args = args; }\n\n   /** @summary Set callbacks receiver.\n     * @param {object} obj - object with receiver functions\n     * @param {function} obj.onWebsocketMsg - called when new data receieved from RWebWindow\n     * @param {function} obj.onWebsocketOpened - called when connection established\n     * @param {function} obj.onWebsocketClosed - called when connection closed\n     * @param {function} obj.onWebsocketError - called when get error via the connection */\n   setReceiver(obj) { this.receiver = obj; }\n\n   /** @summary Cleanup and close connection. */\n   cleanup() {\n      delete this.receiver;\n      this.close(true);\n   }\n\n   /** @summary Invoke method in the receiver.\n    * @private */\n   invokeReceiver(brdcst, method, arg, arg2) {\n      if (this.receiver && isFunc(this.receiver[method]))\n         this.receiver[method](this, arg, arg2);\n\n      if (brdcst && this.channels) {\n         let ks = Object.keys(this.channels);\n         for (let n = 0; n < ks.length; ++n)\n            this.channels[ks[n]].invokeReceiver(false, method, arg, arg2);\n      }\n   }\n\n   /** @summary Provide data for receiver. When no queue - do it directly.\n    * @private */\n   provideData(chid, _msg, _len) {\n      if (this.wait_first_recv) {\n         delete this.wait_first_recv;\n         return this.invokeReceiver(false, 'onWebsocketOpened');\n      }\n\n      if ((chid > 1) && this.channels) {\n         const channel = this.channels[chid];\n         if (channel)\n            return channel.provideData(1, _msg, _len);\n      }\n\n      const force_queue = _len && (_len < 0);\n\n      if (!force_queue && (!this.msgqueue || !this.msgqueue.length))\n         return this.invokeReceiver(false, 'onWebsocketMsg', _msg, _len);\n\n      if (!this.msgqueue) this.msgqueue = [];\n      if (force_queue) _len = undefined;\n\n      this.msgqueue.push({ ready: true, msg: _msg, len: _len });\n   }\n\n   /** @summary Reserve entry in queue for data, which is not yet decoded.\n    * @private */\n   reserveQueueItem() {\n      if (!this.msgqueue) this.msgqueue = [];\n      let item = { ready: false, msg: null, len: 0 };\n      this.msgqueue.push(item);\n      return item;\n   }\n\n   /** @summary Provide data for item which was reserved before.\n    * @private */\n   markQueueItemDone(item, _msg, _len) {\n      item.ready = true;\n      item.msg = _msg;\n      item.len = _len;\n      this.processQueue();\n   }\n\n   /** @summary Process completed messages in the queue\n     * @private */\n   processQueue() {\n      if (this._loop_msgqueue || !this.msgqueue) return;\n      this._loop_msgqueue = true;\n      while ((this.msgqueue.length > 0) && this.msgqueue[0].ready) {\n         let front = this.msgqueue.shift();\n         this.invokeReceiver(false, 'onWebsocketMsg', front.msg, front.len);\n      }\n      if (this.msgqueue.length == 0)\n         delete this.msgqueue;\n      delete this._loop_msgqueue;\n   }\n\n   /** @summary Close connection */\n   close(force) {\n      if (this.master) {\n         this.master.send('CLOSECH=' + this.channelid, 0);\n         delete this.master.channels[this.channelid];\n         delete this.master;\n         return;\n      }\n\n      if (this.timerid) {\n         clearTimeout(this.timerid);\n         delete this.timerid;\n      }\n\n      if (this._websocket && (this.state > 0)) {\n         this.state = force ? -1 : 0; // -1 prevent socket from reopening\n         this._websocket.onclose = null; // hide normal handler\n         this._websocket.close();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Checks number of credits for send operation\n     * @param {number} [numsend = 1] - number of required send operations\n     * @return true if one allow to send specified number of text message to server */\n   canSend(numsend) { return this.cansend >= (numsend || 1); }\n\n   /** @summary Returns number of possible send operations relative to number of credits */\n   getRelCanSend() { return !this.credits ? 1 : this.cansend / this.credits; }\n\n   /** @summary Send text message via the connection.\n     * @param {string} msg - text message to send\n     * @param {number} [chid] - channel id, 1 by default, 0 used only for internal communication */\n   send(msg, chid) {\n      if (this.master)\n         return this.master.send(msg, this.channelid);\n\n      if (!this._websocket || (this.state <= 0)) return false;\n\n      if (!Number.isInteger(chid)) chid = 1; // when not configured, channel 1 is used - main widget\n\n      if (this.cansend <= 0) console.error(`should be queued before sending cansend: ${this.cansend}`);\n\n      let prefix = `${this.ackn}:${this.cansend}:${chid}:`;\n      this.ackn = 0;\n      this.cansend--; // decrease number of allowed send packets\n\n      this._websocket.send(prefix + msg);\n\n      if ((this.kind === 'websocket') || (this.kind === 'longpoll')) {\n         if (this.timerid) clearTimeout(this.timerid);\n         this.timerid = setTimeout(() => this.keepAlive(), 10000);\n      }\n\n      return true;\n   }\n\n   /** @summary Inject message(s) into input queue, for debug purposes only\n     * @private */\n   inject(msg, chid, immediate) {\n      // use timeout to avoid too deep call stack\n      if (!immediate)\n         return setTimeout(this.inject.bind(this, msg, chid, true), 0);\n\n      if (chid === undefined) chid = 1;\n\n      if (Array.isArray(msg)) {\n         for (let k = 0; k < msg.length; ++k)\n            this.provideData(chid, isStr(msg[k]) ? msg[k] : JSON.stringify(msg[k]), -1);\n         this.processQueue();\n      } else if (msg) {\n         this.provideData(chid, isStr(msg) ? msg : JSON.stringify(msg));\n      }\n   }\n\n   /** @summary Send keep-alive message.\n     * @desc Only for internal use, only when used with websockets\n     * @private */\n   keepAlive() {\n      delete this.timerid;\n      this.send('KEEPALIVE', 0);\n   }\n\n   /** @summary Method open channel, which will share same connection, but can be used independently from main\n     * @private */\n   createChannel() {\n      if (this.master)\n         return master.createChannel();\n\n      let channel = new WebWindowHandle('channel', this.credits);\n      channel.wait_first_recv = true; // first received message via the channel is confirmation of established connection\n\n      if (!this.channels) {\n         this.channels = {};\n         this.freechannelid = 2;\n      }\n\n      channel.master = this;\n      channel.channelid = this.freechannelid++;\n\n      // register\n      this.channels[channel.channelid] = channel;\n\n      // now server-side entity should be initialized and init message send from server side!\n      return channel;\n   }\n\n   /** @summary Returns used channel ID, 1 by default */\n   getChannelId() { return this.channelid && this.master ? this.channelid : 1; }\n\n   /** @summary Assign href parameter\n     * @param {string} [path] - absolute path, when not specified window.location.url will be used\n     * @private */\n   setHRef(path) { this.href = path; }\n\n   /** @summary Return href part\n     * @param {string} [relative_path] - relative path to the handle\n     * @private */\n   getHRef(relative_path) {\n      if (!relative_path || !this.kind || !this.href) return this.href;\n\n      let addr = this.href;\n      if (relative_path.indexOf('../') == 0) {\n         let ddd = addr.lastIndexOf('/',addr.length-2);\n         addr = addr.slice(0,ddd) + relative_path.slice(2);\n      } else {\n         addr += relative_path;\n      }\n\n      return addr;\n   }\n\n   /** @summary Create configured socket for current object.\n     * @private */\n   connect(href) {\n\n      this.close();\n      if (!href && this.href) href = this.href;\n\n      let ntry = 0, args = (this.key ? ('key=' + this.key) : '');\n      if (this.token) {\n         if (args) args += '&';\n         args += 'token=' + this.token;\n      }\n\n      const retry_open = first_time => {\n\n         if (this.state != 0) return;\n\n         if (!first_time) console.log(`try connect window again ${new Date().toString()}`);\n\n         if (this._websocket) {\n            this._websocket.close();\n            delete this._websocket;\n         }\n\n         if (!href) {\n            href = window.location.href;\n            if (href && href.indexOf('#') > 0) href = href.slice(0, href.indexOf('#'));\n            if (href && href.lastIndexOf('/') > 0) href = href.slice(0, href.lastIndexOf('/') + 1);\n         }\n         this.href = href;\n         ntry++;\n\n         if (first_time) console.log(`Opening web socket at ${href}`);\n\n         if (ntry > 2) showProgress(`Trying to connect ${href}`);\n\n         let path = href;\n\n         if (this.kind == 'file') {\n            path += 'root.filedump';\n            this._websocket = new FileDumpSocket(this);\n            console.log(`configure protocol log ${path}`);\n         } else if ((this.kind === 'websocket') && first_time) {\n            path = path.replace('http://', 'ws://').replace('https://', 'wss://') + 'root.websocket';\n            if (args) path += '?' + args;\n            console.log(`configure websocket ${path}`);\n            this._websocket = new WebSocket(path);\n         } else {\n            path += 'root.longpoll';\n            console.log(`configure longpoll ${path}`);\n            this._websocket = new LongPollSocket(path, (this.kind === 'rawlongpoll'), args);\n         }\n\n         if (!this._websocket) return;\n\n         this._websocket.onopen = () => {\n            if (ntry > 2) showProgress();\n            this.state = 1;\n\n            let key = this.key || '';\n\n            this.send('READY=' + key, 0); // need to confirm connection\n            this.invokeReceiver(false, 'onWebsocketOpened');\n         };\n\n         this._websocket.onmessage = e => {\n            let msg = e.data;\n\n            if (this.next_binary) {\n\n               let binchid = this.next_binary;\n               delete this.next_binary;\n\n               if (msg instanceof Blob) {\n                  // convert Blob object to BufferArray\n                  let reader = new FileReader, qitem = this.reserveQueueItem();\n                  // The file's text will be printed here\n                  reader.onload = event => this.markQueueItemDone(qitem, event.target.result, 0);\n                  reader.readAsArrayBuffer(msg, e.offset || 0);\n               } else {\n                  // this is from CEF or LongPoll handler\n                  this.provideData(binchid, msg, e.offset || 0);\n               }\n\n               return;\n            }\n\n            if (!isStr(msg))\n               return console.log(`unsupported message kind: ${typeof msg}`);\n\n            let i1 = msg.indexOf(':'),\n               credit = parseInt(msg.slice(0, i1)),\n               i2 = msg.indexOf(':', i1 + 1),\n               // cansend = parseInt(msg.slice(i1 + 1, i2)),  // TODO: take into account when sending messages\n               i3 = msg.indexOf(':', i2 + 1),\n               chid = parseInt(msg.slice(i2 + 1, i3));\n\n            this.ackn++;            // count number of received packets,\n            this.cansend += credit; // how many packets client can send\n\n            msg = msg.slice(i3 + 1);\n\n            if (chid == 0) {\n               console.log(`GET chid=0 message ${msg}`);\n               if (msg == 'CLOSE') {\n                  this.close(true); // force closing of socket\n                  this.invokeReceiver(true, 'onWebsocketClosed');\n               } else if (msg.indexOf('NEW_KEY=') == 0) {\n                  let newkey = msg.slice(8);\n                  this.close(true);\n                  if (typeof sessionStorage !== 'undefined')\n                     sessionStorage.setItem('RWebWindow_Key', newkey);\n                  location.reload(true);\n               }\n            } else if (msg == '$$binary$$') {\n               this.next_binary = chid;\n            } else if (msg == '$$nullbinary$$') {\n               this.provideData(chid, new ArrayBuffer(0), 0);\n            } else {\n               this.provideData(chid, msg);\n            }\n\n            if (this.ackn > 7)\n               this.send('READY', 0); // send dummy message to server\n         };\n\n         this._websocket.onclose = arg => {\n            delete this._websocket;\n            if ((this.state > 0) || (arg === 'force_close')) {\n               console.log('websocket closed');\n               this.state = 0;\n               this.invokeReceiver(true, 'onWebsocketClosed');\n            }\n         };\n\n         this._websocket.onerror = err => {\n            console.log(`websocket error ${err} state ${this.state}`);\n            if (this.state > 0) {\n               this.invokeReceiver(true, 'onWebsocketError', err);\n               this.state = 0;\n            }\n         };\n\n         // only in interactive mode try to reconnect\n         if (!isBatchMode())\n            setTimeout(retry_open, 3000); // after 3 seconds try again\n\n      } // retry_open\n\n      retry_open(true); // call for the first time\n   }\n\n   /** @summary Send newkey request to application\n     * @desc If server creates newkey and response - webpage will be reaload\n     * After key generation done, connection will not be working any longer\n     * WARNING - only call when you know that you are doing\n     * @private */\n   askReload() {\n      this.send('GENERATE_KEY', 0);\n   }\n\n   /** @summary Instal Ctrl-R handler to realod web window\n     * @desc Instead of default window reload invokes {@link askReload} method\n     * WARNING - only call when you know that you are doing\n     * @private */\n   addReloadKeyHandler() {\n\n      if (this.kind == 'file') return;\n\n      window.addEventListener( 'keydown', evnt => {\n         if (((evnt.key == 'R') || (evnt.key == 'r')) && evnt.ctrlKey) {\n            evnt.stopPropagation();\n            evnt.preventDefault();\n            console.log('Prevent Ctrl-R propogation - ask reload RWebWindow!');\n            this.askReload();\n          }\n      });\n   }\n\n} // class WebWindowHandle\n\n\n/** @summary Method used to initialize connection to web window.\n  * @param {object} arg - arguments\n  * @param {string} [arg.socket_kind] - kind of connection longpoll|websocket, detected automatically from URL\n  * @param {number} [arg.credits = 10] - number of packets which can be send to server without acknowledge\n  * @param {object} arg.receiver - instance of receiver for websocket events, allows to initiate connection immediately\n  * @param {string} [arg.first_recv] - required prefix in the first message from RWebWindow, remain part of message will be returned in handle.first_msg\n  * @param {string} [arg.href] - URL to RWebWindow, using window.location.href by default\n  * @return {Promise} for ready-to-use {@link WebWindowHandle} instance  */\nasync function connectWebWindow(arg) {\n\n   if (isFunc(arg))\n      arg = { callback: arg };\n   else if (!isObject(arg))\n      arg = {};\n\n   let d = decodeUrl();\n\n   // special holder script, prevents headless chrome browser from too early exit\n   if (d.has('headless') && d.get('key') && (browser.isChromeHeadless || browser.isChrome) && !arg.ignore_chrome_batch_holder)\n      loadScript('root_batch_holder.js?key=' + d.get('key'));\n\n   if (!arg.platform)\n      arg.platform = d.get('platform');\n\n   if (arg.platform == 'qt5')\n      browser.qt5 = true;\n   else if (arg.platform == 'cef3')\n      browser.cef3 = true;\n\n   if (arg.batch === undefined)\n      arg.batch = d.has('headless');\n\n   if (arg.batch) setBatchMode(true);\n\n   if (!arg.socket_kind)\n      arg.socket_kind = d.get('ws');\n\n   if (!arg.socket_kind) {\n      if (browser.qt5)\n         arg.socket_kind = 'rawlongpoll';\n      else if (browser.cef3)\n         arg.socket_kind = 'longpoll';\n      else\n         arg.socket_kind = 'websocket';\n   }\n\n   // only for debug purposes\n   // arg.socket_kind = 'longpoll';\n\n   let main = new Promise(resolveFunc => {\n      let handle = new WebWindowHandle(arg.socket_kind, arg.credits);\n      handle.setUserArgs(arg.user_args);\n      if (arg.href) handle.setHRef(arg.href); // apply href now  while connect can be called from other place\n\n      if (window) {\n         window.onbeforeunload = () => handle.close(true);\n         if (browser.qt5) window.onqt5unload = window.onbeforeunload;\n      }\n\n      handle.key = d.get('key');\n      handle.token = d.get('token');\n\n      if (typeof sessionStorage !== 'undefined') {\n         let new_key = sessionStorage.getItem('RWebWindow_Key');\n         sessionStorage.removeItem('RWebWindow_Key');\n         if (new_key) {\n            console.log(`Use key ${new_key} from session storage`);\n            handle.key = new_key;\n         }\n      }\n\n      if (arg.receiver) {\n         // when receiver exists, it handles itself callbacks\n         handle.setReceiver(arg.receiver);\n         handle.connect();\n         return resolveFunc(handle);\n      }\n\n      if (!arg.first_recv)\n         return resolveFunc(handle);\n\n      handle.setReceiver({\n         onWebsocketOpened() {}, // dummy function when websocket connected\n\n         onWebsocketMsg(handle, msg) {\n            if (msg.indexOf(arg.first_recv) != 0)\n               return handle.close();\n            handle.first_msg = msg.slice(arg.first_recv.length);\n            resolveFunc(handle);\n         },\n\n         onWebsocketClosed() { closeCurrentWindow(); } // when connection closed, close panel as well\n      });\n\n      handle.connect();\n   });\n\n   if (!arg.ui5) return main;\n\n   return Promise.all([main, loadOpenui5(arg)]).then(arr => arr[0]);\n}\n\nexport { WebWindowHandle, connectWebWindow };\n","import { settings, create, parse, toJSON, loadScript, registerMethods, isBatchMode, isFunc, isStr } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb } from '../d3.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5, ToolbarIcons, getColorExec } from '../gui/utils.mjs';\nimport { GridDisplay, getHPainter } from '../gui/display.mjs';\nimport { selectActivePad, cleanup, resize, EAxisBits } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { RFramePainter } from './RFramePainter.mjs';\nimport { RPadPainter } from './RPadPainter.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { WebWindowHandle } from '../webwindow.mjs';\n\n\n/**\n * @summary Painter class for RCanvas\n *\n * @private\n */\n\nclass RCanvasPainter extends RPadPainter {\n\n   /** @summary constructor */\n   constructor(dom, canvas) {\n      super(dom, canvas, true);\n      this._websocket = null;\n      this.tooltip_allowed = settings.Tooltip;\n      this.v7canvas = true;\n   }\n\n   /** @summary Cleanup canvas painter */\n   cleanup() {\n      delete this._websocket;\n      delete this._submreq;\n\n     if (this._changed_layout)\n         this.setLayoutKind('simple');\n      delete this._changed_layout;\n\n      super.cleanup();\n   }\n\n   /** @summary Returns layout kind */\n   getLayoutKind() {\n      let origin = this.selectDom('origin'),\n         layout = origin.empty() ? '' : origin.property('layout');\n      return layout || 'simple';\n   }\n\n   /** @summary Set canvas layout kind */\n   setLayoutKind(kind, main_selector) {\n      let origin = this.selectDom('origin');\n      if (!origin.empty()) {\n         if (!kind) kind = 'simple';\n         origin.property('layout', kind);\n         origin.property('layout_selector', (kind != 'simple') && main_selector ? main_selector : null);\n         this._changed_layout = (kind !== 'simple'); // use in cleanup\n      }\n   }\n\n   /** @summary Changes layout\n     * @return {Promise} indicating when finished */\n   async changeLayout(layout_kind, mainid) {\n      let current = this.getLayoutKind();\n      if (current == layout_kind)\n         return true;\n\n      let origin = this.selectDom('origin'),\n          sidebar = origin.select('.side_panel'),\n          main = this.selectDom(), lst = [];\n\n      while (main.node().firstChild)\n         lst.push(main.node().removeChild(main.node().firstChild));\n\n      if (!sidebar.empty())\n         cleanup(sidebar.node());\n\n      this.setLayoutKind('simple'); // restore defaults\n      origin.html(''); // cleanup origin\n\n      if (layout_kind == 'simple') {\n         main = origin;\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n         this.setLayoutKind(layout_kind);\n      } else {\n         let grid = new GridDisplay(origin.node(), layout_kind);\n\n         if (mainid == undefined)\n            mainid = (layout_kind.indexOf('vert') == 0) ? 0 : 1;\n\n         main = d3_select(grid.getGridFrame(mainid));\n         sidebar = d3_select(grid.getGridFrame(1 - mainid));\n\n         main.classed('central_panel', true).style('position', 'relative');\n         sidebar.classed('side_panel', true).style('position', 'relative');\n\n         // now append all childs to the new main\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n\n         this.setLayoutKind(layout_kind, '.central_panel');\n\n         // remove reference to MDIDisplay, solves resize problem\n         origin.property('mdi', null);\n      }\n\n      // resize main drawing and let draw extras\n      resize(main.node());\n      return true;\n   }\n\n   /** @summary Toggle projection\n     * @return {Promise} indicating when ready\n     * @private */\n   async toggleProjection(kind) {\n      delete this.proj_painter;\n\n      if (kind) this.proj_painter = 1; // just indicator that drawing can be preformed\n\n      if (isFunc(this.showUI5ProjectionArea))\n         return this.showUI5ProjectionArea(kind);\n\n      let layout = 'simple', mainid;\n\n      switch(kind) {\n         case 'X':\n         case 'bottom': layout = 'vert2_31'; mainid = 0; break;\n         case 'Y':\n         case 'left': layout = 'horiz2_13'; mainid = 1; break;\n         case 'top': layout = 'vert2_13'; mainid = 1; break;\n         case 'right': layout = 'horiz2_31'; mainid = 0; break;\n      }\n\n      return this.changeLayout(layout, mainid);\n   }\n\n   /** @summary Draw projection for specified histogram\n     * @private */\n   async drawProjection( /*kind,hist*/) {\n      // dummy for the moment\n      return false;\n   }\n\n   /** @summary Draw in side panel\n     * @private */\n   async drawInSidePanel(canv, opt) {\n      let side = this.selectDom('origin').select('.side_panel');\n      return side.empty() ?  null : this.drawObject(side.node(), canv, opt);\n   }\n\n   /** @summary Checks if canvas shown inside ui5 widget\n     * @desc Function should be used only from the func which supposed to be replaced by ui5\n     * @private */\n   testUI5() {\n      if (!this.use_openui) return false;\n      console.warn('full ui5 should be used - not loaded yet? Please check!!');\n      return true;\n   }\n\n   /** @summary Show message\n     * @desc Used normally with web-based canvas and handled in ui5\n     * @private */\n   showMessage(msg) {\n      if (!this.testUI5())\n         showProgress(msg, 7000);\n   }\n\n   /** @summary Function called when canvas menu item Save is called */\n   saveCanvasAsFile(fname) {\n      let pnt = fname.indexOf('.');\n      this.createImage(fname.slice(pnt+1))\n          .then(res => { console.log('save', fname, res.length); this.sendWebsocket('SAVE:' + fname + ':' + res); });\n   }\n\n   /** @summary Send command to server to save canvas with specified name\n     * @desc Should be only used in web-based canvas\n     * @private */\n   sendSaveCommand(fname) {\n      this.sendWebsocket('PRODUCE:' + fname);\n   }\n\n   /** @summary Send message via web socket\n     * @private */\n   sendWebsocket(msg) {\n      if (this._websocket?.canSend()) {\n         this._websocket.send(msg);\n         return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Close websocket connection to canvas\n     * @private */\n   closeWebsocket(force) {\n      if (this._websocket) {\n         this._websocket.close(force);\n         this._websocket.cleanup();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Use provided connection for the web canvas\n     * @private */\n   useWebsocket(handle) {\n      this.closeWebsocket();\n\n      this._websocket = handle;\n      this._websocket.setReceiver(this);\n      this._websocket.connect();\n   }\n\n   /** @summary Hanler for websocket open event\n     * @private */\n   onWebsocketOpened(/*handle*/) {\n   }\n\n   /** @summary Hanler for websocket close event\n     * @private */\n   onWebsocketClosed(/*handle*/) {\n      if (!this.embed_canvas)\n         closeCurrentWindow();\n   }\n\n   /** @summary Hanler for websocket message\n     * @private */\n   onWebsocketMsg(handle, msg) {\n      console.log('GET_MSG ' + msg.slice(0,30));\n\n      if (msg == 'CLOSE') {\n         this.onWebsocketClosed();\n         this.closeWebsocket(true);\n      } else if (msg.slice(0,5) == 'SNAP:') {\n         msg = msg.slice(5);\n         let p1 = msg.indexOf(':'),\n             snapid = msg.slice(0,p1),\n             snap = parse(msg.slice(p1+1));\n         this.syncDraw(true)\n             .then(() => this.redrawPadSnap(snap))\n             .then(() => {\n                 handle.send('SNAPDONE:' + snapid); // send ready message back when drawing completed\n                 this.confirmDraw();\n              });\n      } else if (msg.slice(0,4) == 'JSON') {\n         let obj = parse(msg.slice(4));\n         // console.log('get JSON ', msg.length-4, obj._typename);\n         this.redrawObject(obj);\n      } else if (msg.slice(0,9) == 'REPL_REQ:') {\n         this.processDrawableReply(msg.slice(9));\n      } else if (msg.slice(0,4) == 'CMD:') {\n         msg = msg.slice(4);\n         let p1 = msg.indexOf(':'),\n             cmdid = msg.slice(0,p1),\n             cmd = msg.slice(p1+1),\n             reply = 'REPLY:' + cmdid + ':';\n         if ((cmd == 'SVG') || (cmd == 'PNG') || (cmd == 'JPEG')) {\n            this.createImage(cmd.toLowerCase())\n                .then(res => handle.send(reply + res));\n         } else if (cmd.indexOf('ADDPANEL:') == 0) {\n            let relative_path = cmd.slice(9);\n            if (!isFunc(this.showUI5Panel)) {\n               handle.send(reply + 'false');\n            } else {\n\n               let conn = new WebWindowHandle(handle.kind);\n\n               // set interim receiver until first message arrives\n               conn.setReceiver({\n                  cpainter: this,\n\n                  onWebsocketOpened() {\n                  },\n\n                  onWebsocketMsg(panel_handle, msg) {\n                     let panel_name = (msg.indexOf('SHOWPANEL:') == 0) ? msg.slice(10) : '';\n                     this.cpainter.showUI5Panel(panel_name, panel_handle)\n                                  .then(res => handle.send(reply + (res ? 'true' : 'false')));\n                  },\n\n                  onWebsocketClosed() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  },\n\n                  onWebsocketError() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  }\n\n               });\n\n               let addr = handle.href;\n               if (relative_path.indexOf('../') == 0) {\n                  let ddd = addr.lastIndexOf('/',addr.length-2);\n                  addr = addr.slice(0,ddd) + relative_path.slice(2);\n               } else {\n                  addr += relative_path;\n               }\n               // only when connection established, panel will be activated\n               conn.connect(addr);\n            }\n         } else {\n            console.log('Unrecognized command ' + cmd);\n            handle.send(reply);\n         }\n      } else if ((msg.slice(0,7) == 'DXPROJ:') || (msg.slice(0,7) == 'DYPROJ:')) {\n         let kind = msg[1],\n             hist = parse(msg.slice(7));\n         this.drawProjection(kind, hist);\n      } else if (msg.slice(0,5) == 'SHOW:') {\n         let that = msg.slice(5),\n             on = that[that.length-1] == '1';\n         this.showSection(that.slice(0,that.length-2), on);\n      } else {\n         console.log(`unrecognized msg len: ${msg.length} msg: ${msg.slice(0,30)}`);\n      }\n   }\n\n   /** @summary Submit request to RDrawable object on server side */\n   submitDrawableRequest(kind, req, painter, method) {\n\n      if (!this._websocket || !req || !req._typename ||\n          !painter.snapid || !isStr(painter.snapid)) return null;\n\n      if (kind && method) {\n         // if kind specified - check if such request already was submitted\n         if (!painter._requests) painter._requests = {};\n\n         let prevreq = painter._requests[kind];\n\n         if (prevreq) {\n            let tm = new Date().getTime();\n            if (!prevreq._tm || (tm - prevreq._tm < 5000)) {\n               prevreq._nextreq = req; // submit when got reply\n               return false;\n            }\n            delete painter._requests[kind]; // let submit new request after timeout\n         }\n\n         painter._requests[kind] = req; // keep reference on the request\n      }\n\n      req.id = painter.snapid;\n\n      if (method) {\n         if (!this._nextreqid) this._nextreqid = 1;\n         req.reqid = this._nextreqid++;\n      } else {\n         req.reqid = 0; // request will not be replied\n      }\n\n      let msg = JSON.stringify(req);\n\n      if (req.reqid) {\n         req._kind = kind;\n         req._painter = painter;\n         req._method = method;\n         req._tm = new Date().getTime();\n\n         if (!this._submreq) this._submreq = {};\n         this._submreq[req.reqid] = req; // fast access to submitted requests\n      }\n\n      // console.log('Sending request ', msg.slice(0,60));\n\n      this.sendWebsocket('REQ:' + msg);\n      return req;\n   }\n\n   /** @summary Submit menu request\n     * @private */\n   async submitMenuRequest(painter, menukind, reqid) {\n      return new Promise(resolveFunc => {\n         this.submitDrawableRequest('', {\n            _typename: 'ROOT::Experimental::RDrawableMenuRequest',\n            menukind: menukind || '',\n            menureqid: reqid, // used to identify menu request\n         }, painter, resolveFunc);\n      });\n   }\n\n   /** @summary Submit executable command for given painter */\n   submitExec(painter, exec, subelem) {\n      // snapid is intentionally ignored - only painter.snapid has to be used\n      if (!this._websocket) return;\n\n      if (subelem && isStr(subelem)) {\n         let len = subelem.length;\n         if ((len > 2) && (subelem.indexOf('#x') == len - 2)) subelem = 'x'; else\n         if ((len > 2) && (subelem.indexOf('#y') == len - 2)) subelem = 'y'; else\n         if ((len > 2) && (subelem.indexOf('#z') == len - 2)) subelem = 'z';\n\n         if ((subelem == 'x') || (subelem == 'y') || (subelem == 'z'))\n            exec = subelem + 'axis#' + exec;\n         else\n            return console.log(`not recoginzed subelem ${subelem} in SubmitExec`);\n       }\n\n      this.submitDrawableRequest('', {\n         _typename: 'ROOT::Experimental::RDrawableExecRequest',\n         exec: exec\n      }, painter);\n   }\n\n   /** @summary Process reply from request to RDrawable */\n   processDrawableReply(msg) {\n      let reply = parse(msg);\n      if (!reply || !reply.reqid || !this._submreq) return false;\n\n      let req = this._submreq[reply.reqid];\n      if (!req) return false;\n\n      // remove reference first\n      delete this._submreq[reply.reqid];\n\n      // remove blocking reference for that kind\n      if (req._kind && req._painter?._requests)\n         if (req._painter._requests[req._kind] === req)\n            delete req._painter._requests[req._kind];\n\n      if (req._method)\n         req._method(reply, req);\n\n      // resubmit last request of that kind\n      if (req._nextreq && !req._painter._requests[req._kind])\n         this.submitDrawableRequest(req._kind, req._nextreq, req._painter, req._method);\n   }\n\n   /** @summary Show specified section in canvas */\n   async showSection(that, on) {\n      switch(that) {\n         case 'Menu': break;\n         case 'StatusBar': break;\n         case 'Editor': break;\n         case 'ToolBar': break;\n         case 'ToolTips': this.setTooltipAllowed(on); break;\n      }\n      return true;\n   }\n\n   /** @summary Method informs that something was changed in the canvas\n     * @desc used to update information on the server (when used with web6gui)\n     * @private */\n   processChanges(kind, painter, subelem) {\n      // check if we could send at least one message more - for some meaningful actions\n      if (!this._websocket || !this._websocket.canSend(2) || !isStr(kind)) return;\n\n      let msg = '';\n      if (!painter) painter = this;\n      switch (kind) {\n         case 'sbits':\n            console.log('Status bits in RCanvas are changed - that to do?');\n            break;\n         case 'frame': // when moving frame\n         case 'zoom':  // when changing zoom inside frame\n            console.log('Frame moved or zoom is changed - that to do?');\n            break;\n         case 'pave_moved':\n            console.log('TPave is moved inside RCanvas - that to do?');\n            break;\n         default:\n            if ((kind.slice(0,5) == 'exec:') && painter?.snapid) {\n               this.submitExec(painter, kind.slice(5), subelem);\n            } else {\n               console.log('UNPROCESSED CHANGES', kind);\n            }\n      }\n\n      if (msg) {\n         console.log('RCanvas::processChanges want to send  ' + msg.length + '  ' + msg.slice(0,40));\n      }\n   }\n\n   /** @summary Handle pad button click event\n     * @private */\n   clickPadButton(funcname, evnt) {\n      if (funcname == 'ToggleGed') return this.activateGed(this, null, 'toggle');\n      if (funcname == 'ToggleStatus') return this.activateStatusBar('toggle');\n      super.clickPadButton(funcname, evnt);\n   }\n\n   /** @summary returns true when event status area exist for the canvas */\n   hasEventStatus() {\n      if (this.testUI5()) return false;\n      if (this.brlayout)\n         return this.brlayout.hasStatus();\n      let hp = getHPainter();\n      return hp ? hp.hasStatusLine() : false;\n   }\n\n   /** @summary Show/toggle event status bar\n     * @private */\n   activateStatusBar(state) {\n      if (this.testUI5()) return;\n      if (this.brlayout)\n         this.brlayout.createStatusLine(23, state);\n      else\n         getHPainter()?.createStatusLine(23, state);\n\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Show online canvas status\n     * @private */\n   showCanvasStatus(...msgs) {\n      if (this.testUI5()) return;\n\n      let br = this.brlayout || getHPainter()?.brlayout;\n\n      br?.showStatus(...msgs);\n   }\n\n   /** @summary Returns true if GED is present on the canvas */\n   hasGed() {\n      if (this.testUI5()) return false;\n      return this.brlayout?.hasContent() ?? false;\n   }\n\n   /** @summary Function used to de-activate GED\n     * @private */\n   removeGed() {\n      if (this.testUI5()) return;\n\n      this.registerForPadEvents(null);\n\n      if (this.ged_view) {\n         this.ged_view.getController().cleanupGed();\n         this.ged_view.destroy();\n         delete this.ged_view;\n      }\n      this.brlayout?.deleteContent(true);\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Get view data for ui5 panel\n     * @private */\n   getUi5PanelData(/* panel_name */) {\n      return { jsroot: { settings, create, parse, toJSON, loadScript, EAxisBits, getColorExec } };\n   }\n\n   /** @summary Function used to activate GED\n     * @return {Promise} when GED is there\n     * @private */\n   async activateGed(objpainter, kind, mode) {\n      if (this.testUI5() || !this.brlayout)\n         return false;\n\n      if (this.brlayout.hasContent()) {\n         if ((mode === 'toggle') || (mode === false))\n            this.removeGed();\n         else\n            objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n         return true;\n      }\n\n      if (mode === false)\n         return false;\n\n      let btns = this.brlayout.createBrowserBtns();\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.diamand, 15, 'toggle fix-pos mode')\n                  .style('margin','3px').on('click', () => this.brlayout.toggleKind('fix'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.circle, 15, 'toggle float mode')\n                  .style('margin','3px').on('click', () => this.brlayout.toggleKind('float'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.cross, 15, 'delete GED')\n                  .style('margin','3px').on('click', () => this.removeGed());\n\n      // be aware, that jsroot_browser_hierarchy required for flexible layout that element use full browser area\n      this.brlayout.setBrowserContent(\"<div class='jsroot_browser_hierarchy' id='ged_placeholder'>Loading GED ...</div>\");\n      this.brlayout.setBrowserTitle('GED');\n      this.brlayout.toggleBrowserKind(kind || 'float');\n\n      return new Promise(resolveFunc => {\n\n         loadOpenui5.then(sap => {\n\n            d3_select('#ged_placeholder').text('');\n\n            sap.ui.define(['sap/ui/model/json/JSONModel', 'sap/ui/core/mvc/XMLView'], (JSONModel,XMLView) => {\n\n               let oModel = new JSONModel({ handle: null });\n\n               XMLView.create({\n                  viewName: 'rootui5.canv.view.Ged',\n                  viewData: this.getUi5PanelData('Ged')\n               }).then(oGed => {\n\n                  oGed.setModel(oModel);\n\n                  oGed.placeAt('ged_placeholder');\n\n                  this.ged_view = oGed;\n\n                  // TODO: should be moved into Ged controller - it must be able to detect canvas painter itself\n                  this.registerForPadEvents(oGed.getController().padEventsReceiver.bind(oGed.getController()));\n\n                  objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n                  this.processChanges('sbits', this);\n\n                  resolveFunc(true);\n               });\n            });\n         });\n      });\n   }\n\n   /** @summary produce JSON for RCanvas, which can be used to display canvas once again\n     * @private */\n   produceJSON() {\n      console.error('RCanvasPainter.produceJSON not yet implemented');\n      return '';\n   }\n\n   /** @summary draw RCanvas object */\n   static async draw(dom, can /*, opt */) {\n      let nocanvas = !can;\n      if (nocanvas)\n         can = create('ROOT::Experimental::RCanvas');\n\n      let painter = new RCanvasPainter(dom, can);\n      painter.normal_canvas = !nocanvas;\n      painter.createCanvasSvg(0);\n\n      selectActivePad({ pp: painter, active: false });\n\n      return painter.drawPrimitives().then(() => {\n         painter.addPadButtons();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RCanvasPainter\n\n\n/** @summary draw RPadSnapshot object\n  * @private */\nfunction drawRPadSnapshot(dom, snap /*, opt*/) {\n   let painter = new RCanvasPainter(dom, null);\n   painter.normal_canvas = false;\n   painter.batch_mode = isBatchMode();\n   return painter.syncDraw(true).then(() => painter.redrawPadSnap(snap)).then(() => {\n      painter.confirmDraw();\n      painter.showPadButtons();\n      return painter;\n   });\n}\n\n/** @summary Ensure RCanvas and RFrame for the painter object\n  * @param {Object} painter  - painter object to process\n  * @param {string|boolean} frame_kind  - false for no frame or '3d' for special 3D mode\n  * @desc Assigns DOM, creates and draw RCanvas and RFrame if necessary, add painter to pad list of painters\n  * @return {Promise} for ready */\nasync function ensureRCanvas(painter, frame_kind) {\n   if (!painter)\n      return Promise.reject(Error('Painter not provided in ensureRCanvas'));\n\n   // simple check - if canvas there, can use painter\n   let pr = painter.getCanvSvg().empty() ? RCanvasPainter.draw(painter.getDom(), null /* , noframe */) : Promise.resolve(true);\n\n   return pr.then(() => {\n      if ((frame_kind !== false) && painter.getFrameSvg().select('.main_layer').empty())\n         return RFramePainter.draw(painter.getDom(), null, isStr(frame_kind) ? frame_kind : '');\n   }).then(() => {\n      painter.addToPadPrimitives();\n      return painter;\n   });\n}\n\n\n/** @summary Function used for direct draw of RFrameTitle\n  * @private */\nfunction drawRFrameTitle(reason, drag) {\n   let fp = this.getFramePainter();\n   if (!fp)\n      return console.log('no frame painter - no title');\n\n   let rect         = fp.getFrameRect(),\n       fx           = rect.x,\n       fy           = rect.y,\n       fw           = rect.width,\n       // fh           = rect.height,\n       ph           = this.getPadPainter().getPadHeight(),\n       title        = this.getObject(),\n       title_margin = this.v7EvalLength('margin', ph, 0.02),\n       title_width  = fw,\n       title_height = this.v7EvalLength('height', ph, 0.05),\n       textFont     = this.v7EvalFont('text', { size: 0.07, color: 'black', align: 22 });\n\n   if (reason == 'drag') {\n      title_height = drag.height;\n      title_margin = fy - drag.y - drag.height;\n      let changes = {};\n      this.v7AttrChange(changes, 'margin', title_margin / ph);\n      this.v7AttrChange(changes, 'height', title_height / ph);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n   }\n\n   this.createG();\n\n   this.draw_g.attr('transform',`translate(${fx},${Math.round(fy-title_margin-title_height)})`);\n\n   let arg = { x: title_width/2, y: title_height/2, text: title.fText, latex: 1 };\n\n   this.startTextDrawing(textFont, 'font');\n\n   this.drawText(arg);\n\n   return this.finishTextDrawing().then(() => {\n      if (!isBatchMode())\n        addDragHandler(this, { x: fx, y: Math.round(fy-title_margin-title_height), width: title_width, height: title_height,\n                               minwidth: 20, minheight: 20, no_change_x: true, redraw: d => this.redraw('drag', d) });\n   });\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n\nregisterMethods('ROOT::Experimental::RPalette', {\n\n   extractRColor(rcolor) {\n     return rcolor.fColor || 'black';\n   },\n\n   getColor(indx) {\n      return this.palette[indx];\n   },\n\n   getContourIndex(zc) {\n      let cntr = this.fContour, l = 0, r = cntr.length-1, mid;\n\n      if (zc < cntr[0]) return -1;\n      if (zc >= cntr[r]) return r-1;\n\n      if (this.fCustomContour) {\n         while (l < r-1) {\n            mid = Math.round((l+r)/2);\n            if (cntr[mid] > zc) r = mid; else l = mid;\n         }\n         return l;\n      }\n\n      // last color in palette starts from level cntr[r-1]\n      return Math.floor((zc-cntr[0]) / (cntr[r-1] - cntr[0]) * (r-1));\n   },\n\n   getContourColor(zc) {\n      let zindx = this.getContourIndex(zc);\n      return (zindx < 0) ? '' : this.getColor(zindx);\n   },\n\n   getContour() {\n      return this.fContour && (this.fContour.length > 1) ? this.fContour : null;\n   },\n\n   deleteContour() {\n      delete this.fContour;\n   },\n\n   calcColor(value, entry1, entry2) {\n      let dist = entry2.fOrdinal - entry1.fOrdinal,\n          r1 = entry2.fOrdinal - value,\n          r2 = value - entry1.fOrdinal;\n\n      if (!this.fInterpolate || (dist <= 0))\n         return (r1 < r2) ? entry2.fColor : entry1.fColor;\n\n      // interpolate\n      let col1 = d3_rgb(this.extractRColor(entry1.fColor)),\n          col2 = d3_rgb(this.extractRColor(entry2.fColor)),\n          color = d3_rgb(Math.round((col1.r*r1 + col2.r*r2)/dist),\n                         Math.round((col1.g*r1 + col2.g*r2)/dist),\n                         Math.round((col1.b*r1 + col2.b*r2)/dist));\n\n      return color.toString();\n   },\n\n   createPaletteColors(len) {\n      let arr = [], indx = 0;\n\n      while (arr.length < len) {\n         let value = arr.length / (len-1);\n\n         let entry = this.fColors[indx];\n\n         if ((Math.abs(entry.fOrdinal - value) < 0.0001) || (indx == this.fColors.length - 1)) {\n            arr.push(this.extractRColor(entry.fColor));\n            continue;\n         }\n\n         let next = this.fColors[indx+1];\n         if (next.fOrdinal <= value)\n            indx++;\n         else\n            arr.push(this.calcColor(value, entry, next));\n      }\n\n      return arr;\n   },\n\n   getColorOrdinal(value) {\n      // extract color with ordinal value between 0 and 1\n      if (!this.fColors)\n         return 'black';\n      if ((typeof value != 'number') || (value < 0))\n         value = 0;\n      else if (value > 1)\n         value = 1;\n\n      // TODO: implement better way to find index\n\n      let entry, next = this.fColors[0];\n      for (let indx = 0; indx < this.fColors.length-1; ++indx) {\n         entry = next;\n\n         if (Math.abs(entry.fOrdinal - value) < 0.0001)\n            return this.extractRColor(entry.fColor);\n\n         next = this.fColors[indx+1];\n         if (next.fOrdinal > value)\n            return this.calcColor(value, entry, next);\n      }\n\n      return this.extractRColor(next.fColor);\n   },\n\n   setFullRange(min, max) {\n      // set full z scale range, used in zooming\n      this.full_min = min;\n      this.full_max = max;\n   },\n\n   createContour(logz, nlevels, zmin, zmax, zminpositive) {\n      this.fContour = [];\n      delete this.fCustomContour;\n      this.colzmin = zmin;\n      this.colzmax = zmax;\n\n      if (logz) {\n         if (this.colzmax <= 0) this.colzmax = 1.;\n         if (this.colzmin <= 0)\n            if ((zminpositive === undefined) || (zminpositive <= 0))\n               this.colzmin = 0.0001*this.colzmax;\n            else\n               this.colzmin = ((zminpositive < 3) || (zminpositive>100)) ? 0.3*zminpositive : 1;\n         if (this.colzmin >= this.colzmax) this.colzmin = 0.0001*this.colzmax;\n\n         let logmin = Math.log(this.colzmin)/Math.log(10),\n             logmax = Math.log(this.colzmax)/Math.log(10),\n             dz = (logmax-logmin)/nlevels;\n         this.fContour.push(this.colzmin);\n         for (let level=1; level<nlevels; level++)\n            this.fContour.push(Math.exp((logmin + dz*level)*Math.log(10)));\n         this.fContour.push(this.colzmax);\n         this.fCustomContour = true;\n      } else {\n         if ((this.colzmin === this.colzmax) && (this.colzmin !== 0)) {\n            this.colzmax += 0.01*Math.abs(this.colzmax);\n            this.colzmin -= 0.01*Math.abs(this.colzmin);\n         }\n         let dz = (this.colzmax-this.colzmin)/nlevels;\n         for (let level=0; level<=nlevels; level++)\n            this.fContour.push(this.colzmin + dz*level);\n      }\n\n      if (!this.palette || (this.palette.length != nlevels))\n         this.palette = this.createPaletteColors(nlevels);\n   }\n\n});\n\n/** @summary draw RFont object\n  * @private */\nfunction drawRFont() {\n   let font   = this.getObject(),\n       svg    = this.getCanvSvg(),\n       defs   = svg.select('.canvas_defs'),\n       clname = 'custom_font_' + font.fFamily+font.fWeight+font.fStyle;\n\n   if (defs.empty())\n      defs = svg.insert('svg:defs', ':first-child').attr('class', 'canvas_defs');\n\n   let entry = defs.select('.' + clname);\n   if (entry.empty())\n      entry = defs.append('style').attr('type', 'text/css').attr('class', clname);\n\n   entry.text(`@font-face { font-family: \"${font.fFamily}\"; font-weight: ${font.fWeight ? font.fWeight : \"normal\"}; font-style: ${font.fStyle ? font.fStyle : \"normal\"}; src: ${font.fSrc}; }`);\n\n   if (font.fDefault)\n      this.getPadPainter()._dfltRFont = font;\n\n   return true;\n}\n\n/** @summary draw RAxis object\n  * @private */\nfunction drawRAxis(dom, obj, opt) {\n   let painter = new RAxisPainter(dom, obj, opt);\n   painter.disable_zooming = true;\n   return ensureRCanvas(painter, false)\n           .then(() => painter.redraw())\n           .then(() => painter);\n}\n\n/** @summary draw RFrame object\n  * @private */\nfunction drawRFrame(dom, obj, opt) {\n   let p = new RFramePainter(dom, obj);\n   if (opt == '3d') p.mode3d = true;\n   return ensureRCanvas(p, false).then(() => p.redraw());\n}\n\nexport { ensureRCanvas, drawRPadSnapshot,\n         drawRFrameTitle, drawRFont, drawRAxis, drawRFrame,\n         RObjectPainter, RPadPainter, RCanvasPainter };\n"],"x_google_ignoreList":[0,1,2,3,4,5]}