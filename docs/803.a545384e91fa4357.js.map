{"version":3,"file":"803.a545384e91fa4357.js","mappings":"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","names":["drawText","_drawText","apply","this","arguments","_asyncToGenerator","text","getObject","pp","getPadPainter","w","getPadWidth","h","getPadHeight","fp","getFramePainter","pos_x","fX","pos_y","fY","fact","annot","matchObjectType","clTAnnotation","createAttText","attr","mode3d","isFunc","convert3DtoPadNDC","pos","fZ","x","y","isndc","TestBit","BIT","getRootPad","fTextAlign","createG","draw_g","axisToSvg","arg","textatt","createArg","fTitle","latex","_typename","clTLatex","clTMathText","startTextDrawing","font","getSize","finishTextDrawing","then","isBatchMode","pos_dx","pos_dy","moveDrag","dx","dy","makeTranslate","moveEnd","not_changed","svgToAxis","submitCanvExec","addMoveHandler","processRender3D","handleRender3D","new_x","new_y","assignContextMenu","kToFront","drawPolyLine","polyline","kPolyLineNDC","opt","getDrawOpt","fOption","dofill","clTPolyLine","func","getAxisToSvgFunc","createAttLine","createAttFill","cmd","n","fLastPoint","elem","append","call","fillatt","lineatt","style","select","exec","redraw","drawEllipse","ellipse","closed_ellipse","fPhimin","fPhimax","is_crown","funcs","fX1","fY1","rx","fR1","fR2","ry","path","rx1","ry2","ry1","rx2","large_arc","a1","Math","PI","a2","dx1","round","cos","dy1","sin","fTheta","ct","st","phi1","np","dphi","lastx","lasty","angle","px","py","drawPie","pie","nb","fPieSlices","length","xc","yc","fRadius","total","af","fAngularOffset","x1","y1","fValue","slice","x2","y2","drawBox","box","draw_line","toUpperCase","indexOf","empty","color","fX2","fY2","borderMode","fBorderMode","fBorderSize","hasColor","borderSize","getPathes","xx","min","yy","ww","abs","hh","pww","phh","side1","side2","paths","d3_rgb","brighter","formatHex","darker","moveStart","c_x1","c_x2","c_y1","c_y2","nodes","selectAll","forEach","i","d3_select","drawMarker","marker","kMarkerNDC","createAttMarker","markeratt","create","drawPolyMarker","poly","drawJSImage","dom","obj","painter","BasePainter","main","selectDom","img","fName","setTopPainter"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/draw/more.mjs"],"sourcesContent":["import { BIT, isFunc, clTLatex, clTMathText, clTAnnotation, clTPolyLine } from '../core.mjs';\nimport { rgb as d3_rgb, select as d3_select } from '../d3.mjs';\nimport { BasePainter, makeTranslate } from '../base/BasePainter.mjs';\nimport { addMoveHandler } from '../gui/utils.mjs';\nimport { assignContextMenu, kToFront } from '../gui/menu.mjs';\n\n\n/** @summary Draw TText\n  * @private */\nasync function drawText() {\n   const text = this.getObject(),\n         pp = this.getPadPainter(),\n         w = pp.getPadWidth(),\n         h = pp.getPadHeight(),\n         fp = this.getFramePainter();\n   let pos_x = text.fX, pos_y = text.fY,\n       fact = 1,\n       annot = this.matchObjectType(clTAnnotation);\n\n   this.createAttText({ attr: text });\n\n   if (annot && fp?.mode3d && isFunc(fp?.convert3DtoPadNDC)) {\n      const pos = fp.convert3DtoPadNDC(text.fX, text.fY, text.fZ);\n      pos_x = pos.x;\n      pos_y = pos.y;\n      this.isndc = true;\n      annot = '3d';\n   } else if (text.TestBit(BIT(14))) {\n      // NDC coordinates\n      this.isndc = true;\n   } else if (pp.getRootPad(true)) {\n      // force pad coordiantes\n   } else {\n      // place in the middle\n      this.isndc = true;\n      pos_x = pos_y = 0.5;\n      text.fTextAlign = 22;\n   }\n\n   this.createG();\n\n   this.draw_g.attr('transform', null); // remove transofrm from interactive changes\n\n   this.pos_x = this.axisToSvg('x', pos_x, this.isndc);\n   this.pos_y = this.axisToSvg('y', pos_y, this.isndc);\n\n   const arg = this.textatt.createArg({ x: this.pos_x, y: this.pos_y, text: text.fTitle, latex: 0 });\n\n   if ((text._typename === clTLatex) || annot) {\n      arg.latex = 1;\n      fact = 0.9;\n   } else if (text._typename === clTMathText) {\n      arg.latex = 2;\n      fact = 0.8;\n   }\n\n   this.startTextDrawing(this.textatt.font, this.textatt.getSize(w, h, fact, 0.05));\n\n   this.drawText(arg);\n\n   return this.finishTextDrawing().then(() => {\n      if (this.isBatchMode()) return this;\n\n      this.pos_dx = this.pos_dy = 0;\n\n      if (!this.moveDrag) {\n         this.moveDrag = function(dx, dy) {\n            this.pos_dx += dx;\n            this.pos_dy += dy;\n            makeTranslate(this.draw_g, this.pos_dx, this.pos_dy);\n         };\n      }\n\n      if (!this.moveEnd) {\n         this.moveEnd = function(not_changed) {\n            if (not_changed) return;\n            const text = this.getObject();\n            text.fX = this.svgToAxis('x', this.pos_x + this.pos_dx, this.isndc);\n            text.fY = this.svgToAxis('y', this.pos_y + this.pos_dy, this.isndc);\n            this.submitCanvExec(`SetX(${text.fX});;SetY(${text.fY});;`);\n         };\n      }\n\n      if (annot !== '3d')\n         addMoveHandler(this);\n      else {\n         fp.processRender3D = true;\n         this.handleRender3D = () => {\n            const pos = fp.convert3DtoPadNDC(text.fX, text.fY, text.fZ),\n                  new_x = this.axisToSvg('x', pos.x, true),\n                  new_y = this.axisToSvg('y', pos.y, true);\n            makeTranslate(this.draw_g, new_x - this.pos_x, new_y - this.pos_y);\n         };\n      }\n\n      assignContextMenu(this, kToFront);\n\n      return this;\n   });\n}\n\n\n/** @summary Draw TPolyLine\n  * @private */\nfunction drawPolyLine() {\n   this.createG();\n\n   const polyline = this.getObject(),\n         kPolyLineNDC = BIT(14),\n         isndc = polyline.TestBit(kPolyLineNDC),\n         opt = this.getDrawOpt() || polyline.fOption,\n         dofill = (polyline._typename === clTPolyLine) && ((opt === 'f') || (opt === 'F')),\n         func = this.getAxisToSvgFunc(isndc);\n\n   this.createAttLine({ attr: polyline });\n   this.createAttFill({ attr: polyline });\n\n   let cmd = '';\n   for (let n = 0; n <= polyline.fLastPoint; ++n)\n      cmd += `${n>0?'L':'M'}${func.x(polyline.fX[n])},${func.y(polyline.fY[n])}`;\n\n   if (dofill)\n      cmd += 'Z';\n\n   const elem = this.draw_g.append('svg:path').attr('d', cmd);\n\n   if (dofill)\n      elem.call(this.fillatt.func);\n   else\n      elem.call(this.lineatt.func).style('fill', 'none');\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.dx = this.dy = 0;\n   this.isndc = isndc;\n\n   this.moveDrag = function(dx, dy) {\n      this.dx += dx;\n      this.dy += dy;\n      makeTranslate(this.draw_g.select('path'), this.dx, this.dy);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const polyline = this.getObject(),\n            func = this.getAxisToSvgFunc(this.isndc);\n      let exec = '';\n\n      for (let n = 0; n <= polyline.fLastPoint; ++n) {\n         const x = this.svgToAxis('x', func.x(polyline.fX[n]) + this.dx, this.isndc),\n               y = this.svgToAxis('y', func.y(polyline.fY[n]) + this.dy, this.isndc);\n         polyline.fX[n] = x;\n         polyline.fY[n] = y;\n         exec += `SetPoint(${n},${x},${y});;`;\n      }\n      this.submitCanvExec(exec + 'Notify();;');\n      this.redraw();\n   };\n}\n\n/** @summary Draw TEllipse\n  * @private */\nfunction drawEllipse() {\n   const ellipse = this.getObject(),\n         closed_ellipse = (ellipse.fPhimin === 0) && (ellipse.fPhimax === 360),\n         is_crown = (ellipse._typename === 'TCrown');\n\n   this.createAttLine({ attr: ellipse });\n   this.createAttFill({ attr: ellipse });\n\n   this.createG();\n\n   const funcs = this.getAxisToSvgFunc(),\n         x = funcs.x(ellipse.fX1),\n         y = funcs.y(ellipse.fY1),\n         rx = is_crown && (ellipse.fR1 <= 0) ? (funcs.x(ellipse.fX1 + ellipse.fR2) - x) : (funcs.x(ellipse.fX1 + ellipse.fR1) - x),\n         ry = y - funcs.y(ellipse.fY1 + ellipse.fR2);\n\n   let path = '';\n\n   if (is_crown && (ellipse.fR1 > 0)) {\n      const rx1 = rx, ry2 = ry,\n            ry1 = y - funcs.y(ellipse.fY1 + ellipse.fR1),\n            rx2 = funcs.x(ellipse.fX1 + ellipse.fR2) - x;\n\n      if (closed_ellipse) {\n         path = `M${-rx1},0A${rx1},${ry1},0,1,0,${rx1},0A${rx1},${ry1},0,1,0,${-rx1},0` +\n                `M${-rx2},0A${rx2},${ry2},0,1,0,${rx2},0A${rx2},${ry2},0,1,0,${-rx2},0`;\n      } else {\n         const large_arc = (ellipse.fPhimax-ellipse.fPhimin>=180) ? 1 : 0,\n               a1 = ellipse.fPhimin*Math.PI/180, a2 = ellipse.fPhimax*Math.PI/180,\n               dx1 = Math.round(rx1*Math.cos(a1)), dy1 = Math.round(ry1*Math.sin(a1)),\n               dx2 = Math.round(rx1*Math.cos(a2)), dy2 = Math.round(ry1*Math.sin(a2)),\n               dx3 = Math.round(rx2*Math.cos(a1)), dy3 = Math.round(ry2*Math.sin(a1)),\n               dx4 = Math.round(rx2*Math.cos(a2)), dy4 = Math.round(ry2*Math.sin(a2));\n\n         path = `M${dx2},${dy2}A${rx1},${ry1},0,${large_arc},0,${dx1},${dy1}` +\n                `L${dx3},${dy3}A${rx2},${ry2},0,${large_arc},1,${dx4},${dy4}Z`;\n      }\n   } else if (ellipse.fTheta === 0) {\n      if (closed_ellipse)\n         path = `M${-rx},0A${rx},${ry},0,1,0,${rx},0A${rx},${ry},0,1,0,${-rx},0Z`;\n      else {\n         const x1 = Math.round(rx * Math.cos(ellipse.fPhimin*Math.PI/180)),\n               y1 = Math.round(ry * Math.sin(ellipse.fPhimin*Math.PI/180)),\n               x2 = Math.round(rx * Math.cos(ellipse.fPhimax*Math.PI/180)),\n               y2 = Math.round(ry * Math.sin(ellipse.fPhimax*Math.PI/180));\n         path = `M0,0L${x1},${y1}A${rx},${ry},0,1,1,${x2},${y2}Z`;\n      }\n   } else {\n     const ct = Math.cos(ellipse.fTheta*Math.PI/180),\n           st = Math.sin(ellipse.fTheta*Math.PI/180),\n           phi1 = ellipse.fPhimin*Math.PI/180,\n           phi2 = ellipse.fPhimax*Math.PI/180,\n           np = 200,\n           dphi = (phi2-phi1) / (np - (closed_ellipse ? 0 : 1));\n     let lastx = 0, lasty = 0;\n     if (!closed_ellipse) path = 'M0,0';\n     for (let n = 0; n < np; ++n) {\n         const angle = phi1 + n*dphi,\n               dx = ellipse.fR1 * Math.cos(angle),\n               dy = ellipse.fR2 * Math.sin(angle),\n               px = funcs.x(ellipse.fX1 + dx*ct - dy*st) - x,\n               py = funcs.y(ellipse.fY1 + dx*st + dy*ct) - y;\n         if (!path)\n            path = `M${px},${py}`;\n         else if (lastx === px)\n            path += `v${py-lasty}`;\n         else if (lasty === py)\n            path += `h${px-lastx}`;\n         else\n            path += `l${px-lastx},${py-lasty}`;\n         lastx = px; lasty = py;\n     }\n     path += 'Z';\n   }\n\n   this.x = x;\n   this.y = y;\n\n   makeTranslate(this.draw_g.append('svg:path'), x, y)\n      .attr('d', path)\n      .call(this.lineatt.func)\n      .call(this.fillatt.func);\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.moveDrag = function(dx, dy) {\n      this.x += dx;\n      this.y += dy;\n      makeTranslate(this.draw_g.select('path'), this.x, this.y);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const ellipse = this.getObject();\n      ellipse.fX1 = this.svgToAxis('x', this.x);\n      ellipse.fY1 = this.svgToAxis('y', this.y);\n      this.submitCanvExec(`SetX1(${ellipse.fX1});;SetY1(${ellipse.fY1});;Notify();;`);\n   };\n}\n\n/** @summary Draw TPie\n  * @private */\nfunction drawPie() {\n   this.createG();\n\n   const pie = this.getObject(),\n         nb = pie.fPieSlices.length,\n         xc = this.axisToSvg('x', pie.fX),\n         yc = this.axisToSvg('y', pie.fY),\n         rx = this.axisToSvg('x', pie.fX + pie.fRadius) - xc,\n         ry = this.axisToSvg('y', pie.fY + pie.fRadius) - yc;\n\n   makeTranslate(this.draw_g, xc, yc);\n\n   // Draw the slices\n   let total = 0,\n       af = (pie.fAngularOffset*Math.PI)/180,\n       x1 = Math.round(rx*Math.cos(af)),\n       y1 = Math.round(ry*Math.sin(af));\n\n   for (let n = 0; n < nb; n++)\n      total += pie.fPieSlices[n].fValue;\n\n   for (let n = 0; n < nb; n++) {\n      const slice = pie.fPieSlices[n];\n\n      this.createAttLine({ attr: slice });\n      this.createAttFill({ attr: slice });\n\n      af += slice.fValue/total*2*Math.PI;\n      const x2 = Math.round(rx*Math.cos(af)),\n            y2 = Math.round(ry*Math.sin(af));\n\n      this.draw_g\n          .append('svg:path')\n          .attr('d', `M0,0L${x1},${y1}A${rx},${ry},0,0,0,${x2},${y2}z`)\n          .call(this.lineatt.func)\n          .call(this.fillatt.func);\n      x1 = x2; y1 = y2;\n   }\n}\n\n/** @summary Draw TBox\n  * @private */\nfunction drawBox() {\n   const box = this.getObject(),\n         opt = this.getDrawOpt(),\n         draw_line = (opt.toUpperCase().indexOf('L') >= 0);\n\n   this.createAttLine({ attr: box });\n   this.createAttFill({ attr: box });\n\n   // if box filled, contour line drawn only with 'L' draw option:\n   if (!this.fillatt.empty() && !draw_line)\n      this.lineatt.color = 'none';\n\n   this.createG();\n\n   this.x1 = this.axisToSvg('x', box.fX1);\n   this.x2 = this.axisToSvg('x', box.fX2);\n   this.y1 = this.axisToSvg('y', box.fY1);\n   this.y2 = this.axisToSvg('y', box.fY2);\n   this.borderMode = (box.fBorderMode && box.fBorderSize && this.fillatt.hasColor()) ? box.fBorderMode : 0;\n   this.borderSize = box.fBorderSize;\n\n   this.getPathes = () => {\n      const xx = Math.min(this.x1, this.x2), yy = Math.min(this.y1, this.y2),\n            ww = Math.abs(this.x2 - this.x1), hh = Math.abs(this.y1 - this.y2),\n            path = `M${xx},${yy}h${ww}v${hh}h${-ww}z`;\n      if (!this.borderMode)\n         return [path];\n      const pww = this.borderSize, phh = this.borderSize,\n            side1 = `M${xx},${yy}h${ww}l${-pww},${phh}h${2*pww-ww}v${hh-2*phh}l${-pww},${phh}z`,\n            side2 = `M${xx+ww},${yy+hh}v${-hh}l${-pww},${phh}v${hh-2*phh}h${2*pww-ww}l${-pww},${phh}z`;\n\n      return (this.borderMode > 0) ? [path, side1, side2] : [path, side2, side1];\n   };\n\n   const paths = this.getPathes();\n\n   this.draw_g\n       .append('svg:path')\n       .attr('d', paths[0])\n       .call(this.lineatt.func)\n       .call(this.fillatt.func);\n\n   if (this.borderMode) {\n      this.draw_g.append('svg:path')\n                 .attr('d', paths[1])\n                 .call(this.fillatt.func)\n                 .style('fill', d3_rgb(this.fillatt.color).brighter(0.5).formatHex());\n\n      this.draw_g.append('svg:path')\n                 .attr('d', paths[2])\n                 .call(this.fillatt.func)\n                 .style('fill', d3_rgb(this.fillatt.color).darker(0.5).formatHex());\n   }\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.moveStart = function(x, y) {\n      const ww = Math.abs(this.x2 - this.x1), hh = Math.abs(this.y1 - this.y2);\n\n      this.c_x1 = Math.abs(x - this.x2) > ww*0.1;\n      this.c_x2 = Math.abs(x - this.x1) > ww*0.1;\n      this.c_y1 = Math.abs(y - this.y2) > hh*0.1;\n      this.c_y2 = Math.abs(y - this.y1) > hh*0.1;\n      if (this.c_x1 !== this.c_x2 && this.c_y1 && this.c_y2)\n         this.c_y1 = this.c_y2 = false;\n      if (this.c_y1 !== this.c_y2 && this.c_x1 && this.c_x2)\n         this.c_x1 = this.c_x2 = false;\n   };\n\n   this.moveDrag = function(dx, dy) {\n      if (this.c_x1) this.x1 += dx;\n      if (this.c_x2) this.x2 += dx;\n      if (this.c_y1) this.y1 += dy;\n      if (this.c_y2) this.y2 += dy;\n\n      const nodes = this.draw_g.selectAll('path').nodes(),\n            pathes = this.getPathes();\n\n      pathes.forEach((path, i) => d3_select(nodes[i]).attr('d', path));\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const box = this.getObject();\n      let exec = '';\n      if (this.c_x1) { box.fX1 = this.svgToAxis('x', this.x1); exec += `SetX1(${box.fX1});;`; }\n      if (this.c_x2) { box.fX2 = this.svgToAxis('x', this.x2); exec += `SetX2(${box.fX2});;`; }\n      if (this.c_y1) { box.fY1 = this.svgToAxis('y', this.y1); exec += `SetY1(${box.fY1});;`; }\n      if (this.c_y2) { box.fY2 = this.svgToAxis('y', this.y2); exec += `SetY2(${box.fY2});;`; }\n      this.submitCanvExec(exec + 'Notify();;');\n   };\n}\n\n/** @summary Draw TMarker\n  * @private */\nfunction drawMarker() {\n   const marker = this.getObject(),\n         kMarkerNDC = BIT(14);\n\n   this.isndc = marker.TestBit(kMarkerNDC);\n\n   this.createAttMarker({ attr: marker });\n\n   this.createG();\n\n   const x = this.axisToSvg('x', marker.fX, this.isndc),\n         y = this.axisToSvg('y', marker.fY, this.isndc),\n         path = this.markeratt.create(x, y);\n\n   if (path) {\n      this.draw_g.append('svg:path')\n          .attr('d', path)\n          .call(this.markeratt.func);\n   }\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.dx = this.dy = 0;\n\n   this.moveDrag = function(dx, dy) {\n      this.dx += dx;\n      this.dy += dy;\n      makeTranslate(this.draw_g.select('path'), this.dx, this.dy);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const marker = this.getObject();\n      marker.fX = this.svgToAxis('x', this.axisToSvg('x', marker.fX, this.isndc) + this.dx, this.isndc);\n      marker.fY = this.svgToAxis('y', this.axisToSvg('y', marker.fY, this.isndc) + this.dy, this.isndc);\n      this.submitCanvExec(`SetX(${marker.fX});;SetY(${marker.fY});;Notify();;`);\n      this.redraw();\n   };\n}\n\n/** @summary Draw TPolyMarker\n  * @private */\nfunction drawPolyMarker() {\n   const poly = this.getObject(),\n         func = this.getAxisToSvgFunc();\n\n   this.createAttMarker({ attr: poly });\n\n   this.createG();\n\n   let path = '';\n   for (let n = 0; n <= poly.fLastPoint; ++n)\n      path += this.markeratt.create(func.x(poly.fX[n]), func.y(poly.fY[n]));\n\n   if (path) {\n      this.draw_g.append('svg:path')\n          .attr('d', path)\n          .call(this.markeratt.func);\n   }\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.dx = this.dy = 0;\n\n   this.moveDrag = function(dx, dy) {\n      this.dx += dx;\n      this.dy += dy;\n      makeTranslate(this.draw_g.select('path'), this.dx, this.dy);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const poly = this.getObject(),\n            func = this.getAxisToSvgFunc();\n\n      let exec = '';\n      for (let n = 0; n <= poly.fLastPoint; ++n) {\n         const x = this.svgToAxis('x', func.x(poly.fX[n]) + this.dx),\n               y = this.svgToAxis('y', func.y(poly.fY[n]) + this.dy);\n         poly.fX[n] = x;\n         poly.fY[n] = y;\n         exec += `SetPoint(${n},${x},${y});;`;\n      }\n      this.submitCanvExec(exec + 'Notify();;');\n      this.redraw();\n   };\n}\n\n/** @summary Draw JS image\n  * @private */\nfunction drawJSImage(dom, obj, opt) {\n   const painter = new BasePainter(dom),\n         main = painter.selectDom(),\n         img = main.append('img').attr('src', obj.fName).attr('title', obj.fTitle || obj.fName);\n\n   if (opt && opt.indexOf('scale') >= 0)\n      img.style('width', '100%').style('height', '100%');\n   else if (opt && opt.indexOf('center') >= 0) {\n      main.style('position', 'relative');\n      img.attr('style', 'margin: 0; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);');\n   }\n\n   painter.setTopPainter();\n\n   return painter;\n}\n\nexport { drawText, drawPolyLine, drawEllipse, drawPie, drawBox,\n         drawMarker, drawPolyMarker, drawJSImage };\n"],"x_google_ignoreList":[0]}