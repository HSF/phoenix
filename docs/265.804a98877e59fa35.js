"use strict";(self.webpackChunkphoenix_app=self.webpackChunkphoenix_app||[]).push([[265],{7265:(T,P,p)=>{p.r(P),p.d(P,{TGraphPolarPainter:()=>y,TGraphPolargramPainter:()=>u});var w=p(5774),x=p(4186),_=p(3324),m=p(165),M=p(2481),E=p(2725),v=p(1564);class u extends M.JW{constructor(t,r){super(t,r),this.$polargram=!0,this.zoom_rmin=this.zoom_rmax=0}translate(t,r,s){let e=this.r(r),i=e/this.szx*this.szy,a=e*Math.cos(-t-this.angle),l=i*Math.sin(-t-this.angle);return s||(a=Math.round(a),l=Math.round(l),e=Math.round(e),i=Math.round(i)),{grx:a,gry:l,rx:e,ry:i}}format(t){return t===Math.round(t)?t.toString():this.ndig>10?t.toExponential(4):t.toFixed(this.ndig>0?this.ndig:0)}axisAsText(t,r){return"r"===t?r===Math.round(r)?r.toString():this.ndig>10?r.toExponential(4):r.toFixed(this.ndig+2):(r*=180/Math.PI)===Math.round(r)?r.toString():r.toFixed(1)}getFrameRect(){const t=this.getPadPainter(),r=t.getRootPad(!0),s=t.getPadWidth(),e=t.getPadHeight(),i={};return r?(i.szx=Math.round(Math.max(.1,.5-Math.max(r.fLeftMargin,r.fRightMargin))*s),i.szy=Math.round(Math.max(.1,.5-Math.max(r.fBottomMargin,r.fTopMargin))*e)):(i.szx=Math.round(.5*s),i.szy=Math.round(.5*e)),i.width=2*i.szx,i.height=2*i.szy,i.x=Math.round(s/2-i.szx),i.y=Math.round(e/2-i.szy),i.hint_delta_x=i.szx,i.hint_delta_y=i.szy,i.transform=(0,m.bk)(i.x,i.y)||"",i}mouseEvent(t,r){const e=this.getLayerSvg("primitives_layer").select(".interactive_ellipse");if(e.empty())return;let i=null;if("leave"!==t){const a=(0,_.Wn)(r,e.node());i={x:a[0],y:a[1],touch:!1}}this.processFrameTooltipEvent(i)}mouseWheel(t){t.stopPropagation(),t.preventDefault(),this.processFrameTooltipEvent(null);const r=this.getObject();if(!r)return;let s=t.wheelDelta?-t.wheelDelta:t.deltaY||t.detail;if(!s)return;s=s<0?-.2:.2;let e=this.scale_rmin,i=this.scale_rmax;i+=s*(i-e),(e<r.fRwrmin||i>r.fRwrmax)&&(e=i=0),(this.zoom_rmin!==e||this.zoom_rmax!==i)&&(this.zoom_rmin=e,this.zoom_rmax=i,this.redrawPad())}redraw(){if(!this.isMainPainter())return;const t=this.getObject(),r=this.getPadPainter().getFrameRect();this.createG(),(0,m.bk)(this.draw_g,Math.round(r.x+r.width/2),Math.round(r.y+r.height/2)),this.szx=r.szx,this.szy=r.szy,this.scale_rmin=t.fRwrmin,this.scale_rmax=t.fRwrmax,this.zoom_rmin!==this.zoom_rmax&&(this.scale_rmin=this.zoom_rmin,this.scale_rmax=this.zoom_rmax),this.r=(0,_.m4)().domain([this.scale_rmin,this.scale_rmax]).range([0,this.szx]),this.angle=t.fAxisAngle||0;const s=this.r.ticks(5);let e=Math.floor(t.fNdivRad%1e4/100);this.createAttLine({attr:t}),this.gridatt||(this.gridatt=this.createAttLine({color:t.fLineColor,style:2,width:1,std:!1}));const i=Math.abs(t.fRwrmax-t.fRwrmin);this.ndig=i<=0?-3:Math.round(Math.log10(s.length/i));let a=[],l=0;for(;l<s.length;){const o=this.format(s[l]);if(a.indexOf(o)>=0){if(++this.ndig>10)break;a=[],l=0}else a.push(o),l++}let c=!1;s[s.length-1]<t.fRwrmax&&this.zoom_rmin===this.zoom_rmax&&(s.push(t.fRwrmax),c=!0),this.startTextDrawing(t.fRadialLabelFont,Math.round(t.fRadialTextSize*this.szy*2));for(let o=0;o<s.length;++o){let f=this.r(s[o]),h=f/this.szx*this.szy;if(this.draw_g.append("ellipse").attr("cx",0).attr("cy",0).attr("rx",Math.round(f)).attr("ry",Math.round(h)).style("fill","none").call(this.lineatt.func),(o<s.length-1||!c)&&this.drawText({align:23,x:Math.round(f),y:Math.round(t.fRadialTextSize*this.szy*.5),text:this.format(s[o]),color:this.getColor(t.fRadialLabelColor),latex:0}),e>1&&(o<s.length-1||!c)){const d=(s[1]-s[0])/e;for(let g=1;g<e;++g){const z=s[o]+d*g;if(z>this.scale_rmax)break;f=this.r(z),h=f/this.szx*this.szy,this.draw_g.append("ellipse").attr("cx",0).attr("cy",0).attr("rx",Math.round(f)).attr("ry",Math.round(h)).style("fill","none").call(this.gridatt.func)}}}let n=t.fNdivPol%100;return 8!==n&&3!==n&&(n=8),this.finishTextDrawing().then(()=>{const o=Math.round(t.fPolarTextSize*this.szy*2);this.startTextDrawing(t.fPolarLabelFont,o),a=8===n?["0","#frac{#pi}{4}","#frac{#pi}{2}","#frac{3#pi}{4}","#pi","#frac{5#pi}{4}","#frac{3#pi}{2}","#frac{7#pi}{4}"]:["0","#frac{2#pi}{3}","#frac{4#pi}{3}"];const f=[12,11,21,31,32,33,23,13];for(let h=0;h<n;++h){const d=2*-h*Math.PI/n-this.angle;this.draw_g.append("svg:path").attr("d",`M0,0L${Math.round(this.szx*Math.cos(d))},${Math.round(this.szy*Math.sin(d))}`).call(this.lineatt.func);const g=Math.round(16-d/Math.PI*4)%8;this.drawText({align:f[g],x:Math.round((this.szx+o)*Math.cos(d)),y:Math.round((this.szy+o/this.szx*this.szy)*Math.sin(d)),text:a[h],color:this.getColor(t.fPolarLabelColor),latex:1})}return this.finishTextDrawing()}).then(()=>{if(e=Math.floor(t.fNdivPol%1e4/100),e>1)for(let h=0;h<n*e;++h){if(h%e==0)continue;const d=2*-h*Math.PI/n/e-this.angle;this.draw_g.append("svg:path").attr("d",`M0,0L${Math.round(this.szx*Math.cos(d))},${Math.round(this.szy*Math.sin(d))}`).call(this.gridatt.func)}if(this.isBatchMode())return;v.G_.assign(this);const o=this.getLayerSvg("primitives_layer");let f=o.select(".interactive_ellipse");f.empty()&&(f=o.append("g").classed("most_upper_primitives",!0).append("ellipse").classed("interactive_ellipse",!0).attr("cx",0).attr("cy",0).style("fill","none").style("pointer-events","visibleFill").on("mouseenter",h=>this.mouseEvent("enter",h)).on("mousemove",h=>this.mouseEvent("move",h)).on("mouseleave",h=>this.mouseEvent("leave",h))),f.attr("rx",this.szx).attr("ry",this.szy),(0,_.Lt)(f.node().parentNode).attr("transform",this.draw_g.attr("transform")),x.settings.Zooming&&x.settings.ZoomWheel&&f.on("wheel",h=>this.mouseWheel(h))})}static draw(t,r){return(0,w.A)(function*(){const s=(0,M.Nn)(t);if(s){if(s.getObject()===r)return s;throw Error("Cannot superimpose TGraphPolargram with any other drawings")}const e=new u(t,r);return(0,E.ensureTCanvas)(e,!1).then(()=>(e.setAsMainPainter(),e.redraw())).then(()=>e)})()}}class y extends M.JW{redraw(){this.drawGraphPolar()}decodeOptions(t){const r=new m.nC(t||"L");this.options||(this.options={}),Object.assign(this.options,{mark:r.check("P"),err:r.check("E"),fill:r.check("F"),line:r.check("L"),curve:r.check("C")}),this.storeDrawOpt(t)}drawGraphPolar(){const t=this.getObject(),r=this.getMainPainter();if(!t||!r?.$polargram)return;this.options.mark&&this.createAttMarker({attr:t}),(this.options.err||this.options.line||this.options.curve)&&this.createAttLine({attr:t}),this.options.fill&&this.createAttFill({attr:t}),this.createG(),this.draw_g.attr("transform",r.draw_g.attr("transform"));let s="",e="";const i=[];for(let a=0;a<t.fNpoints;++a){if(t.fY[a]>r.scale_rmax)continue;if(this.options.err){let c=r.translate(t.fX[a],t.fY[a]-t.fEY[a]),n=r.translate(t.fX[a],t.fY[a]+t.fEY[a]);e+=`M${c.grx},${c.gry}L${n.grx},${n.gry}`,c=r.translate(t.fX[a]+t.fEX[a],t.fY[a]),n=r.translate(t.fX[a]-t.fEX[a],t.fY[a]),e+=`M${c.grx},${c.gry}A${n.rx},${n.ry},0,0,1,${n.grx},${n.gry}`}const l=r.translate(t.fX[a],t.fY[a]);this.options.mark&&(s+=this.markeratt.create(l.grx,l.gry)),(this.options.curve||this.options.line||this.options.fill)&&i.push(l)}if((this.options.fill||this.options.line)&&i.length){const a=(0,m.Mw)(i,{line:!0});this.options.fill&&this.draw_g.append("svg:path").attr("d",a+"Z").call(this.fillatt.func),this.options.line&&this.draw_g.append("svg:path").attr("d",a).style("fill","none").call(this.lineatt.func)}this.options.curve&&i.length&&this.draw_g.append("svg:path").attr("d",(0,m.Mw)(i)).style("fill","none").call(this.lineatt.func),e&&this.draw_g.append("svg:path").attr("d",e).style("fill","none").call(this.lineatt.func),s&&this.draw_g.append("svg:path").attr("d",s).call(this.markeratt.func)}createPolargram(){const t=(0,x.create)("TGraphPolargram"),r=this.getObject();let s=r.fY[0]||0,e=s;for(let i=0;i<r.fNpoints;++i)s=Math.min(s,r.fY[i]-r.fEY[i]),e=Math.max(e,r.fY[i]+r.fEY[i]);return t.fRwrmin=s-.1*(e-s),t.fRwrmax=e+.1*(e-s),t}extractTooltip(t){if(!t)return null;const r=this.getObject(),s=this.getMainPainter();let e=1e10,i=-1,a=null;for(let n=0;n<r.fNpoints;++n){const o=s.translate(r.fX[n],r.fY[n]),f=(o.x-t.x)**2+(o.y-t.y)**2;f<e&&(e=f,i=n,a=o)}let l=5;if(this.markeratt?.used&&(l=this.markeratt.getFullSize()),Math.sqrt(e)>l)return null;const c={name:this.getObject().fName,title:this.getObject().fTitle,x:a.x,y:a.y,color1:this.markeratt?.used?this.markeratt.color:this.lineatt.color,exact:Math.sqrt(e)<4,lines:[this.getObjectHint()],binindx:i,menu_dist:l,radius:l};return c.lines.push(`r = ${s.axisAsText("r",r.fY[i])}`,`phi = ${s.axisAsText("phi",r.fX[i])}`),r.fEY&&r.fEY[i]&&c.lines.push(`error r = ${s.axisAsText("r",r.fEY[i])}`),r.fEX&&r.fEX[i]&&c.lines.push(`error phi = ${s.axisAsText("phi",r.fEX[i])}`),c}showTooltip(t){let r=this.draw_g?.selectChild(".tooltip_bin");t&&this.draw_g?(r.empty()&&(r=this.draw_g.append("svg:ellipse").attr("class","tooltip_bin").style("pointer-events","none")),t.changed=r.property("current_bin")!==t.binindx,t.changed&&r.attr("cx",t.x).attr("cy",t.y).attr("rx",Math.round(t.radius)).attr("ry",Math.round(t.radius)).style("fill","none").style("stroke",t.color1).property("current_bin",t.binindx)):r?.remove()}processTooltipEvent(t){const r=this.extractTooltip(t);return(!t||!t.disabled)&&this.showTooltip(r),r}static draw(t,r,s){return(0,w.A)(function*(){const e=new y(t,r);e.decodeOptions(s);const i=e.getMainPainter();if(i&&!i.$polargram)return console.error("Cannot superimpose TGraphPolar with plain histograms"),null;let a=Promise.resolve(null);return i||(r.fPolargram||(r.fPolargram=e.createPolargram()),a=u.draw(t,r.fPolargram)),a.then(()=>(e.addToPadPrimitives(),e.drawGraphPolar(),e))})()}}}}]);
//# sourceMappingURL=265.804a98877e59fa35.js.map